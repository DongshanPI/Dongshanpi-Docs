{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u7f51\u7ad9\u7b80\u4ecb","text":"<p>[ \u4e2d\u6587 | English ] | Espa\u00f1ol ]</p>"},{"location":"#piintroduction","title":"\u4e1c\u5c71Pi\u7b80\u8ff0(Introduction)","text":""},{"location":"#pi","title":"\u4ec0\u4e48\u662f\u4e1c\u5c71Pi\u7cfb\u5217\u5f00\u53d1\u677f\uff1f","text":"<p>\u6ce8\u610f: PI\u7cfb\u5217\u4e3b\u677f\u7531\u4e8e\u6ca1\u6709\u4efb\u4f55\u5229\u6da6\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ea\u80fd\u63d0\u4f9b\u5728\u7ebf\u5165\u95e8\u6587\u6863\u548c\u76f8\u5173\u7684\u53c2\u8003\u8d44\u6599\uff0c\u6ca1\u6709\u4e13\u95e8\u7684\u6280\u672f\u652f\u6301\u548c\u670d\u52a1\uff0c\u8bf7\u5927\u5bb6\u6839\u636e\u81ea\u5df1\u60c5\u51b5\u8fdb\u884c\u5408\u7406\u8d2d\u4e70\u3002</p> <p>\u4e1c\u5c71Pi\u7cfb\u5217\u5f00\u53d1\u662f\u6df1\u5733\u767e\u95ee\u7f51\u516c\u53f8\u4e3a\u60f3\u5b66\u4e60\u5d4c\u5165\u5f0fLinux\u5f00\u53d1\u540c\u5b66\u4e13\u95e8\u8bbe\u8ba1\u5b9a\u505a\u7684\u4f4e\u4ef7\u8d85\u9ad8\u6027\u4ef7\u6bd4\u5f00\u53d1\u677f,\u6211\u4eec\u7684\u5728\u7ebf\u6587\u6863\u66f4\u503e\u5411\u4e8e\u5165\u95e8 \uff0c\u5bf9\u4e8e\u6df1\u5165\u90e8\u5206\u6211\u4eec\u4f1a\u6839\u636eSOC\u7279\u6027\u8bbe\u8ba1\u4e13\u95e8\u5bf9\u5e94\u7684\u5e95\u677f\u51fa\u76f8\u5173\u7684\u6df1\u5165\u8bfe\u7a0b\u3002</p>"},{"location":"#_1","title":"\u5982\u4f55\u9605\u8bfb\u6b64\u7f51\u7ad9\uff1f","text":"<p>\u9996\u5148 \u60a8\u8981\u6e05\u695a\u60a8\u7684\u5f00\u53d1\u677f\u540d\u79f0\uff0c\u8bf7\u6839\u636e\u5f00\u53d1\u677f\u80cc\u9762\u7684\u4e1d\u5370\u56fe\u6848\u9009\u62e9\u9875\u9762\u4e0a\u65b9\u5bfc\u822a\u680f\u7684\u9875\u9762\u70b9\u51fb\u8fdb\u53bb\u8fdb\u884c\u9605\u8bfb\u5b66\u4e60\u3002</p> \u677f\u5b50\u540d\u79f0 \u9875\u9762\u5730\u5740 DongshanPI-D1s \u70b9\u51fb\u8df3\u8f6c DongshanPI-Nezha(Allwinner D1-H) \u70b9\u51fb\u8df3\u8f6c \u67da\u6728PI-\u8725\u8734(Allwinner V851s) \u70b9\u51fb\u8df3\u8f6c \u67da\u6728PI-\u53d8\u8272\u9f99(Allwinner H616) \u70b9\u51fb\u8df3\u8f6c DonshanPI-One(Sigmastar SSD202D) \u70b9\u51fb\u8df3\u8f6c DongshanPI-Seven(ST mp157dac) \u70b9\u51fb\u8df3\u8f6c"},{"location":"#_2","title":"\u914d\u5957\u7684\u4ea4\u6d41\u793e\u533a","text":"<ul> <li>\u4e1c\u5c71PI\u58f9\u53f7QQ\u6280\u672f\u4ea4\u6d41\u7fa4\uff1a684518734</li> <li>\u4e1c\u5c71\u54ea\u5412STU QQ\u6280\u672f\u4ea4\u6d41\u7fa4\uff1a718037873</li> </ul>"},{"location":"#_3","title":"\u5173\u4e8e\u5f00\u6e90\u534f\u8bae","text":"<p>\u6b64\u9875\u9762\u4f7f\u7528\u4e86\u5f00\u6e90\u7684Mkdoc\u6587\u6863\u6846\u67b6\uff0c\u6587\u6863\u7ad9\u70b9\u6258\u7ba1\u5728GitHub\u4e0a\uff0c\u6bcf\u4e2a\u9875\u9762\u90fd\u4f1a\u6709\u7f16\u8f91\u6309\u94ae\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e00\u8d77\u53c2\u4e0e\u7f16\u8f91\u6216\u8005\u63d0\u95ee\u6539\u8fdb\u6b64\u6587\u6863\u3002</p>"},{"location":"About/","title":"\u5173\u4e8e\u6211\u4eec","text":"<p>\u6211\u4eec\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u5d4c\u5165\u5f0fLinux\u6559\u80b2\u57f9\u8bad\u5341\u4f59\u5e74\u516c\u53f8\uff0c\u4e3b\u8bb2\u5e08\u97e6\u4e1c\u5c71\u8001\u5e08\u64c5\u957fARM\u7cfb\u5217\u65b9\u9762\u7684\u786c\u4ef6\u539f\u7406\u56fe\u8bbe\u8ba1\uff0c\u7cbe\u901aARM MIPS Blackfin\u7b49\u67b6\u6784\u5904\u7406\u5668\u7684Linux\u5e95\u5c42\u7cfb\u7edf\u5f00\u53d1\u3002</p> <ul> <li>\u97e6\u4e1c\u5c71-\u5d4c\u5165\u5f0f\u4e13\u5bb6 | \u534e\u4e3a\u8ba4\u8bc1\u9996\u6279\u9e3f\u8499\u7cfb\u7edf\u8bfe\u7a0b\u5f00\u8005</li> <li>\u5173\u6ce8\u516c\u4f17\u53f7\uff1a\u767e\u95ee\u79d1\u6280\uff08\u6700\u65b0\u8d44\u8baf\uff09</li> <li>\u97e6\u4e1c\u5c71\u5b98\u65b9\u6dd8\u5b9d\u5e97\u94fa\uff1a100ask.taobao.com</li> <li>\u97e6\u4e1c\u5c71\u5b98\u65b9\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0\uff1a100ask.org</li> <li>\u5fae\u4fe1\u6280\u672f\u4ea4\u6d41\u7fa4\uff1abaiwenwang1\uff08\u52a0\u5ba2\u670d\u62c9\u7fa4\uff09</li> <li>QQ\u6280\u672f\u4ea4\u6d41\u7fa4\uff1a2797826447\uff08\u52a0\u5ba2\u670d\u62c9\u7fa4\uff09</li> </ul>"},{"location":"index.EN/","title":"index.EN","text":"<p>[ \u4e2d\u6587 | English ]</p>"},{"location":"index.EN/#dongshanpi-introduction","title":"DongshanPI Introduction","text":""},{"location":"index.EN/#what-is-dongshanpi-one-board","title":"what is DongshanPi One Board?","text":"<p>Dongshan Pi series development is a low-cost and ultra-high cost-effective development board specially designed by Shenzhen Baiwen.com for students who want to learn embedded Linux development. Our online documentation is more inclined to get started. For the in-depth part, we will design special correspondence according to SOC characteristics. The bottom plate out relevant in-depth courses.</p>"},{"location":"index.EN/#_1","title":"\u5982\u4f55\u9605\u8bfb\u6b64\u7f51\u7ad9\uff1f","text":"<p>First of all, you need to know the name of your development board. At present, we have Dongshan Pi No. 1 and Dongshan Pi No. 7. Please select the page in the navigation bar at the top of the page according to the silk screen pattern on the back of the development board and click on it to read and learn.</p> Name Site Page DongshanPi ONE Clik DongshanPi Seven Clik"},{"location":"index.EN/#license","title":"LICENSE","text":"<p>This page uses the open source Mkdoc document framework. The document site is hosted on GitHub. Each page will have an edit button. You can participate in editing or ask questions to improve this document.</p>"},{"location":"index.ES/","title":"index.ES","text":"<p>[ \u4e2d\u6587 | English ] | Espa\u00f1ol ]</p>"},{"location":"index.ES/#breve-descripcion-de-dongshan-pi-introduction","title":"Breve descripci\u00f3n de Dongshan Pi (Introduction)","text":""},{"location":"index.ES/#que-es-la-placa-de-desarrollo-dongshan-pi","title":"\u00bfQu\u00e9 es la placa de desarrollo Dongshan Pi?","text":"<p>Nota: Debido a que las placas principales de la serie PI no tienen ning\u00fan margen de beneficio, solo podemos proporcionar documentos de introducci\u00f3n en l\u00ednea y materiales de referencia relacionados. No hay soporte t\u00e9cnico ni servicios especializados. Por favor, compre de manera adecuada seg\u00fan su propia situaci\u00f3n.</p> <p>La serie de placas de desarrollo Dongshan Pi es una placa de bajo costo y alta relaci\u00f3n costo-beneficio dise\u00f1ada y personalizada por la empresa Shenzhen Baiwen Net para estudiantes interesados en aprender sobre el desarrollo de Linux integrado. Nuestros documentos en l\u00ednea est\u00e1n m\u00e1s orientados a la introducci\u00f3n, y para la parte m\u00e1s profunda, dise\u00f1aremos cursos especiales correspondientes seg\u00fan las caracter\u00edsticas del SOC.</p>"},{"location":"index.ES/#como-leer-este-sitio-web","title":"\u00bfC\u00f3mo leer este sitio web?","text":"<p>En primer lugar, debe tener claro el nombre de su placa de desarrollo, y seleccionar la p\u00e1gina correspondiente en la barra de navegaci\u00f3n en la parte superior de la p\u00e1gina para leer y aprender de acuerdo con el patr\u00f3n impreso en la parte posterior de la placa de desarrollo.</p> Nombre de la placa Direcci\u00f3n de la p\u00e1gina DongshanPI-D1s Haz clic para ir DongshanPI-Nezha(Allwinner D1-H) Haz clic para ir YuzukiPI-Lizard(Allwinner V851s) Haz clic para ir YuzukiPI-Chameleon(Allwinner H616) Haz clic para ir DonshanPI-One(Sigmastar SSD202D) Haz clic para ir DongshanPI-Seven(ST mp157dac) Haz clic para ir DongshanPI-PicoW(Sigmastar SSD210) Haz clic para ir"},{"location":"index.ES/#comunidad-de-discusion-relacionada","title":"Comunidad de discusi\u00f3n relacionada","text":"<ul> <li>Grupo de discusi\u00f3n QQ DongshanPI-One: 684518734</li> <li>Grupo de discusi\u00f3n QQ Dongshan Nezha STU: 718037873</li> </ul>"},{"location":"index.ES/#acerca-de-la-licencia-de-codigo-abierto","title":"Acerca de la licencia de c\u00f3digo abierto","text":"<p>Esta p\u00e1gina utiliza el framework Mkdoc de c\u00f3digo abierto, y el sitio de documentos se aloja en GitHub. Cada p\u00e1gina tendr\u00e1 un bot\u00f3n de edici\u00f3n, para que todos puedan participar en la edici\u00f3n o hacer preguntas para mejorar este documento.</p>"},{"location":"DongshanNezhaSTU/01-BoardIntroduction/","title":"\u4e1c\u5c71\u54ea\u5412STU\u786c\u4ef6\u7b80\u8ff0","text":"<ul> <li>\u6b64\u5f00\u53d1\u677f\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u8bba\u575b\u4ea4\u6d41\u8ba8\u8bba https://forums.100ask.net/c/aw/15 </li> </ul>"},{"location":"DongshanNezhaSTU/01-BoardIntroduction/#_1","title":"\u786c\u4ef6\u7b80\u8ff0","text":"<p>\u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u662f\u4e00\u6b3e\u9488\u5bf9\u4e8e\u6559\u80b2\u5b66\u4e60\u4e13\u95e8\u8bbe\u8ba1\u7684\u4e00\u7cfb\u5217\u5f00\u53d1\u677f\uff0c\u5206\u522b\u6709</p> <ul> <li>\u6700\u5c0f\u4e3b\u677f\uff1a\u53ea\u4fdd\u7559\u4e00\u4e9b\u5b66\u4e60\u8c03\u8bd5\u6700\u57fa\u672c\u63a5\u53e3\uff0c\u505a\u5230\u6700\u5177\u6027\u4ef7\u6bd4\uff0c\u4ec5\u552e149\u3002</li> <li>\u5168\u9635\u811a\u5f15\u51fa\u7684DIY\u5e95\u677f\uff1a\u4e3b\u8981\u662f\u4f9bDIY\u6781\u5ba2\u7231\u597d\u8005\u4f7f\u7528\uff0c\u53ef\u4ee5\u81ea\u884cDIY\u8bbe\u8ba1\u3002 \u4ec5\u552e29</li> <li>\u4e13\u95e8\u7684\u914d\u5957\u9879\u76ee\u5e95\u677f\uff1a\u9488\u5bf9\u4e8e\u82af\u7247\u7684\u4f7f\u7528\u573a\u666f\u8bbe\u8ba1\u51fa\u4e13\u95e8\u7684\u9879\u76ee\u5e95\u677f\uff0c\u7ed3\u5408\u8bfe\u7a0b\u5b66\u4e60\u4f7f\u7528\u3002 \u4ec5\u552e149</li> <li>\u914d\u5957\u7684\u90ae\u7968\u5b54\u5c01\u88c5D1s\u6838\u5fc3\u677f\uff1a\u9488\u5bf9\u4e8e\u4f01\u4e1a\u7ea7\u5ba2\u6237\u6216\u8005\u505a\u4ea7\u54c1\u7684\u5ba2\u6237\u4f7f\u7528\u3002</li> </ul>"},{"location":"DongshanNezhaSTU/01-BoardIntroduction/#_2","title":"\u6700\u5c0f\u4e3b\u677f","text":"<p>\u5982\u4e0b\u56fe\u677f\u8f7d\u8d44\u6e90\u6240\u793a\u6700\u5c0f\u4e3b\u677f\u6709:</p> <ul> <li>\u6b63\u9762\uff1aTYPE-C TTL\u4f9b\u7535\u4e0e\u8c03\u8bd5\u63a5\u53e3\uff0c\u76f4\u63a5\u8fde\u63a5\u7535\u8111USB\u63a5\u53e3\u5373\u53ef\u5b9e\u73b0 \u4e32\u53e3\u8c03\u8bd5\u4e0e\u4f9b\u7535\u4e8c\u5408\u4e00\uff0c\u65e0\u9700\u989d\u5916\u7684\u8fde\u63a5\u7ebf\u3002</li> <li>\u6b63\u9762\uff1aRJ45\u5343\u5146\u4ee5\u592a\u7f51\u63a5\u53e3\uff0c\u4e3b\u8981\u7528\u4e8e\u7f51\u7edc\u542f\u52a8\u7cfb\u7edf\u4e0b\u8f7d\u5185\u6838\u7b49\u64cd\u4f5c\uff0c\u65b9\u4fbf\u8c03\u8bd5\u5f00\u53d1\u3002</li> <li>\u6b63\u9762\uff1aTYPE-C\u7684USB OTG\u63a5\u53e3\uff0c\u7528\u4e8e\u70e7\u5199\u7cfb\u7edf\u4e0e\u4f5c\u4e3aOTG\u4e3b\u4ece\u8bbe\u5907\u4f7f\u7528\u3002</li> <li>\u6b63\u9762\uff1a\u5f15\u51fa HDMI\u63a5\u53e3\uff0c\u53ef\u7528\u4e8e\u8fde\u63a5\u663e\u793a\u5668\u7b49\u8bbe\u5907\u3002</li> <li>\u80cc\u9762\uff1aTF\u5361\u63a5\u53e3\uff0c\u53ef\u7528\u4e8e\u8c03\u8bd5\u4e0e\u8fde\u63a5TF\u5361\u542f\u52a8\u7cfb\u7edf\u3002</li> <li>\u80cc\u9762\uff1a256MB  SPI NAND FLASH \u82af\u7247\u3002</li> </ul> <p></p>"},{"location":"DongshanNezhaSTU/01-BoardIntroduction/#diy","title":"DIY\u5168\u9488\u811a\u5e95\u677f","text":"<p>\u5168\u9488\u811aDIY\u5e95\u677f\uff0c\u5c06\u6700\u5c0f\u4e3b\u677f\u7684\u6240\u6709\u672a\u4f7f\u7528\u5f15\u811a\u5168\u90fd\u5f15\u51fa\u5230\u5e95\u677f\u6392\u9488\u4e0a\uff0c\u5e76\u63d0\u4f9b\u5168\u90e8\u786c\u4ef6\u8bbe\u8ba1\u8d44\u6599\uff0c\u53ef\u4ee5\u81ea\u884c\u4f7f\u7528 \u5609\u7acb\u521b \u8bbe\u8ba1\u751f\u4ea7\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece\u6211\u4eec\u8fd9\u91cc\u8d2d\u4e70\u3002 \u4e3b\u8981\u9002\u7528\u4e8e\u559c\u6b22DIY\u7684\u540c\u5b66\u3002</p> <p>\u4e0b\u56fe\u662f \u6700\u5c0f\u4e3b\u677f \u4e0e DIY\u5168\u9488\u811a\u5e95\u677f \u8fde\u63a5\u793a\u610f\u56fe\u3002</p> <p></p>"},{"location":"DongshanNezhaSTU/01-BoardIntroduction/#_3","title":"\u5168\u529f\u80fd\u9879\u76ee\u5e95\u677f","text":"<p>\u5168\u529f\u80fd\u9879\u76ee\u5e95\u677f\u662f\u7528\u4e8e\u6269\u5c55 \u54ea\u5412STU\u6700\u5c0f\u677f\u529f\u80fd\u800c\u8bbe\u8ba1\uff0c\u62e5\u6709\u66f4\u4e30\u5bcc\u7684\u529f\u80fd\uff0c\u4e3b\u8981\u7528\u4e8e\u9879\u76ee\u5b66\u4e60\uff0c\u7f51\u7edc\uff0c\u84dd\u7259\uff0c\u97f3\u9891\uff0c\u663e\u793a\uff0c\u7ea2\u5916\uff0c \u4ee5\u53ca\u4f20\u611f\u5668\u6a21\u5757\u7b49\u8bbe\u5907\u3002</p> <p>\u5168\u529f\u80fd\u5e95\u677f\u7684\u677f\u8f7d\u529f\u80fd\u6709</p> <ul> <li>XR829 WIFI\u84dd\u7259\u6a21\u7ec4\u82af\u7247\uff0cBluetooth\u652f\u6301\u6807\u51c6\u84dd\u7259\u4e0e \u4f4e\u529f\u8017\u84dd\u7259\uff0cWifi \u652f\u63012.4G hz \u65e0\u7ebf\u7f51\u7edc\u901a\u4fe1\u3002</li> <li>MIPI DSI\u5c4f\u5e55\u663e\u793a\u63a5\u53e3\uff1a\u652f\u6301\u6700\u9ad8 1920x 1200\u5206\u8fa8\u7387\uff0c\u63a5\u53e3\u517c\u5bb9 \u5168\u5fd7\u54ea\u5412 \u516c\u677f\uff0c\u540e\u7eed\u4f1a\u6709\u914d\u5957\u5c4f\u5e55\u6a21\u5757\u3002</li> <li>IR\u7ea2\u5916\u63a5\u6536\u63a5\u53e3\uff1a\u652f\u6301\u7ea2\u5916\u4fe1\u53f7\u63a5\u6536\u3002</li> <li>3.5MM Audio OUT\uff1a\u652f\u6301\u5e38\u89c1 \u624b\u673a\u7684\u56db\u6bb5\u5f0f 3.5MM\u8033\u673a\uff0c\u53ef\u7528\u4e8e\u64ad\u653e\u97f3\u4e50\u5e76\u5f55\u5236\u58f0\u97f3\u3002</li> <li>MIC1 MIC2:\u4f7f\u7528\u7845\u654f\u9ea6\u514b\u98ce\uff0c\u7528\u4e8e\u4e13\u4e1a\u62fe\u97f3\u3002</li> <li>SPEAKER\uff1a\u4e13\u95e8\u7684\u529f\u653e\u63a5\u53e3\uff0c\u7528\u4e8e\u626c\u58f0\u5668\u64ad\u653e\u58f0\u97f3\uff0c\u63a5\u53e3\u662f 1.25 mmx2 PH.</li> <li>USB TYPE-A HOST\u63a5\u53e3\uff1a\u7528\u4e8e\u8fde\u63a5 \u6807\u51c6\u7684 USB\u8bbe\u5907\uff0c\u6bd4\u5982 U\u76d8 \u652f\u6301UVC\u7684\u6444\u50cf\u5934 \u7b49\u7b49\u8bbe\u5907\u3002</li> <li>PCI-E\u63a5\u53e3\uff1a\u652f\u63014G\u6a21\u5757\u8fde\u63a5\uff0c\u53ef\u4ee5\u8fdb\u884cPPPOE\u901a\u4fe1\uff0c\u5f00\u53d1\u677f\u72ec\u7acb\u4e0a\u7f51\u3002</li> <li>\u6392\u9488\uff1a\u5c06\u591a\u4f59IO\u5168\u90e8\u5f15\u51fa\uff0c\u7528\u4e8e\u6269\u5c55\u4f20\u611f\u5668\u6a21\u5757\u7b49\uff0c\u7535\u6e90\u517c\u5bb9\u6811\u8393\u6d3e \u63a5\u53e3\u3002</li> </ul> <p></p>"},{"location":"DongshanNezhaSTU/02-SupportingResources/","title":"\u914d\u5957\u8d44\u6e90","text":""},{"location":"DongshanNezhaSTU/02-SupportingResources/#_1","title":"\u8f6f\u4ef6\u8d44\u6e90\u7b80\u8ff0","text":""},{"location":"DongshanNezhaSTU/02-SupportingResources/#bwwsdk","title":"BWW\u63d0\u4f9b\u7684SDK","text":"<ul> <li>\u767e\u5ea6\u7f51\u76d8\u83b7\u53d6\u5730\u5740 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1f1K82iA0kNibuMlZu34i0g?pwd=9rds  \u63d0\u53d6\u7801\uff1a9rds </li> </ul>"},{"location":"DongshanNezhaSTU/02-SupportingResources/#buildoot-for-dongshan-nezhastu-d1-h","title":"Buildoot For Dongshan NezhaSTU D1-H","text":"<p>\u6709\u89c6\u9891 \u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li>\u6b64\u5957\u6784\u5efa\u7cfb\u7edf\u57fa\u4e8e\u5168\u5fd7RISCV-64 Linux D1-H \u82af\u7247\uff0c\u9002\u914d\u4e86buildroot 2022lts\u4e3b\u7ebf\u7248\u672c\uff0c\u517c\u5bb9\u4e86\u767e\u95ee\u7f51\u7684\u9879\u76ee\u8bfe\u7a0b\u4ee5\u53ca\u76f8\u5173\u7ec4\u4ef6\uff0c\u771f\u6b63\u505a\u5230\u4e86\u4f4e\u8026\u5408\uff0c\u9ad8\u53ef\u7528\uff0c\u4f7f\u7528\u4e0d\u540c\u7684buildroot external tree\u89c4\u683c\uff0c\u8bb2\u4e0d\u540c\u7684\u9879\u76ee \u4e0d\u540c\u7684\u7ec4\u4ef6\u5206\u522b\u7ba1\u7406\uff0c\u6765\u5b9e\u73b0\u66f4\u5bb9\u6613\u4e0a\u624b \u4e5f\u66f4\u5bb9\u6613\u5b66\u4e60\u7406\u89e3\u3002</li> <li>\u4ed3\u5e93\u5730\u5740  https://github.com/DongshanPI/buildroot_dongshannezhastu</li> </ul>"},{"location":"DongshanNezhaSTU/02-SupportingResources/#elinuxcore-stu-d1-linux","title":"elinuxCore \u6700\u5c0f\u4e1c\u5c71\u54ea\u5412STU D1 \u5d4c\u5165\u5f0fLinux\u7cfb\u7edf","text":"<p>\u6709\u89c6\u9891 \u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li> <p>\u6b64\u5957\u7cfb\u7edf\u662f\u4e13\u95e8\u7528\u4e8e\u4e86\u89e3D1-H RISC-V Linux\u7ec4\u4ef6\u4ee5\u53ca\u5404\u4e2a\u90e8\u5206\u6784\u6210\u7684\u6e90\u7801\u793a\u4f8b\uff0c\u9002\u5408\u559c\u6b22\u4e0d\u4f9d\u8d56\u4efb\u4f55\u6784\u5efa\u5de5\u5177\u7684\u524d\u63d0\u4e0b\u81ea\u884c\u7814\u7a76\u3002</p> </li> <li> <p>https://github.com/DongshanPI/eLinuxCore_dongshannezhastu</p> </li> </ul>"},{"location":"DongshanNezhaSTU/02-SupportingResources/#studebian-ubuntu","title":"\u4e1c\u5c71\u54ea\u5412STU\u81ea\u52a8\u6784\u5efaDebian ubuntu\u53d1\u884c\u7248\u7cfb\u7edf","text":"<p>\u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li>\u6b64\u5957\u7cfb\u7edf\u662f\u57fa\u4e8e <code>debootstrap</code>\u914d\u5408GUN/linux\u793e\u533a\u7248\u672c\u5b9e\u73b0\u7684\u81ea\u52a8\u6784\u5efa\u7cfb\u7edf\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u5217\u811a\u672c\u7b49\u3002\u6b64\u5957\u7cfb\u7edf\u5e76\u975e\u662f\u4e00\u6b65\u7f16\u8bd1\u6240\u6709\uff0c\u9700\u8981\u5206\u591a\u6b21\u6267\u884c\uff0c\u56e0\u4e3a\u811a\u672c\u6846\u67b6\u7b49\u95ee\u9898\uff0c\u6240\u4ee5\u4e0d\u662f\u7279\u522b\u5b8c\u5584\u3002\u76ee\u524d\u6784\u5efa\u7cfb\u7edf\u4f7f\u7528\u7684\u793e\u533a\u5927\u4f6c https://github.com/smaeul \u63d0\u4f9b\u7684\u6e90\u7801\uff0c\u786c\u4ef6\u652f\u6301\u4e0a\u5e76\u4e0d\u662f\u7279\u522b\u5b8c\u6574\u3002\u4f46\u662f\u6700\u5c0f\u7cfb\u7edf\u6ca1\u6709\u95ee\u9898\u3002</li> <li>https://github.com/DongshanPI/NezhaSTU-ReleaseLinux</li> </ul>"},{"location":"DongshanNezhaSTU/02-SupportingResources/#tina-sdk-v20","title":"\u5168\u5fd7\u539f\u5382Tina-SDK V2.0","text":"<p>\u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li> <p>Tina Linux\u662f\u5168\u5fd7\u79d1\u6280\u57fa\u4e8eLinux\u5185\u6838\u5f00\u53d1\u7684\u9488\u5bf9\u667a\u80fd\u786c\u4ef6\u7c7b\u4ea7\u54c1\u7684\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u7cfb\u7edf\u3002Tina Linux\u57fa\u4e8eopenwrt-14.07 \u7248\u672c\u7684\u8f6f\u4ef6\u5f00\u53d1\u5305\uff0c\u5305\u542b\u4e86 Linux \u7cfb\u7edf\u5f00\u53d1\u7528\u5230\u7684\u5185\u6838\u6e90\u7801\u3001\u9a71\u52a8\u3001\u5de5\u5177\u3001\u7cfb\u7edf\u4e2d\u95f4\u4ef6\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5305\u3002openwrt \u662f\u77e5\u540d\u7684\u5f00\u6e90\u5d4c\u5165\u5f0f Linux \u7cfb\u7edf\u81ea\u52a8\u6784\u5efa\u6846\u67b6\uff0c\u662f\u7531 Makefile \u811a\u672c\u548c Kconfig \u914d\u7f6e\u6587\u4ef6\u6784\u6210\u7684\u3002\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 menuconfig\u914d\u7f6e\uff0c\u7f16\u8bd1\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u4ee5\u76f4\u63a5\u70e7\u5199\u5230\u673a\u5668\u4e0a\u8fd0\u884c\u7684 Linux \u7cfb\u7edf\u8f6f\u4ef6\u3002</p> </li> <li> <p>\u5728\u7ebf\u6587\u6863 https://d1.docs.aw-ol.com/</p> </li> </ul>"},{"location":"DongshanNezhaSTU/02-SupportingResources/#linuxbuildroot-lts","title":"Linux\u793e\u533a\u7248Buildroot-LTS","text":"<p>\u6709\u7b80\u5355\u6587\u6863</p> <ul> <li>https://bbs.aw-ol.com/topic/1208/buildroot-2022</li> </ul>"},{"location":"DongshanNezhaSTU/03-QuickStart/","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":"<ul> <li>\u53c2\u8003\u64cd\u4f5c\u6f14\u793a\u89c6\u9891\u6559\u7a0b</li> </ul>"},{"location":"DongshanNezhaSTU/03-QuickStart/#_2","title":"\u4e0a\u7535\u542f\u52a8\u7cfb\u7edf","text":"<p>\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u4e70\u7684\u914d\u7f6e\u662f\u6ca1\u6709SPI NANDFLASH\u914d\u7f6e\uff0c\u5219\u8bf7\u53c2\u8003\u4e0b\u65b9\u7684\u70e7\u5199\u56fa\u4ef6\u81f3TF\u5361\u7ae0\u8282\uff0c\u5148\u70e7\u5f55\u7cfb\u7edf\uff0c\u624d\u53ef\u4ee5\u542f\u52a8\u4f7f\u7528\u3002</p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#1","title":"1. \u8fde\u63a5\u4e32\u53e3\u7ebf","text":"<p>\u5c06\u914d\u5957\u7684TypeC\u7ebf\u4e00\u6bb5\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\u7684\u4e32\u53e3/\u4f9b\u7535\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\u677f\u8f7d\u7684\u7ea2\u8272\u7535\u6e90\u706f\u4f1a\u4eae\u8d77\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5b89\u88c5\u4e32\u53e3\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u52a8\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u6765\u81ea\u52a8\u5b89\u88c5\u3002</p> <ul> <li>\u5bf9\u4e8eWindows\u7cfb\u7edf \u6b64\u65f6Windows\u8bbe\u5907\u7ba1\u7406\u5668 \u5728 \u7aef\u53e3(COM\u548cLPT) \u5904\u4f1a\u591a\u51fa\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u4e00\u822c\u662f\u4ee5 <code>USB-Enhanced-SERIAL CH9102</code>\u5f00\u5934\uff0c\u60a8\u9700\u8981\u7559\u610f\u4e00\u4e0b\u540e\u9762\u7684\u5177\u4f53COM\u7f16\u53f7\uff0c\u7528\u4e8e\u540e\u7eed\u8fde\u63a5\u4f7f\u7528\u3002</li> </ul> <p></p> <p>\u5982\u4e0a\u56fe\uff0cCOM\u53f7\u662f96\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8fde\u63a5\u6240\u4f7f\u7528\u7684\u4e32\u53e3\u53f7\u5c31\u662f96\u3002</p> <ul> <li>\u5bf9\u4e8eLinux\u7cfb\u7edf \u53ef\u4ee5\u67e5\u770b\u662f\u5426\u591a\u51fa\u4e00\u4e2a/dev/tty&lt;&gt; \u8bbe\u5907,\u4e00\u822c\u60c5\u51b5\u8bbe\u5907\u8282\u70b9\u4e3a /dev/ttyACM0  \u3002</li> </ul> <p></p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#2","title":"2. \u6253\u5f00\u4e32\u53e3\u63a7\u5236\u53f0","text":""},{"location":"DongshanNezhaSTU/03-QuickStart/#_3","title":"\u83b7\u53d6\u4e32\u53e3\u5de5\u5177","text":"<p>\u4f7f\u7528Putty\u6216\u8005MobaXterm\u7b49\u4e32\u53e3\u5de5\u5177\u6765\u5f00\u53d1\u677f\u8bbe\u5907\u3002</p> <ul> <li>\u5176\u4e2dputty\u5de5\u5177\u53ef\u4ee5\u8bbf\u95ee\u9875\u9762  https://www.chiark.greenend.org.uk/~sgtatham/putty/  \u6765\u83b7\u53d6\u3002</li> <li>MobaXterm\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u9875\u9762 https://mobaxterm.mobatek.net/ \u83b7\u53d6 (\u63a8\u8350\u4f7f\u7528)\u3002</li> </ul>"},{"location":"DongshanNezhaSTU/03-QuickStart/#putty","title":"\u4f7f\u7528putty\u767b\u5f55\u4e32\u53e3","text":""},{"location":"DongshanNezhaSTU/03-QuickStart/#mobaxterm","title":"\u4f7f\u7528Mobaxterm\u767b\u5f55\u4e32\u53e3","text":"<p>\u6253\u5f00MobaXterm\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u201cSession\u201d\uff0c\u5728\u5f39\u51fa\u7684\u754c\u9762\u9009\u4e2d\u201cSerial\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u9009\u62e9\u7aef\u53e3\u53f7\uff08\u524d\u9762\u8bbe\u5907\u7ba1\u7406\u5668\u663e\u793a\u7684\u7aef\u53e3\u53f7COM21\uff09\u3001\u6ce2\u7279\u7387\uff08Speed 115200\uff09\u3001\u6d41\u63a7\uff08Flow Control: none\uff09,\u6700\u540e\u70b9\u51fb\u201cOK\u201d\u5373\u53ef\u3002\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6ce8\u610f\uff1a\u6d41\u63a7\uff08Flow Control\uff09\u4e00\u5b9a\u8981\u9009\u62e9none\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u5728MobaXterm\u4e2d\u5411\u4e32\u53e3\u8f93\u5165\u6570\u636e</p> <p></p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#3-shell","title":"3. \u8fdb\u5165\u7cfb\u7edfshell","text":"<p>\u4f7f\u7528\u4e32\u53e3\u5de5\u5177\u6210\u529f\u6253\u5f00\u4e32\u53e3\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u4e0b Enter \u952e \u8fdb\u5165shell\uff0c\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u6309\u4e0b\u677f\u5b50\u4e0a\u7684 <code>Reset</code>\u590d\u4f4d\u952e\uff0c\u6765\u67e5\u770b\u5b8c\u6574\u7684\u7cfb\u7edf\u4fe1\u606f\u3002 </p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u7684 \u767b\u5f55 \u7528\u6237\u540d \u662f root \u6ca1\u6709\u5bc6\u7801\u3002</p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u7684 \u767b\u5f55 \u7528\u6237\u540d \u662f root \u6ca1\u6709\u5bc6\u7801\u3002</p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u7684 \u767b\u5f55 \u7528\u6237\u540d \u662f root \u6ca1\u6709\u5bc6\u7801\u3002</p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#spi-nand","title":"\u70e7\u5199\u56fa\u4ef6\u81f3SPI NAND","text":"<p>\u6ce8\u610f\u6b64\u65b9\u5f0f\u70e7\u5f55\u8fdb\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u53ea\u8bfb\u7684\uff0c\u5982\u679c\u64cd\u4f5c \u9700\u8981\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u6216\u8005\u4f7f\u7528TF\u5361\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002</p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#_4","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ol> <li>\u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u4e3b\u677f x1</li> <li>\u4e0b\u8f7d\u5168\u5fd7\u7ebf\u5237\u5de5\u5177AllwinnertechPhoeniSuit\uff1a https://gitlab.com/dongshanpi/tools/-/raw/main/AllwinnertechPhoeniSuit.zip</li> <li>TypeC\u7ebf X2</li> <li>\u4e0b\u8f7dSPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/tina_d1-h-nezha_uart0.zip</li> <li>\u4e0b\u8f7d\u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/AllwinnerUSBFlashDeviceDriver.zip</li> </ol>"},{"location":"DongshanNezhaSTU/03-QuickStart/#_5","title":"\u8fde\u63a5\u5f00\u53d1\u677f","text":"<p>\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u5c06\u4e24\u4e2aTypeC\u7ebf\u5206\u522b\u8fde\u81f3 \u5f00\u53d1\u677f \u4e32\u53e3\u63a5\u53e3 \u4e0e OTG\u70e7\u5199\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef \u8fde\u63a5\u81f3 \u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u5c06\u4e0b\u8f7d\u597d\u7684 \u70e7\u5199\u5de5\u5177\u548c SPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\u89e3\u538b\u7f29 \u4f7f\u7528\u3002</p> <p></p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#usb","title":"\u5b89\u88c5usb\u9a71\u52a8","text":"<p>\u5728\u6211\u4eec\u8fde\u63a5\u597d\u5f00\u53d1\u677f\u4ee5\u540e\uff0c\u5148\u6309\u4f4f FEL \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b RESET \u7cfb\u7edf\u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u3002</p> <p>\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8bbe\u5907\u7ba1\u7406\u5668  \u901a\u7528\u4e32\u884c\u603b\u7ebf\u63a7\u5236\u5668 \u5f39\u51fa\u4e00\u4e2a  \u672a\u77e5\u8bbe\u5907 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u628a\u6211\u4eec\u63d0\u524d\u4e0b\u8f7d\u597d\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8 \u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u5c06\u89e3\u538b\u7f29\u8fc7\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8  \u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u8fd9\u4e48\u51e0\u4e2a\u6587\u4ef6\u3002</p> <pre><code>InstallUSBDrv.exe\ndrvinstaller_IA64.exe\ndrvinstaller_X86.exe\nUsbDriver/          \ndrvinstaller_X64.exe   \ninstall.bat\n</code></pre> <p>\u5bf9\u4e8ewind7\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u53ea\u9700\u8981\u4ee5\u7ba1\u7406\u5458 \u6253\u5f00   <code>install.bat</code> \u811a\u672c\uff0c\u7b49\u5f85\u5b89\u88c5\uff0c\u5728\u5f39\u51fa\u7684 \u662f\u5426\u5b89\u88c5\u9a71\u52a8\u7684\u5bf9\u8bdd\u6846\u91cc\u9762\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8ewind10/wind11\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u9700\u8981\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u91cc\u9762\u8fdb\u884c\u624b\u52a8\u5b89\u88c5\u9a71\u52a8\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5728\u7b2c\u4e00\u6b21\u63d2\u5165OTG\u8bbe\u5907\uff0c\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u8bbe\u5907\u7ba1\u7406\u5668\u4f1a\u5f39\u51fa\u4e00\u4e2a\u672a\u77e5\u8bbe\u5907\u3002 </p> <p>\u63a5\u4e0b\u6765\u9f20\u6807\u53f3\u952e\u70b9\u51fb\u8fd9\u4e2a\u672a\u77e5\u8bbe\u5907\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c \u70b9\u51fb\u6d4f\u89c8\u6211\u8ba1\u7b97\u673a\u4ee5\u67e5\u627e\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\u3002 </p> <p>\u4e4b\u540e\u5728\u5f39\u51fa\u65b0\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u70b9\u51fb\u6d4f\u89c8\u627e\u5230\u6211\u4eec\u4e4b\u524d\u4e0b\u8f7d\u597d\u7684 usb\u70e7\u5f55\u9a71\u52a8\u6587\u4ef6\u5939\u5185\uff0c\u627e\u5230 <code>UsbDriver/</code> \u8fd9\u4e2a\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\uff0c\u4e4b\u540e\u70b9\u51fb\u786e\u5b9a\u5373\u53ef\u3002 </p> <p>\u6ce8\u610f\u8fdb\u5165\u5230  <code>UsbDriver/</code>  \u6587\u4ef6\u5939\uff0c\u7136\u540e\u70b9\u51fb\u786e\u5b9a\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u7ee7\u7eed\u70b9\u51fb \u4e0b\u4e00\u9875 \u6309\u94ae\uff0c\u8fd9\u65f6\u7cfb\u7edf\u5c31\u4f1a\u63d0\u793a\u5b89\u88c5\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u3002  \u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u6211\u4eec\u70b9\u51fb \u59cb\u7ec8\u5b89\u88c5\u6b64\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6 \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\u3002 </p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f1a\u63d0\u793a\uff0cWindows\u5df2\u6210\u529f\u66f4\u65b0\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002 </p> <p>\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8bbe\u5907\u7ba1\u7406\u5668 \u91cc\u9762\u7684\u672a\u77e5\u8bbe\u5907 \u53d8\u6210\u4e86\u4e00\u4e2a <code>USB Device(VID_1f3a_efe8)</code>\u7684\u8bbe\u5907\uff0c\u8fd9\u65f6\u5c31\u8868\u660e\u8bbe\u5907\u9a71\u52a8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002 </p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#_6","title":"\u8fd0\u884c\u8f6f\u4ef6\u70e7\u5199","text":"<p>\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684\u5168\u5fd7\u7ebf\u5237\u5de5\u5177 AllwinnertechPhoeniSuit \u89e3\u538b\u7f29\uff0c\u540c\u65f6\u5c06**SPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf**\u4e0b\u8f7d\u4e0b\u6765\u4e5f\u8fdb\u884c\u89e3\u538b\u7f29\u3002</p> <p>\u89e3\u538b\u540e\uff0c\u5f97\u5230\u4e00\u4e2a tina_d1-h-nezha_uart0.img \u955c\u50cf\uff0c\u662f\u7528\u4e8e\u70e7\u5f55\u5230SPI NAND\u955c\u50cf\u5f97\u3002\u53e6\u4e00\u4e2a\u662f**AllwinnertechPhoeniSuit**\u6587\u4ef6\u5939\u3002</p> <p>\u9996\u5148\u6211\u4eec\u8fdb\u5165\u5230 AllwinnertechPhoeniSuit\\AllwinnertechPhoeniSuitRelease20201225 \u76ee\u5f55\u4e0b \u627e\u5230 PhoenixSuit.exe \u53cc\u51fb\u8fd0\u884c\u3002</p> <p>\u6253\u5f00\u8f6f\u4ef6\u540e \u8f6f\u4ef6\u4e3b\u754c\u9762\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p> <p>\u200b   \u63a5\u4e0b\u6765 \u6211\u4eec\u9700\u8981\u5207\u6362\u5230 \u4e00\u952e\u5237\u673a**\u7a97\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u70b9\u51fb\u7ea2\u6846\u6807\u53f71\uff0c\u5728\u5f39\u51fa\u7684\u65b0\u7a97\u53e3\u5185\uff0c\u6211\u4eec\u70b9\u51fb \u7ea2\u68462 **\u6d4f\u89c8 \u627e\u5230\u6211\u4eec\u521a\u624d\u89e3\u538b\u8fc7\u7684 SPI NAND \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf  tina_d1-h-nezha_uart0.img \uff0c\u9009\u4e2d\u955c\u50cf\u540e\uff0c\u70b9\u51fb\u7ea2\u68463 \u5168\u76d8\u64e6\u9664\u5347\u7ea7 \uff0c\u6700\u540e\u70b9\u51fb\u7ea2\u68464  \u7acb\u5373\u5347\u7ea7\u3002</p> <p>\u200b   \u70b9\u51fb\u5b8c\u6210\u540e\uff0c\u4e0d\u9700\u8981\u7406\u4f1a \u5f39\u51fa\u7684\u4fe1\u606f\uff0c\u8fd9\u65f6 \u6211\u4eec\u62ff\u8d77\u5df2\u7ecf\u8fde\u63a5\u597d\u7684\u5f00\u53d1\u677f\uff0c\u5148\u6309\u4f4f FEL \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b RESET \u7cfb\u7edf\u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u5e76\u5f00\u59cb\u70e7\u5199\u3002</p> <p></p> <p>\u200b   \u70e7\u5199\u65f6\u4f1a\u63d0\u793a\u70e7\u5199\u8fdb\u5ea6\u6761\uff0c\u70e7\u5199\u5b8c\u6210\u540e \u5f00\u53d1\u677f\u4f1a\u81ea\u5df1\u91cd\u542f\u3002</p> <p></p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#_7","title":"\u542f\u52a8\u7cfb\u7edf","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u70e7\u5199\u6210\u529f\u540e \u90fd\u4f1a\u81ea\u52a8\u91cd\u542f \u542f\u52a8\u7cfb\u7edf\uff0c\u6b64\u65f6\u6211\u4eec\u8fdb\u5165\u5230 \u4e32\u53e3\u7ec8\u7aef\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u7684\u542f\u52a8\u4fe1\u606f\uff0c\u7b49\u6240\u6709\u542f\u52a8\u4fe1\u606f\u52a0\u8f7d\u5b8c\u6210\uff0c\u8f93\u5165 root \u7528\u6237\u540d\u5373\u53ef\u767b\u5f55\u70e7\u5199\u597d\u7684\u7cfb\u7edf\u5185\u3002</p> <p></p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#tf","title":"\u70e7\u5199\u56fa\u4ef6\u81f3TF\u5361","text":""},{"location":"DongshanNezhaSTU/03-QuickStart/#_8","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ol> <li>\u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u4e3b\u677f x1</li> <li>Type-C\u7ebf X1</li> <li>TF\u5361\u8bfb\u5361\u5668  x1</li> <li>8GB\u4ee5\u4e0a\u7684 micro TF\u5361 x1</li> <li>win32diskimage\u5de5\u5177 : https://gitlab.com/dongshanpi/tools/-/raw/main/win32diskimager-1.0.0-install.exe</li> <li>SDcard\u4e13\u7528\u683c\u5f0f\u5316\u5de5\u5177\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/SDCardFormatter5.0.1Setup.exe</li> <li>TF\u5361\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/dongshannezhastu-sdcard.zip</li> </ol>"},{"location":"DongshanNezhaSTU/03-QuickStart/#_9","title":"\u8fd0\u884c\u70e7\u5199\u8f6f\u4ef6\u70e7\u5199","text":"<p>\u9996\u5148\u9700\u8981\u4e0b\u8f7d  win32diskimage  SDcard\u4e13\u7528\u683c\u5f0f\u5316 \u8fd9\u4e24\u4e2a\u70e7\u5199TF\u5361\u7684\u5de5\u5177\uff0c\u7136\u540e\u83b7\u53d6\u5230TF\u5361\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6**dongshannezhastu-sdcard.zip**\uff0c\u83b7\u53d6\u5230\u4ee5\u540e\uff0c\u5148\u5b89\u88c5 win32diskimage  SDcard\u4e13\u7528\u683c\u5f0f\u5316  \u8fd9\u4e24\u4e2a\u5de5\u5177\uff0c\u540c\u65f6\u53ef\u4ee5\u89e3\u538b \u4e00\u4e0bTF\u5361\u7cfb\u7edf\u7684\u955c\u50cf\u6587\u4ef6 dongshannezhastu-sdcard.zip\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a  **dongshannezhastu-sdcard.img**\u6587\u4ef6 \u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u8981\u70e7\u5199\u7684\u955c\u50cf\u3002</p> <ul> <li>\u4f7f\u7528SD CatFormat\u683c\u5f0f\u5316TF\u5361\uff0c\u6ce8\u610f\u5907\u4efd\u5361\u5185\u6570\u636e\u3002\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u70b9\u51fb\u5237\u65b0\u627e\u5230TF\u5361\uff0c\u7136\u540e\u70b9\u51fb Format \u5728\u5f39\u51fa\u7684 \u5bf9\u8bdd\u6846 \u70b9\u51fb **\u662f(Yes)**\u7b49\u5f85\u683c\u5f0f\u5b8c\u6210\u5373\u53ef\u3002</li> </ul> <p></p> <ul> <li>\u683c\u5f0f\u5316\u5b8c\u6210\u540e\uff0c\u4f7f\u7528**Win32diskimage**\u5de5\u5177\u6765\u70e7\u5f55\u955c\u50cf\uff0c\u53c2\u8003\u4e0b\u5c5e\u6b65\u9aa4\uff0c\u627e\u5230\u81ea\u5df1\u7684TF\u5361\u76d8\u7b26\uff0c\u7136\u540e\u70b9\u51fb2 \u7bad\u5934 \u6587\u4ef6\u5939\u7684\u7b26\u53f7 \u627e\u5230 \u521a\u624d\u89e3\u538b\u7684 TF\u5361\u955c\u50cf\u6587\u4ef6  dongshannezhastu-sdcard.img \u6700\u540e \u70b9\u51fb \u5199\u5165\uff0c\u7b49\u5f85\u5199\u5165\u5b8c\u6210\u5373\u53ef\u3002</li> </ul> <p></p> <p>\u5b8c\u6210\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f39\u51faTF\u5361\uff0c\u5e76\u5c06\u5176\u63d2\u5230 \u4e1c\u5c71\u54ea\u5412STU \u6700\u5c0f\u677f\u80cc\u9762\u7684TF\u5361\u69fd\u4f4d\u7f6e\u5904\uff0c\u6b64\u65f6\u8fde\u63a5 \u4e32\u53e3\u7ebf \u5e76\u4f7f\u7528 \u4e32\u53e3\u5de5\u5177\u6253\u5f00\u4e32\u53e3\u8bbe\u5907\uff0c\u6309\u4e0b\u5f00\u53d1\u677f\u7684 **RESET**\u590d\u4f4d\u6309\u952e\u5c31\u53ef\u4ee5\u91cd\u542f\u8fdb\u5165TF\u5361\u7cfb\u7edf\u5185\u4e86\u3002</p>"},{"location":"DongshanNezhaSTU/03-QuickStart/#_10","title":"\u542f\u52a8\u7cfb\u7edf","text":"<p>\u7cfb\u7edf\u7684\u767b\u5f55\u7528\u6237\u540d root \u5bc6\u7801\u4e3a\u7a7a</p> <p>\u7cfb\u7edf\u7684\u767b\u5f55\u7528\u6237\u540d root \u5bc6\u7801\u4e3a\u7a7a</p> <p>\u7cfb\u7edf\u7684\u767b\u5f55\u7528\u6237\u540d root \u5bc6\u7801\u4e3a\u7a7a</p>"},{"location":"DongshanNezhaSTU/04-StudyPath/","title":"\u5b66\u4e60\u8def\u7ebf","text":""},{"location":"DongshanNezhaSTU/04-StudyPath/#_2","title":"\u57fa\u7840\u60c5\u51b5","text":""},{"location":"DongshanNezhaSTU/04-StudyPath/#linux","title":"\u7eaf\u5c0f\u767d\u540c\u5b66\u4e0d\u61c2Linux","text":"<ul> <li>\u5b66\u4e60\u64cd\u4f5c\u4f7f\u7528ubuntu\u7cfb\u7edf\uff1a https://www.bilibili.com/video/BV1dU4y1D7fz</li> <li>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</li> <li>\u5b66\u4e60Linux C\u7f16\u7a0b\uff1a \u53c2\u8003\u5c0f\u7532\u9c7c\u8bfe\u7a0b</li> <li>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</li> </ul>"},{"location":"DongshanNezhaSTU/04-StudyPath/#linux_1","title":"\u61c2\u4e00\u70b9Linux\u6982\u5ff5","text":"<ul> <li> <p>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</p> </li> <li> <p>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</p> </li> </ul>"},{"location":"DongshanNezhaSTU/04-StudyPath/#linux_2","title":"\u719f\u6089\u5d4c\u5165\u5f0fLinux\u5f00\u53d1","text":"<ul> <li>\u5b66\u4e60Tina-SDK\u5f00\u53d1</li> <li>\u5b66\u4e60Linux\u9a71\u52a8\u5f00\u53d1</li> <li>\u5b66\u4e60\u4e13\u9898\u8bfe\u7a0b\uff08\u6bd4\u5982RISC-V\u67b6\u6784\u4e13\u9898\uff09</li> </ul>"},{"location":"DongshanNezhaSTU/04-StudyPath/#_3","title":"\u5de5\u4f5c\u5c97\u4f4d","text":""},{"location":"DongshanNezhaSTU/04-StudyPath/#linux_3","title":"\u5d4c\u5165\u5f0fLinux \u5e94\u7528\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"DongshanNezhaSTU/04-StudyPath/#linux_4","title":"\u5d4c\u5165\u5f0fLinux\u9a71\u52a8\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u4e2d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"DongshanNezhaSTU/04-StudyPath/#_4","title":"\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1","text":"<p>\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f18\u5316\u5de5\u7a0b\u5e08</p>"},{"location":"DongshanNezhaSTU/05-1_RunHelloword/","title":"\u8fd0\u884c\u8f93\u51fahello word","text":""},{"location":"DongshanNezhaSTU/05-1_RunHelloword/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u4e1c\u5c71\u54ea\u5412STU \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002\u56e0\u4e3a\u6700\u521d\u7684\u5de5\u5177\u94fe\u662f \u963f\u91cc\u5e73\u5934\u54e5\u63d0\u4f9b\uff0c\u4ed6\u4eec\u7684\u5de5\u5177\u94fe \u4e0e GNU\u793e\u533a\u6807\u51c6\u7684\u5de5\u5177\u94fe\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u6240\u4ee5\u6211\u4eec\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528 \u793e\u533a\u7248\u672c\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\uff0c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p>"},{"location":"DongshanNezhaSTU/05-1_RunHelloword/#_2","title":"\u83b7\u53d6\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe","text":"<p>\u6211\u4eec\u7684\u6e90\u7801\u90fd\u5b58\u653e\u5728\u4e0d\u540c\u7684git\u4ed3\u5e93\u5185\uff0c\u5176\u4e2d\u4ee5github\u4e3a\u4e3b\u8981\u6258\u7ba1\uff0c\u4e5f\u662f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u540c\u65f6\u4e5f\u4f1a\u4f7f\u7528 gitee\u4f5c\u4e3a\u5907\u7528\u7ad9\u70b9\uff0c\u6839\u636e\u5927\u5bb6\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u6765\u8fdb\u884c\u9009\u62e9\u3002</p> <ul> <li>\u5bf9\u4e8e\u53ef\u4ee5\u8bbf\u95eegithub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801</li> </ul> <pre><code>git clone https://github.com/DongshanPI/eLinuxCore_dongshannezhastu\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <ul> <li>\u5bf9\u4e8e\u65e0\u6cd5\u8bbf\u95eeGitHub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801\u3002</li> </ul> <pre><code>git clone https://gitee.com/weidongshan/eLinuxCore_dongshannezhastu.git\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <p>\u83b7\u53d6\u5b8c\u6210\u6e90\u7801\u540e\uff0c\u9700\u8981\u8fdb\u5165\u5230\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u8def\u5f84\u5230 \u5185\uff0c\u7528\u4e8e\u9a8c\u8bc1\u662f\u5426\u53ef\u7528\u3002</p> <pre><code>book@virtual-machine:~/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin$ ./riscv64-unknown-linux-gnu-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=./riscv64-unknown-linux-gnu-gcc\nCOLLECT_LTO_WRAPPER=/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin/../libexec/gcc/riscv64-unknown-linux-gnu/8.1.0/lto-wrapper\nTarget: riscv64-unknown-linux-gnu\nConfigured with: /ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/build/../source/riscv/riscv-gcc/configure --target=riscv64-unknown-linux-gnu --with-mpc=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --with-mpfr=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --with-gmp=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --prefix=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/install --with-sysroot=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/install/sysroot --with-system-zlib --enable-shared --enable-tls --enable-languages=c,c++,fortran --disable-libmudflap --disable-libssp --disable-libquadmath --disable-nls --disable-bootstrap --src=../../source/riscv/riscv-gcc --enable-checking=yes --with-pkgversion='C-SKY RISCV Tools V1.8.4 B20200702' --enable-multilib --with-abi=lp64d --with-arch=rv64gcxthead 'CFLAGS_FOR_TARGET=-O2  -mcmodel=medany' 'CXXFLAGS_FOR_TARGET=-O2  -mcmodel=medany' CC=gcc CXX=g++\nThread model: posix\ngcc version 8.1.0 (C-SKY RISCV Tools V1.8.4 B20200702)\n</code></pre> <p>\u5b8c\u6210\u4ee5\u540e \u6211\u4eec\u5c31\u53ef\u4ee5\u52a0\u5165\u5230 \u7cfb\u7edf\u7684 PATH\u73af\u5883\u53d8\u91cf\u5185\u3002</p> <p>\u9996\u5148 \u9700\u8981\u83b7\u53d6 \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u8fdb\u5165\u5230  <code>eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin</code>\u76ee\u5f55\u4e0b\u6267\u884c pwd \u547d\u4ee4\uff0c\u5373\u53ef\u5f97\u5230\u7edd\u5bf9\u8def\u5f84 <code>/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin</code> \u3002</p> <pre><code>book@virtual-machine:~/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin$ pwd\n/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u8bb2\u8fd9\u4e2a\u52a0\u5165\u5230\u7cfb\u7edf \u73af\u5883\u53d8\u91cf\u5185\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6267\u884c  \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4e86\u3002</p> <pre><code>export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\n</code></pre> <p>\u6ce8\u610f\uff1a\u6b64\u65b9\u5f0f\u53ea\u9488\u5bf9\u5f53\u524d\u7684\u7ec8\u7aef\u6709\u6548\uff0c\u5982\u679c\u4f60\u5173\u95ed\u4e86\u8fd9\u4e2a\u7ec8\u7aef\uff0c\u518d\u6b21\u5f00\u542f\u7ec8\u7aef \u9700\u8981\u91cd\u65b0\u6267\u884c\u624d\u53ef\u4ee5\u3002</p> <p>\u8fd8\u6709\u53e6\u4e00\u79cd\u6c38\u4e45\u751f\u6548\u7684\u65b9\u5f0f \u5c31\u662f\u5199\u5165\u5230 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u91cc\u9762\uff0c\u9700\u8981\u4fee\u6539  /etc/environment \u5728\u672b\u5c3e\u52a0\u4e0a \u4f60\u83b7\u53d6\u5230\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7edd\u5bf9\u8def\u5f84,\u6ce8\u610f\u4fee\u6539\u9700\u8981\u4f7f\u7528 sudo \u547d\u4ee4\u3002</p> <pre><code>book@virtual-machine:~$ cat /etc/environment\nPATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\"\n</code></pre>"},{"location":"DongshanNezhaSTU/05-1_RunHelloword/#hello-word_1","title":"\u7f16\u5199Hello word\u7a0b\u5e8f","text":"<ul> <li>\u914d\u7f6e\u597d\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff0c\u5982\u4e0b\u4e3a\u4e00\u4e2a\u6700\u7b80\u5355\u7684 hello word\u6253\u5370\u793a\u4f8b\u7a0b\u5e8f\u3002</li> </ul> <pre><code>#include &lt;stdio.h&gt;\nint main (void)\n{\n    printf(\"hello word!\\n\");\n    return 0;\n}    \n</code></pre> <p>\u7f16\u5199\u5b8c\u6210\u540e\uff0c\u4fdd\u5b58\u5230 helloword.c</p> <p>\u4e4b\u540e\u6211\u4eec\u6267\u884c \u5982\u4e0b\u7f16\u8bd1\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1 </p> <pre><code>book@virtual-machine:~$ vim helloword.c \nbook@virtual-machine:~$ riscv64-unknown-linux-gnu-gcc -o helloword helloword.c\nbook@virtual-machine:~$ file helloword\nhelloword: ELF 64-bit LSB executable, UCB RISC-V, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-riscv64xthead-lp64d.so.1, for GNU/Linux 4.15.0, with debug_info, not stripped\n</code></pre>"},{"location":"DongshanNezhaSTU/05-1_RunHelloword/#_3","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u63a8\u8fdb\u4f7f\u7528 \u7f51\u7edc\u65b9\u5f0f\uff0c\u7f51\u7edc\u4e5f\u6709\u5f88\u591a\uff0c\u6709TFTP\u4f20\u8f93\uff0c\u6709nfs\u4f20\u8f93\uff0c\u6709SFTP\u4f20\u8f93\uff0c\u5176\u4e2dnfs\u4f20\u8f93\u9700\u8981\u5185\u6838\u652f\u6301 nfs\u6587\u4ef6\u7cfb\u7edf\uff0cSFTP\u9700\u8981\u6839\u6587\u4ef6\u7cfb\u7edf\u652f\u6301 openssh\u7ec4\u4ef6\u670d\u52a1\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u8fd8\u662f\u9009\u7528tftp\u670d\u52a1\u3002</p>"},{"location":"DongshanNezhaSTU/05-1_RunHelloword/#tftp","title":"\u4f7f\u7528tftp\u7f51\u7edc\u670d\u52a1","text":"<ol> <li>\u9996\u5148\uff0c\u9700\u8981\u4f60\u7684ubuntu\u7cfb\u7edf\u652f\u6301 tftp\u670d\u52a1\uff0c\u5df2\u7ecf\u914d\u7f6e\u5e76\u4e14\u5b89\u88c5\u597d\uff0c\u7136\u540e\u8bb2\u7f16\u8bd1\u51fa\u6765\u7684 helloword\u7a0b\u5e8f \u62f7\u8d1d\u5230 tftp\u76ee\u5f55\u4e0b\u3002</li> </ol> <pre><code>book@virtual-machine:~$ cp helloword ~/tftpboot/\nbook@virtual-machine:~$ ls ~/tftpboot/helloword\n/home/book/tftpboot/helloword\nbook@virtual-machine:~$\n</code></pre> <ol> <li>\u8fdb\u5165\u5230\u5f00\u53d1\u677f\u5185\uff0c\u9996\u5148\u8ba9\u5f00\u53d1\u677f\u53ef\u4ee5\u83b7\u53d6\u5230IP\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u548c ubuntu\u7cfb\u7edfping\u901a(\u8fd9\u91cc\u6307\u7684\u662f\u7f16\u8bd1helloword\u4e3b\u673a)\uff0c\u4e4b\u540e\u6211\u4eec\u5728\u5f00\u53d1\u677f\u4e0a \u83b7\u53d6 helloword \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6267\u884c\u3002</li> </ol> <pre><code># udhcpc\nudhcpc: started, v1.35.0\nudhcpc: broadcasting discover\nudhcpc: broadcasting select for 192.168.1.47, server 192.168.1.1\nudhcpc: lease of 192.168.1.47 obtained from 192.168.1.1, lease time 86400\ndeleting routers\nadding dns 192.168.1.1\n# tftp -g -r helloword 192.168.1.133\n# ls\nhelloword\n</code></pre> <p>\u5982\u4e0a\u6240\u793a\uff0c\u6211\u7684ubuntu\u4e3b\u673aIP\u5730\u5740\u662f 192.168.1.133 \uff0c\u6240\u4ee5\u4f7f\u7528tftp \u4ece ubuntu\u83b7\u53d6helloword \u7a0b\u5e8f\uff0c\u83b7\u53d6\u901f\u5ea6\u6839\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"DongshanNezhaSTU/05-1_RunHelloword/#usb-adb","title":"\u4f7f\u7528usb adb\u65b9\u5f0f","text":"<ul> <li>\u540e\u9762\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 usb otg  adb\u547d\u4ee4\u4f20\u8f93\u6587\u4ef6\u3002</li> </ul>"},{"location":"DongshanNezhaSTU/05-1_RunHelloword/#_4","title":"\u8fd0\u884c","text":"<p>\u4e0b\u8f7d\u597d\u7a0b\u5e8f\u4ee5\u540e\uff0c\u9700\u8981\u4f7f\u7528chmod +x \u547d\u4ee4\u6765\u7ed9\u7a0b\u5e8f\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\uff0c\u4e4b\u540e \u6211\u4eec\u5c31\u53ef\u4ee5\u6267\u884c \u8fd9\u4e2ahelloword\u5e94\u7528\u4e86\u3002</p> <pre><code># chmod +x helloword\n# ./helloword\nhello word!\n#\n</code></pre>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/","title":"\u7f16\u8bd1\u8fd0\u884cHelloword\u9a71\u52a8","text":""},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u4e1c\u5c71\u54ea\u5412STU \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002\u56e0\u4e3a\u6700\u521d\u7684\u5de5\u5177\u94fe\u662f \u963f\u91cc\u5e73\u5934\u54e5\u63d0\u4f9b\uff0c\u4ed6\u4eec\u7684\u5de5\u5177\u94fe \u4e0e GNU\u793e\u533a\u6807\u51c6\u7684\u5de5\u5177\u94fe\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u6240\u4ee5\u6211\u4eec\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528 \u793e\u533a\u7248\u672c\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\uff0c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#kernel","title":"\u83b7\u53d6kernel\u6e90\u7801\u5de5\u7a0b","text":"<p>\u6211\u4eec\u7684\u6e90\u7801\u90fd\u5b58\u653e\u5728\u4e0d\u540c\u7684git\u4ed3\u5e93\u5185\uff0c\u5176\u4e2d\u4ee5github\u4e3a\u4e3b\u8981\u6258\u7ba1\uff0c\u4e5f\u662f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u540c\u65f6\u4e5f\u4f1a\u4f7f\u7528 gitee\u4f5c\u4e3a\u5907\u7528\u7ad9\u70b9\uff0c\u6839\u636e\u5927\u5bb6\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u6765\u8fdb\u884c\u9009\u62e9\u3002</p> <ul> <li>\u5bf9\u4e8e\u53ef\u4ee5\u8bbf\u95eegithub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801</li> </ul> <pre><code>git clone https://github.com/DongshanPI/eLinuxCore_dongshannezhastu\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <ul> <li>\u5bf9\u4e8e\u65e0\u6cd5\u8bbf\u95eeGitHub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801\u3002</li> </ul> <pre><code>git clone https://gitee.com/weidongshan/eLinuxCore_dongshannezhastu.git\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#_2","title":"\u914d\u7f6e\u5185\u6838\u7f16\u8bd1\u73af\u5883","text":"<p><pre><code>export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\nexport ARCH=riscv\nexport CROSS_COMPILE=riscv64-unknown-linux-gnu-\n</code></pre> <pre><code>book@100ask:~/eLinuxCore_dongshannezhastu/linux$ export ARCH=riscv\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ export CROSS_COMPILE=riscv64-unknown-linux-gnu-\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\nbook@100ask:~/NezhaSTU/eLinuxCore_dongshannezhastu/linux$ make sun20iw1p1_d1_defconfig\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  HOSTCC  scripts/kconfig/confdata.o\n  HOSTCC  scripts/kconfig/expr.o\n  LEX     scripts/kconfig/lexer.lex.c\n  YACC    scripts/kconfig/parser.tab.[ch]\n  HOSTCC  scripts/kconfig/lexer.lex.o\n  HOSTCC  scripts/kconfig/parser.tab.o\n  HOSTCC  scripts/kconfig/preprocess.o\n  HOSTCC  scripts/kconfig/symbol.o\n  HOSTLD  scripts/kconfig/conf\n#\n# configuration written to .config\n#\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ make Image  -j8\n</code></pre></p>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#helloword_1","title":"\u7f16\u5199 helloword\u9a71\u52a8","text":"<p>hello_drv.c</p> <pre><code>#include &lt;linux/module.h&gt;\n\n#include &lt;linux/fs.h&gt;\n#include &lt;linux/errno.h&gt;\n#include &lt;linux/miscdevice.h&gt;\n#include &lt;linux/kernel.h&gt;\n#include &lt;linux/major.h&gt;\n#include &lt;linux/mutex.h&gt;\n#include &lt;linux/proc_fs.h&gt;\n#include &lt;linux/seq_file.h&gt;\n#include &lt;linux/stat.h&gt;\n#include &lt;linux/init.h&gt;\n#include &lt;linux/device.h&gt;\n#include &lt;linux/tty.h&gt;\n#include &lt;linux/kmod.h&gt;\n#include &lt;linux/gfp.h&gt;\n\n/* 1. \u786e\u5b9a\u4e3b\u8bbe\u5907\u53f7                                                                 */\nstatic int major = 0;\nstatic char kernel_buf[1024];\nstatic struct class *hello_class;\n\n\n#define MIN(a, b) (a &lt; b ? a : b)\n\n/* 3. \u5b9e\u73b0\u5bf9\u5e94\u7684open/read/write\u7b49\u51fd\u6570\uff0c\u586b\u5165file_operations\u7ed3\u6784\u4f53                   */\nstatic ssize_t hello_drv_read (struct file *file, char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_to_user(buf, kernel_buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic ssize_t hello_drv_write (struct file *file, const char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_from_user(kernel_buf, buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic int hello_drv_open (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\nstatic int hello_drv_close (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\n/* 2. \u5b9a\u4e49\u81ea\u5df1\u7684file_operations\u7ed3\u6784\u4f53                                              */\nstatic struct file_operations hello_drv = {\n    .owner   = THIS_MODULE,\n    .open    = hello_drv_open,\n    .read    = hello_drv_read,\n    .write   = hello_drv_write,\n    .release = hello_drv_close,\n};\n\n/* 4. \u628afile_operations\u7ed3\u6784\u4f53\u544a\u8bc9\u5185\u6838\uff1a\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f                                */\n/* 5. \u8c01\u6765\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f\u554a\uff1f\u5f97\u6709\u4e00\u4e2a\u5165\u53e3\u51fd\u6570\uff1a\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u5165\u53e3\u51fd\u6570 */\nstatic int __init hello_init(void)\n{\n    int err;\n\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    major = register_chrdev(0, \"hello\", &amp;hello_drv);  /* /dev/hello */\n\n\n    hello_class = class_create(THIS_MODULE, \"hello_class\");\n    err = PTR_ERR(hello_class);\n    if (IS_ERR(hello_class)) {\n        printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n        unregister_chrdev(major, \"hello\");\n        return -1;\n    }\n\n    device_create(hello_class, NULL, MKDEV(major, 0), NULL, \"hello\"); /* /dev/hello */\n\n    return 0;\n}\n\n/* 6. \u6709\u5165\u53e3\u51fd\u6570\u5c31\u5e94\u8be5\u6709\u51fa\u53e3\u51fd\u6570\uff1a\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u51fa\u53e3\u51fd\u6570           */\nstatic void __exit hello_exit(void)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    device_destroy(hello_class, MKDEV(major, 0));\n    class_destroy(hello_class);\n    unregister_chrdev(major, \"hello\");\n}\n\n\n/* 7. \u5176\u4ed6\u5b8c\u5584\uff1a\u63d0\u4f9b\u8bbe\u5907\u4fe1\u606f\uff0c\u81ea\u52a8\u521b\u5efa\u8bbe\u5907\u8282\u70b9                                     */\n\nmodule_init(hello_init);\nmodule_exit(hello_exit);\n\nMODULE_LICENSE(\"GPL\");\n</code></pre> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n/*\n * ./hello_drv_test -w abc\n * ./hello_drv_test -r\n */\nint main(int argc, char **argv)\n{\n    int fd;\n    char buf[1024];\n    int len;\n\n    /* 1. \u5224\u65ad\u53c2\u6570 */\n    if (argc &lt; 2) \n    {\n        printf(\"Usage: %s -w &lt;string&gt;\\n\", argv[0]);\n        printf(\"       %s -r\\n\", argv[0]);\n        return -1;\n    }\n\n    /* 2. \u6253\u5f00\u6587\u4ef6 */\n    fd = open(\"/dev/hello\", O_RDWR);\n    if (fd == -1)\n    {\n        printf(\"can not open file /dev/hello\\n\");\n        return -1;\n    }\n\n    /* 3. \u5199\u6587\u4ef6\u6216\u8bfb\u6587\u4ef6 */\n    if ((0 == strcmp(argv[1], \"-w\")) &amp;&amp; (argc == 3))\n    {\n        len = strlen(argv[2]) + 1;\n        len = len &lt; 1024 ? len : 1024;\n        write(fd, argv[2], len);\n    }\n    else\n    {\n        len = read(fd, buf, 1024);      \n        buf[1023] = '\\0';\n        printf(\"APP read : %s\\n\", buf);\n    }\n\n    close(fd);\n\n    return 0;\n}\n</code></pre> <p>Makefile:</p> <pre><code># 1. \u4f7f\u7528\u4e0d\u540c\u7684\u5f00\u53d1\u677f\u5185\u6838\u65f6, \u4e00\u5b9a\u8981\u4fee\u6539KERN_DIR\n# 2. KERN_DIR\u4e2d\u7684\u5185\u6838\u8981\u4e8b\u5148\u914d\u7f6e\u3001\u7f16\u8bd1, \u4e3a\u4e86\u80fd\u7f16\u8bd1\u5185\u6838, \u8981\u5148\u8bbe\u7f6e\u4e0b\u5217\u73af\u5883\u53d8\u91cf:\n# 2.1 ARCH,          \u6bd4\u5982: export ARCH=arm64\n# 2.2 CROSS_COMPILE, \u6bd4\u5982: export CROSS_COMPILE=aarch64-linux-gnu-\n# 2.3 PATH,          \u6bd4\u5982: export PATH=$PATH:/home/book/100ask_roc-rk3399-pc/ToolChain-6.3.1/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin \n# \u6ce8\u610f: \u4e0d\u540c\u7684\u5f00\u53d1\u677f\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u4e0a\u8ff03\u4e2a\u73af\u5883\u53d8\u91cf\u4e0d\u4e00\u5b9a\u76f8\u540c,\n#       \u8bf7\u53c2\u8003\u5404\u5f00\u53d1\u677f\u7684\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u624b\u518c\n\nKERN_DIR = /home/book/eLinuxCore_dongshannezhastu/linux/\n\nall:\n    make -C $(KERN_DIR) M=`pwd` modules \n    $(CROSS_COMPILE)gcc -o hello_drv_test hello_drv_test.c \n\nclean:\n    make -C $(KERN_DIR) M=`pwd` modules clean\n    rm -rf modules.order\n    rm -f hello_drv_test\n\nobj-m   += hello_drv.o\n</code></pre>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#_3","title":"\u7f16\u8bd1","text":"<pre><code>book@100ask:~$ make\nmake -C /home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux/ M=`pwd` modules\nmake[1]: Entering directory '/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux'\n  CC [M]  /home/book/NezhaSTU/hello_drv.o\n  Building modules, stage 2.\n  MODPOST 1 modules\n  CC [M]  /home/book/NezhaSTU/hello_drv.mod.o\n  LD [M]  /home/book/NezhaSTU/hello_drv.ko\nmake[1]: Leaving directory '/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux'\nriscv64-unknown-linux-gnu-gcc -o hello_drv_test hello_drv_test.c\nbook@100ask:~$\n</code></pre>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#_4","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u63a8\u8fdb\u4f7f\u7528 \u7f51\u7edc\u65b9\u5f0f\uff0c\u7f51\u7edc\u4e5f\u6709\u5f88\u591a\uff0c\u6709TFTP\u4f20\u8f93\uff0c\u6709nfs\u4f20\u8f93\uff0c\u6709SFTP\u4f20\u8f93\uff0c\u5176\u4e2dnfs\u4f20\u8f93\u9700\u8981\u5185\u6838\u652f\u6301 nfs\u6587\u4ef6\u7cfb\u7edf\uff0cSFTP\u9700\u8981\u6839\u6587\u4ef6\u7cfb\u7edf\u652f\u6301 openssh\u7ec4\u4ef6\u670d\u52a1\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u8fd8\u662f\u9009\u7528tftp\u670d\u52a1\u3002</p>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#tftp","title":"\u4f7f\u7528tftp\u7f51\u7edc\u670d\u52a1","text":"<ol> <li>\u9996\u5148\uff0c\u9700\u8981\u4f60\u7684ubuntu\u7cfb\u7edf\u652f\u6301 tftp\u670d\u52a1\uff0c\u5df2\u7ecf\u914d\u7f6e\u5e76\u4e14\u5b89\u88c5\u597d\uff0c\u7136\u540e\u8bb2\u7f16\u8bd1\u51fa\u6765\u7684 helloword\u7a0b\u5e8f \u62f7\u8d1d\u5230 tftp\u76ee\u5f55\u4e0b\u3002</li> </ol> <pre><code>book@100ask:~$ cp hello_drv_test hello_drv.ko ~/tftpboot/\n</code></pre> <ol> <li>\u8fdb\u5165\u5230\u5f00\u53d1\u677f\u5185\uff0c\u9996\u5148\u8ba9\u5f00\u53d1\u677f\u53ef\u4ee5\u83b7\u53d6\u5230IP\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u548c ubuntu\u7cfb\u7edfping\u901a(\u8fd9\u91cc\u6307\u7684\u662f\u7f16\u8bd1helloword\u4e3b\u673a)\uff0c\u4e4b\u540e\u6211\u4eec\u5728\u5f00\u53d1\u677f\u4e0a \u83b7\u53d6 helloword \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6267\u884c\u3002</li> </ol> <pre><code># udhcpc\nudhcpc: started, v1.35.0\n[  974.154486] libphy: 4500000.eth: probed\n[  974.159083] sunxi-gmac 4500000.eth eth0: eth0: Type(8) PHY ID 001cc916 at 0 IRQ poll (4500000.eth-0:00)\nudhcpc: broadcasting discover\nudhcpc: broadcasting discover\n[  979.331180] sunxi-gmac 4500000.eth eth0: Link is Up - 1Gbps/Full - flow control off\n[  979.340154] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready\nudhcpc: broadcasting discover\nudhcpc: broadcasting select for 192.168.1.47, server 192.168.1.1\nudhcpc: lease of 192.168.1.47 obtained from 192.168.1.1, lease time 86400\ndeleting routers\nadding dns 192.168.1.1\n# [  992.315224] random: crng init done\n[  992.319022] random: 2 urandom warning(s) missed due to ratelimiting\n\n# tftp -g -r hello_drv.ko 192.168.1.133\n# tftp -g -r hello_drv_test  192.168.1.133\n# ls\nhello_drv.ko    hello_drv_test  helloword\n</code></pre> <p>\u5982\u4e0a\u6240\u793a\uff0c\u6211\u7684ubuntu\u4e3b\u673aIP\u5730\u5740\u662f 192.168.1.133 \uff0c\u6240\u4ee5\u4f7f\u7528tftp \u4ece ubuntu\u83b7\u53d6helloword \u7a0b\u5e8f\uff0c\u83b7\u53d6\u901f\u5ea6\u6839\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"DongshanNezhaSTU/05-2_RunHellowordDriver/#_5","title":"\u8fd0\u884c","text":"<pre><code># insmod hello_drv.ko\n[ 1007.072991] hello_drv: loading out-of-tree module taints kernel.\n[ 1007.081285] /home/book/NezhaSTU/hello_drv.c hello_init line 70\n# chmod +x hello_drv_test\n# ls /dev/h\nhdmi   hello\n# ls /dev/hello\n/dev/hello\n# ./hello_drv\nhello_drv.ko    hello_drv_test\n# ./hello_drv_test  -w abc\n[ 1060.000621] /home/book/NezhaSTU/hello_drv.c hello_drv_open line 45\n[ 1060.007613] /home/book/NezhaSTU/hello_drv.c hello_drv_write line 38\n[ 1060.015194] /home/book/NezhaSTU/hello_drv.c hello_drv_close line 51\n# ./hello_drv_test  -r\n[ 1062.312864] /home/book/NezhaSTU/hello_drv.c hello_drv_open line 45\n[ 1062.319853] /home/book/NezhaSTU/hello_drv.c hello_drv_read line 30\nAPP read : abc[ 1062.327680] /home/book/NezhaSTU/hello_drv.c hello_drv_close line 51\n\n#\n</code></pre>"},{"location":"DongshanNezhaSTU/06-ConfigHostEnv/","title":"\u5b89\u88c5\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":""},{"location":"DongshanNezhaSTU/06-ConfigHostEnv/#_2","title":"\u83b7\u53d6\u865a\u62df\u673a\u7cfb\u7edf","text":""},{"location":"DongshanNezhaSTU/06-ConfigHostEnv/#vmware","title":"\u4e0b\u8f7dvmware\u865a\u62df\u673a\u5de5\u5177","text":"<p>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u7f51\u5740    https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html   \u53c2\u8003\u4e0b\u56fe\u7bad\u5934\u6240\u793a\uff0c\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5 Windows\u7248\u672c\u7684VMware Workstation \uff0c\u70b9\u51fb DOWNLOAD NOW  \u5373\u53ef\u5f00\u59cb\u4e0b\u8f7d\u3002</p> <p></p> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u5168\u90e8\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u4e00\u6b65\u6b65\u5b89\u88c5\u5373\u53ef\u3002</p>"},{"location":"DongshanNezhaSTU/06-ConfigHostEnv/#ubuntu","title":"\u83b7\u53d6Ubuntu\u7cfb\u7edf\u955c\u50cf","text":"<ul> <li>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00  https://www.linuxvmimages.com/images/ubuntu-1804/     \u627e\u5230\u5982\u4e0b\u7bad\u5934\u6240\u793a\u4f4d\u7f6e\uff0c\u70b9\u51fb VMware Image \u4e0b\u8f7d\u3002</li> </ul> <p>\u4e0b\u8f7d\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u6301\u7eed 10 \u5230 30 \u5206\u949f\uff0c\u5177\u4f53\u8981\u4f9d\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"DongshanNezhaSTU/06-ConfigHostEnv/#_3","title":"\u8fd0\u884c\u865a\u62df\u673a\u7cfb\u7edf","text":"<ol> <li>\u89e3\u538b\u7f29 \u865a\u62df\u673a\u7cfb\u7edf\u955c\u50cf\u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u5982\u4e0b\u4e24\u4e2a\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 \u540e\u7f00\u540d\u4e3a .vmx \u8fd9\u4e2a \u914d\u7f6e\u6587\u4ef6\u3002</li> </ol> <ol> <li>\u6253\u5f00\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 vmware workstation \u8f6f\u4ef6 \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684 \u6587\u4ef6 \u2192 \u6253\u5f00 \u627e\u5230\u4e0a\u9762\u7684 Ubuntu_18.04.6_VM_LinuxVMImages.COM.vmx  \u6587\u4ef6\uff0c\u4e4b\u540e\u4f1a\u5f39\u51fa\u65b0\u7684\u865a\u62df\u673a\u5bf9\u8bdd\u6846\u9875\u9762\u3002</li> </ol> <ol> <li>\u5982\u4e0b\u56fe\u6240\u793a\u4e3a  \u4e3a\u6211\u4eec\u5df2\u7ecf\u865a\u62df\u673a\u7684\u914d\u7f6e\u754c\u9762\uff0c\u90a3\u9762\u6211\u4eec\u53ef\u4ee5 \u70b9\u51fb \u7ea2\u6846 2 \u7f16\u8f91\u865a\u62df\u673a\u8bbe\u7f6e \u91cc\u9762 \u53bb\u8c03\u6b63 \u6211\u4eec\u865a\u62df\u673a\u7684 \u5185\u5b58 \u5927\u5c0f \u548c\u5904\u7406\u5668\u4e2a\u6570\uff0c\u5efa\u8bae \u6700\u597d \u5185\u5b58\u4e3a 4GB \u53ca\u4ee5\u4e0a\uff0c\u5904\u7406\u5668\u81f3\u5c114 \u4e2a\u3002 \u8c03\u6574\u597d\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5 \u70b9\u51fb \u5f00\u542f\u6b64\u865a\u62df\u673a \u6765\u8fd0\u884c\u6b64\u865a\u62df\u673a\u4e86</li> </ol> <p>\u7b2c\u4e00\u6b21\u6253\u5f00\u4f1a\u63d0\u793a  \u4e00\u4e2a \u865a\u62df\u673a\u5df2\u7ecf\u590d\u5236\u7684 \u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u8fd9\u65f6\uff0c\u53ea\u9700\u8981 \u70b9\u51fb  \u6211\u5df2\u590d\u5236\u865a\u62df\u673a  \u5c31\u53ef\u4ee5\u7ee7\u7eed\u542f\u52a8\u865a\u62df\u673a\u7cfb\u7edf\u4e86\u3002</p> <p></p> <p>\u7b49\u5f85\u6570\u79d2\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u542f\u52a8\u4e86\uff0c\u542f\u52a8\u4ee5\u540e \u9f20\u6807\u70b9\u51fb   Ubuntu  \u5b57\u6837\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u767b\u5f55\u5bf9\u8bdd\u6846\uff0c\u8f93\u5165  \u5bc6\u7801 ubuntu \u5373\u53ef\u767b\u5f55\u8fdb\u5165ubuntu\u7cfb\u7edf\u5185\u3002</p> <p>\u6ce8\u610f\uff1a </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>ubuntu\u9ed8\u8ba4\u9700\u8981\u8054\u7f51\uff0c\u5982\u679c\u4f60\u7684 Windows\u7535\u8111\u5df2\u7ecf\u53ef\u4ee5\u8bbf\u95eeInternet \u4e92\u8054\u7f51\uff0cubuntu\u7cfb\u7edf\u540e\u5c31\u4f1a\u81ea\u52a8\u5171\u4eab Windows\u7535\u8111\u7684\u7f51\u7edc \u8fdb\u884c\u8fde\u63a5internet \u7f51\u7edc\u3002</p>"},{"location":"DongshanNezhaSTU/06-ConfigHostEnv/#_4","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li>\u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\u5305, \u9f20\u6807\u70b9\u51fb\u8fdb\u5165 ubuntu\u754c\u9762\u5185\uff0c\u952e\u76d8\u540c\u65f6 \u6309\u4e0b ctrl + alt + t \u4e09\u4e2a\u6309\u952e\u4f1a\u5feb\u901f\u5524\u8d77\uff0c\u7ec8\u7aef\u754c\u9762\uff0c\u5524\u8d77\u6210\u529f\u540e\uff0c\u5728\u7ec8\u7aef\u91cc\u9762\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305\u3002</li> </ul> <pre><code>sudo apt-get install -y  sed make binutils build-essential  gcc g++ bash patch gzip bzip2 perl  tar cpio unzip rsync file  bc wget python  cvs git mercurial rsync  subversion android-tools-mkbootimg vim  libssl-dev  android-tools-fastboot\n</code></pre> <p>\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684ubuntu\u865a\u62df\u673a \u7b2c\u4e00\u6b21\u542f\u52a8 \u65e0\u6cd5 \u901a\u8fc7 windows\u4e0b\u590d\u5236 \u547d\u4ee4 \u7c98\u8d34\u5230 ubuntu\u5185\uff0c\u5219\u9700\u8981\u5148\u624b\u6572 \u6267\u884c\u5982\u4e0b\u547d\u4ee4 \u5b89\u88c5\u4e00\u4e2a \u7528\u4e8e \u865a\u62df\u673a\u548c windows\u5171\u4eab\u526a\u5207\u677f\u7684\u5de5\u5177\u5305\u3002</p> <pre><code>sudo apt install open-vm-tools-desktop \n</code></pre> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u7535\u6e90\u6309\u94ae\uff0c\u91cd\u542fubuntu\u7cfb\u7edf\uff0c\u6216\u8005 \u76f4\u63a5\u8f93\u5165 sudo reboot \u547d\u4ee4\u8fdb\u884c\u91cd\u542f\u3002</p> <p>\u8fd9\u65f6\u5c31\u53ef\u4ee5 \u901a\u8fc7windows\u7aef\u5411ubuntu\u5185\u7c98\u8d34\u6587\u4ef6\uff0c\u6216\u8005\u62f7\u8d1d\u62f7\u51fa\u6587\u4ef6\u4e86\u3002</p> <p></p> <p>\u505a\u5b8c\u8fd9\u4e00\u6b65\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\uff0c\u83b7\u53d6\u6e90\u7801 \u5f00\u59cbRISC-V \u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u7684\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002</p>"},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#_1","title":"\u7b80\u4ecb","text":"<ul> <li>\u6b64\u5957\u6784\u5efa\u7cfb\u7edf\u57fa\u4e8e\u5168\u5fd7RISCV-64 Linux D1-H  \u82af\u7247\uff0c\u9002\u914d\u4e86buildroot 2022lts\u4e3b\u7ebf\u7248\u672c\uff0c\u517c\u5bb9\u4e86\u767e\u95ee\u7f51\u7684\u9879\u76ee\u8bfe\u7a0b\u4ee5\u53ca\u76f8\u5173\u7ec4\u4ef6\uff0c\u771f\u6b63\u505a\u5230\u4e86\u4f4e\u8026\u5408\uff0c\u9ad8\u53ef\u7528\uff0c\u4f7f\u7528\u4e0d\u540c\u7684buildroot external tree\u89c4\u683c\uff0c\u8bb2\u4e0d\u540c\u7684\u9879\u76ee \u4e0d\u540c\u7684\u7ec4\u4ef6\u5206\u522b\u7ba1\u7406\uff0c\u6765\u5b9e\u73b0\u66f4\u5bb9\u6613\u4e0a\u624b \u4e5f\u66f4\u5bb9\u6613\u5b66\u4e60\u7406\u89e3\u3002</li> </ul>"},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#sdk","title":"\u83b7\u53d6sdk\u6e90\u7801","text":"<ul> <li>\u9ed8\u8ba4\u6e90\u7801\u90fd\u5b58\u653e\u5728github\u4ed3\u5e93\u5185\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6</li> </ul> <pre><code>book@virtual-machine:~$ git clone  https://github.com/DongshanPI/buildroot_dongshannezhastu\nbook@virtual-machine:~$ cd buildroot_dshannezhastu\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --init --recursive\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --recursive --remote\n</code></pre> <ul> <li>\u5bf9\u4e8e\u56fd\u5185\u65e0\u6cd5\u8bbf\u95eegithub\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u4f7f\u7528\u56fd\u5185\u5907\u7528gitee\u7ad9\u70b9\uff0c \u5982\u4e0b\u547d\u4ee4\u3002</li> </ul> <pre><code>book@virtual-machine:~$ git clone  https://gitee.com/weidognshan/buildroot_dongshannezhastu\nbook@virtual-machine:~$ cd buildroot_dshannezhastu\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --init --recursive\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --recursive --remote\n</code></pre>"},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#_2","title":"\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305","text":""},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#ubuntu-1804","title":"ubuntu-18.04","text":"<p>\u8fd0\u884c\u73af\u5883\u914d\u7f6e\uff1a \u6b64\u7cfb\u7edf\u57fa\u4e8eubuntu18.04\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5728\u4e4b\u524d\u7684\u57fa\u7840\u4e4b\u4e0a\u8fd8\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5fc5\u8981\u4f9d\u8d56</p> <pre><code> sudo apt-get install -y  libncurses5-dev   u-boot-tools\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5f00\u59cb\u7f16\u8bd1\u64cd\u4f5c\u3002</p>"},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#_3","title":"\u6700\u5c0f\u7cfb\u7edf\u7f16\u8bd1\u70e7\u5199","text":""},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#sdcard","title":"\u7f16\u8bd1sdcard \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<pre><code>book@virtual-machine:~/buildroot_dongshannezhastu$ cd buildroot-awol/\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make  BR2_EXTERNAL=\"../br2lvgl  ../br2qt5 ../br2nezhastu\"  dongshannezhastu_sdcard_core_defconfig\n\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make \n</code></pre>"},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#sdcard_1","title":"\u70e7\u5199sdcard \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u5728 output/images\u76ee\u5f55\u4e0b\u8f93\u51fa dongshannezhastu-sdcard.img \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230Windows\u7cfb\u7edf\u4e0b\u4f7f\u7528 wind32diskimage\u70e7\u5199\uff0c\u6216\u8005\u4f7f\u7528dd if \u70e7\u5f55\u5230tf\u5361\u5185\uff0c \u4e4b\u540e\u63d2\u5230\u5f00\u53d1\u677f\u4e0a\uff0c\u5373\u53ef\u542f\u52a8\u3002 \u8bf7\u53c2\u8003\u5de6\u4fa7 \u5feb\u901f\u542f\u52a8 \u9875\u9762</p>"},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#spi-nand","title":"\u7f16\u8bd1spi nand\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<pre><code>book@virtual-machine:~/buildroot_dongshannezhastu$ cd buildroot-awol/\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make  BR2_EXTERNAL=\"../br2lvgl  ../br2qt5 ../br2nezhastu\"  dongshannezhastu_spinand_core_defconfig\n\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make \n</code></pre>"},{"location":"DongshanNezhaSTU/07-Buildroot-SDK_DevelopmentGuide/#spi-nand_1","title":"\u70e7\u5199spi nand\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u5728 output/images\u76ee\u5f55\u4e0b\u8f93\u51fa d1-h-nezhastu_uart0.img \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230Windows\u7cfb\u7edf\u4e0b\u4f7f\u7528 \u4f7f\u7528 \u5168\u5fd7\u5b98\u65b9\u7684  AllwinnertechPhoeniSuit \u8fdb\u884c\u70e7\u5199\u3002 \u8be6\u7ec6\u70e7\u5199\u6b65\u9aa4\u8bf7\uff0c\u8bf7\u53c2\u8003\u5de6\u4fa7 \u5feb\u901f\u542f\u52a8 \u9875\u9762\u3002</p>"},{"location":"DongshanNezhaSTU/08-BuildBootloader/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efaBootloader","text":"<ul> <li>\u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\uff0cBootloader\u75314\u90e8\u5206\u7ec4\u6210\uff0c \u7b2c\u4e00\u90e8\u5206\u662f boot0 \u9636\u6bb5\uff0c\u7528\u4e8e\u521d\u59cb\u5316CPU DDR UART \u65f6\u949f\u7b49\u4e00\u4e9b\u5fc5\u8981\u5916\u8bbe\u548c\u5f15\u811a\u5206\u914d\uff0c\u4e4b\u540e\u8fdb\u5165\u7b2c\u4e8c\u90e8\u5206\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f opensbi  uboot  board.dtb \u8fd9\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u4e3a\u4e00\u4e2a boot_package.fex \u6587\u4ef6\u3002</li> <li>\u6240\u4ee5Bootloader\u7684\u6574\u4f53\u7684\u542f\u52a8\u6d41\u7a0b\u662f\uff0cboot0\u2192opensbi\u2192u-boot\u2192board.dtb</li> </ul>"},{"location":"DongshanNezhaSTU/08-BuildBootloader/#_1","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e00\u90e8\u5206","text":""},{"location":"DongshanNezhaSTU/08-BuildBootloader/#_2","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e8c\u90e8\u5206","text":""},{"location":"DongshanNezhaSTU/08-BuildBootloader/#opensbi","title":"\u5355\u72ec\u7f16\u8bd1 opensbi","text":"<ul> <li>\u5355\u72ec\u7f16\u8bd1 opensbi\u9636\u6bb5 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$  make opensbi-rebuild V=1\n</code></pre></li> </ul>"},{"location":"DongshanNezhaSTU/08-BuildBootloader/#uboot","title":"\u5355\u72ec\u7f16\u8bd1 uboot","text":"<ul> <li>\u5355\u72ec\u7f16\u8bd1 uboot\u9636\u6bb5 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$  make uboot-rebuild V=1\n</code></pre></li> </ul>"},{"location":"DongshanNezhaSTU/08-BuildBootloader/#boarddtb","title":"\u5355\u72ec\u7f16\u8bd1 board.dtb","text":""},{"location":"DongshanNezhaSTU/09-BuildLinuxKernel/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6253\u5305Linux Kernel","text":""},{"location":"DongshanNezhaSTU/09-BuildLinuxKernel/#_1","title":"\u5355\u72ec\u7f16\u8bd1\u5404\u4e2a\u90e8\u5206","text":"<ul> <li> <p>\u5355\u72ec\u7f16\u8bd1 kernel\u9636\u6bb5 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$  make linux-rebuild V=1\n</code></pre></p> </li> <li> <p>\u5355\u72ec\u7f16\u8bd1\u6587\u4ef6\u7cfb\u7edf</p> </li> <li>\u6307\u5b9a\u5b8c\u6210\u5de5\u5177\u94fe \u7cfb\u7edf\u914d\u7f6e \u9700\u8981\u5b89\u88c5\u7684\u5305 \u4ee5\u53ca\u6240\u9700\u7684\u683c\u5f0f \u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u6700\u540e\u751f\u6210\u7684\u955c\u50cf\u5728 output/image\u76ee\u5f55\u4e0b\u3002 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  all //\u5b8c\u6574\u7f16\u8bd1\u7cfb\u7edf\n</code></pre></li> </ul>"},{"location":"DongshanNezhaSTU/10-1_BuildrootSupportWifiBluetooth/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanNezhaSTU/10-1_BuildrootSupportWifiBluetooth/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6ebusybox","text":"<pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  busybox-menuconfig\n</code></pre>"},{"location":"DongshanNezhaSTU/10-1_BuildrootSupportWifiBluetooth/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>rm -rf  output/target;    find output/build/ -name .stamp_target_installed | xargs rm ; make\n</code></pre>"},{"location":"DongshanNezhaSTU/10-BuildRootfs/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanNezhaSTU/10-BuildRootfs/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6ebusybox","text":"<pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  busybox-menuconfig\n</code></pre>"},{"location":"DongshanNezhaSTU/10-BuildRootfs/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>rm -rf  output/target;    find output/build/ -name .stamp_target_installed | xargs rm ; make\n</code></pre>"},{"location":"DongshanNezhaSTU/11-Tina-SDK_DevelopmentGuide/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"DongshanNezhaSTU/11-Tina-SDK_DevelopmentGuide/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li> <p>\u8bbf\u95ee https://d1.docs.aw-ol.com/study/study_1tina/</p> </li> <li> <p>\u4f7f\u7528\u6211\u4eec\u63d0\u524d\u6574\u7406\u597d\u7684\u8d44\u6599\u5149\u76d8 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/13uKlqDXImmMl9cgKc41tZg?pwd=qcw7  \u63d0\u53d6\u7801\uff1aqcw7 </p> </li> </ul>"},{"location":"DongshanPI-D1s/01-BoardIntroduction/","title":"DongshanPI-D1s\u5f00\u53d1\u677f\u4ecb\u7ecd","text":"<ul> <li>\u6b64\u5f00\u53d1\u677f\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u8bba\u575b\u4ea4\u6d41\u8ba8\u8bba https://forums.100ask.net/c/aw/d1s/</li> </ul>"},{"location":"DongshanPI-D1s/01-BoardIntroduction/#_1","title":"\u786c\u4ef6\u7b80\u8ff0","text":""},{"location":"DongshanPI-D1s/01-BoardIntroduction/#11","title":"1.1 \u4e3b\u82af\u7247\u4ecb\u7ecd","text":"<p>D1s \u662f\u5168\u5fd7\u9488\u5bf9\u667a\u80fd\u89e3\u7801\u5e02\u573a\u63a8\u51fa\u7684\u9ad8\u6027\u4ef7\u6bd4 AIoT \u82af\u7247\u3002\u5b83\u4f7f\u7528 64bit RISC-V \u67b6\u6784\u7684\u963f\u91cc\u5e73\u5934\u54e5 C906 \u5904\u7406\u5668\uff0c\u5185\u7f6e\u4e8664M DDR2\uff0c\u652f\u6301 Linux \u7cfb\u7edf\uff0c\u540c\u65f6\u96c6\u6210\u4e86\u5927\u91cf\u81ea\u7814\u7684\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u76f8\u5173 IP\uff0c\u53ef\u4ee5\u652f\u6301 H.265,\u3001H.264\u3001MPEG-\u00bd/4\u3001JPEG \u7b49\u5168\u683c\u5f0f\u89c6\u9891\u89e3\u7801\uff0c\u652f\u6301ADC\u3001DAC\u3001I2S\u3001PCM\u3001DMIC\u3001OWA \u7b49\u591a\u79cd\u97f3\u9891\u63a5\u53e3\uff0c\u53ef\u4ee5\u5e7f\u6cdb\u5e94\u7528\u4e8e\u667a\u80fd\u5bb6\u5c45\u9762\u677f\u3001\u667a\u80fd\u5546\u663e\u3001\u5de5\u4e1a\u63a7\u5236\u3001\u8f66\u8f7d\u7b49\u4ea7\u54c1\u3002</p>"},{"location":"DongshanPI-D1s/01-BoardIntroduction/#_2","title":"\u82af\u7247\u6846\u56fe","text":""},{"location":"DongshanPI-D1s/01-BoardIntroduction/#_3","title":"\u53c2\u6570\u89c4\u683c","text":"<ul> <li>CPU</li> </ul> <p><pre><code>Alibaba T-Head C906 RISC CPU, 720MHz\n32 KB I-cache + 32 KB D-cache\n</code></pre> *  Memory</p> <pre><code>SIP 64 MB DDR2\nSD3.0/eMMC 5.0, SPI Nor/NAND Flash\n</code></pre> <ul> <li>Video Engine</li> </ul> <pre><code>Video decoding\n    H.265 up to 1080p@60fps \n    H.264 up to 1080p@60fps \n    MPEG-1/2/4, JPEG, VC1 up to 1080p@60fps\n\nVideo encoding\n    JPEG/MJPEG up to 1080p@60fps\n    Supports input picture scaler up/down\n</code></pre> <ul> <li>Display Engine</li> </ul> <pre><code>CVBS OUT interface, supporting NTSC and PAL format\nRGB LCD output interface up to 1920 x 1080@60fps\nDual link LVDS interface up to 1920 x 1080@60fps\n4-lane MIPI DSI interface up to 1920 x 1200@60fps\n</code></pre> <ul> <li>Video IN</li> </ul> <pre><code>8-bit parallel CSI interface\n</code></pre> <ul> <li>Audio</li> </ul> <pre><code>2 DACs and 3 ADCs\nAnalog audio interfaces: MICIN1P/N, MICIN2P/N, MICIN3P/N, FMINL/R, LINEINL/R, LIEOUTLP/N, LINEOUTRP/N, HPOUTL/R\nDigital audio interfaces: I2S/PCM, DMIC, OWA IN/OUT\n</code></pre> <ul> <li>Connectivity</li> </ul> <pre><code>USB2.0 DRD, USB2.0 Host\nSDIO 3.0, SPI x 2, UART x 6, TWI x 4\nPWM (8-ch), GPADC (2-ch), LRADC (1-ch), TPADC (4-ch), IR TX&amp;RX \n10/100/1000M EMAC with RMII and RGMII interfaces\n</code></pre> <ul> <li>Package</li> </ul> <pre><code>eLQFP128, 14 mm x 14 mm\n</code></pre> <ul> <li>Chip process</li> </ul> <pre><code>22nm\n</code></pre>"},{"location":"DongshanPI-D1s/01-BoardIntroduction/#12","title":"1.2 \u5916\u56f4\u5668\u4ef6\u4ecb\u7ecd","text":"<ul> <li>\u5f00\u53d1\u677f\u539f\u7406\u56fe DongshanPI-D1s_SCH-V2.pdf</li> </ul>"},{"location":"DongshanPI-D1s/01-BoardIntroduction/#13","title":"1.3 \u914d\u5957\u6a21\u5757\u4ecb\u7ecd","text":"<ul> <li>7\u5bf8 1024x600 RGB\u663e\u793a\u5c4f(\u5e26\u7535\u5bb9\u89e6\u6478)</li> <li>4\u5bf8 400x800\u53ccLINE MIPI DSI\u663e\u793a\u5c4f(\u5e26\u7535\u5bb9\u89e6\u6478)</li> <li>2.1\u5bf8\u5706\u5c4f \uff08\u5e26\u7535\u5bb9\u89e6\u6478\uff09</li> <li>4\u5bf8\u65b9\u5c4f \uff08\u5e26\u7535\u5bb9\u89e6\u6478\uff09</li> </ul>"},{"location":"DongshanPI-D1s/02-SupportingResources/","title":"\u914d\u5957\u8d44\u6e90","text":""},{"location":"DongshanPI-D1s/02-SupportingResources/#1","title":"1. \u5f00\u53d1\u677f\u8d44\u6599","text":"<ul> <li>DongshanPI-D1s\u539f\u7406\u56fe</li> <li>DongshanPI-D1s\u5916\u56f4\u82af\u7247\u6570\u636e\u624b\u518c</li> <li>D1s-Pro\u5f00\u53d1\u677f\u539f\u7406\u56fe</li> <li>D1s V1.2\u6838\u5fc3\u677f \u5c01\u88c5\u539f\u7406\u56fe</li> </ul>"},{"location":"DongshanPI-D1s/02-SupportingResources/#2","title":"2. \u4e3b\u82af\u7247\u8d44\u6599","text":"<ul> <li>D1s\u82af\u7247\u89c4\u683c\u4e66</li> <li>D1s\u82af\u7247\u6570\u636e\u624b\u518c</li> <li>D1s\u82af\u7247CPU\u7528\u6237\u5f00\u53d1\u624b\u518c</li> </ul>"},{"location":"DongshanPI-D1s/02-SupportingResources/#3-linux","title":"3. Linux\u914d\u5957\u8d44\u6599","text":"<ul> <li> <p>\u539f\u5382Tina-SDK V2.0\uff1a Tina Linux\u662f\u5168\u5fd7\u79d1\u6280\u57fa\u4e8eLinux\u5185\u6838\u5f00\u53d1\u7684\u9488\u5bf9\u667a\u80fd\u786c\u4ef6\u7c7b\u4ea7\u54c1\u7684\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u7cfb\u7edf\u3002Tina Linux\u57fa\u4e8eopenwrt-14.07 \u7248\u672c\u7684\u8f6f\u4ef6\u5f00\u53d1\u5305\uff0c\u5305\u542b\u4e86 Linux \u7cfb\u7edf\u5f00\u53d1\u7528\u5230\u7684\u5185\u6838\u6e90\u7801\u3001\u9a71\u52a8\u3001\u5de5\u5177\u3001\u7cfb\u7edf\u4e2d\u95f4\u4ef6\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5305\u3002openwrt \u662f\u77e5\u540d\u7684\u5f00\u6e90\u5d4c\u5165\u5f0f Linux \u7cfb\u7edf\u81ea\u52a8\u6784\u5efa\u6846\u67b6\uff0c\u662f\u7531 Makefile \u811a\u672c\u548c Kconfig \u914d\u7f6e\u6587\u4ef6\u6784\u6210\u7684\u3002\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 menuconfig\u914d\u7f6e\uff0c\u7f16\u8bd1\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u4ee5\u76f4\u63a5\u70e7\u5199\u5230\u673a\u5668\u4e0a\u8fd0\u884c\u7684 Linux \u7cfb\u7edf\u8f6f\u4ef6\u3002</p> </li> <li> <p>\u4e3b\u7ebfLinux\u7cfb\u7edf\u3002</p> </li> </ul>"},{"location":"DongshanPI-D1s/02-SupportingResources/#4-risc-v","title":"4. RISC-V\u4f53\u7cfb\u67b6\u6784","text":""},{"location":"DongshanPI-D1s/02-SupportingResources/#c906","title":"\u5e73\u5934\u54e5C906","text":""},{"location":"DongshanPI-D1s/02-SupportingResources/#risc-v","title":"RISC-V\u67b6\u6784","text":""},{"location":"DongshanPI-D1s/03-1_FlashSystem/","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":""},{"location":"DongshanPI-D1s/03-1_FlashSystem/#spinor","title":"\u70e7\u5199\u56fa\u4ef6\u81f3SPINor","text":""},{"location":"DongshanPI-D1s/03-1_FlashSystem/#_2","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ul> <li>\u786c\u4ef6\uff1aDongshanPI-D1s\u4e3b\u677f x1</li> <li>\u786c\u4ef6\uff1aTypeC\u7ebf X2</li> <li>\u8f6f\u4ef6\uff1a\u5168\u5fd7\u7ebf\u5237\u5de5\u5177\uff1aAllwinnertechPhoeniSuit</li> <li>\u8f6f\u4ef6\uff1aSPI Nor\u7cfb\u7edf\u955c\u50cf\uff1atina_d1s-nezha_nor_uart0_nor</li> <li>\u8f6f\u4ef6\uff1a\u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8\uff1aAllwinnerUSBFlashDeviceDriver</li> </ul>"},{"location":"DongshanPI-D1s/03-1_FlashSystem/#_3","title":"\u8fde\u63a5\u5f00\u53d1\u677f","text":"<p>\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c</p> <p></p> <p>\u5c06\u4e24\u4e2aTypeC\u7ebf\u5206\u522b\u8fde\u81f3DongshanPI-D1s\u5f00\u53d1\u677f <code>\u9ed1\u8272\u4ed4\u7ec6\u5e8f\u53f7 3.OTG\u70e7\u5f55\u63a5\u53e3</code> <code>\u9ed1\u8272\u5b57\u4f53\u5e8f\u53f7 4.\u8c03\u8bd5&amp;\u4e32\u53e3\u63a5\u53e3</code>  Typec\u7ebf\u53e6\u4e00\u7aef \u8fde\u63a5\u81f3 \u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\uff0c</p> <p>\u53ef\u4ee5\u5148\u83b7\u53d6\u8f6f\u4ef6 <code>\u5168\u5fd7\u7ebf\u5237\u5de5\u5177</code> <code>SPI Nor\u7cfb\u7edf\u955c\u50cf</code> <code>\u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8</code>\u5b89\u88c5\u5305 \u8fdb\u884c\u89e3\u538b\u7f29\u64cd\u4f5c\u3002</p>"},{"location":"DongshanPI-D1s/03-1_FlashSystem/#usb","title":"\u5b89\u88c5usb\u9a71\u52a8","text":"<p>\u5728\u6211\u4eec\u8fde\u63a5\u597d\u5f00\u53d1\u677f\u4ee5\u540e\uff0c\u5148\u6309\u4f4f DongshanPI-D1s\u5f00\u53d1\u677f <code>\u9ed1\u8272\u5e8f\u53f7\u4e3a 2.\u70e7\u5f55\u6a21\u5f0f\u6309\u952e</code> \u4e5f\u79f0\u4e3a**FEL** \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b <code>\u9ed1\u8272\u5e8f\u53f7\u4e3a 5.\u7cfb\u7edf\u590d\u4f4d\u6309\u952e</code>\u4e5f\u79f0 RESET \u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u3002</p> <p>\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7535\u8111\u8bbe\u5907\u7ba1\u7406\u5668  \u901a\u7528\u4e32\u884c\u603b\u7ebf\u63a7\u5236\u5668 \u90e8\u5206\u5f39\u51fa\u4e00\u4e2a  \u672a\u77e5\u8bbe\u5907 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u628a\u6211\u4eec\u63d0\u524d\u4e0b\u8f7d\u597d\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8 \u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u5c06\u89e3\u538b\u7f29\u8fc7\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8  \u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u8fd9\u4e48\u51e0\u4e2a\u6587\u4ef6\u3002</p> <pre><code>InstallUSBDrv.exe\ndrvinstaller_IA64.exe\ndrvinstaller_X86.exe\nUsbDriver/          \ndrvinstaller_X64.exe   \ninstall.bat\n</code></pre> <p>\u5bf9\u4e8ewind7\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u53ea\u9700\u8981\u4ee5\u7ba1\u7406\u5458 \u6253\u5f00   <code>install.bat</code> \u811a\u672c\uff0c\u7b49\u5f85\u5b89\u88c5\uff0c\u5728\u5f39\u51fa\u7684 \u662f\u5426\u5b89\u88c5\u9a71\u52a8\u7684\u5bf9\u8bdd\u6846\u91cc\u9762\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8ewind10/wind11\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u9700\u8981\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u91cc\u9762\u8fdb\u884c\u624b\u52a8\u5b89\u88c5\u9a71\u52a8\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5728\u7b2c\u4e00\u6b21\u63d2\u5165OTG\u8bbe\u5907\uff0c\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u8bbe\u5907\u7ba1\u7406\u5668\u4f1a\u5f39\u51fa\u4e00\u4e2a\u672a\u77e5\u8bbe\u5907\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\u9f20\u6807\u53f3\u952e\u70b9\u51fb\u8fd9\u4e2a\u672a\u77e5\u8bbe\u5907\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c \u70b9\u51fb\u6d4f\u89c8\u6211\u8ba1\u7b97\u673a\u4ee5\u67e5\u627e\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\u3002</p> <p></p> <p>\u4e4b\u540e\u5728\u5f39\u51fa\u65b0\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u70b9\u51fb\u6d4f\u89c8\u627e\u5230\u6211\u4eec\u4e4b\u524d\u4e0b\u8f7d\u597d\u7684 usb\u70e7\u5f55\u9a71\u52a8\u6587\u4ef6\u5939\u5185\uff0c\u627e\u5230 <code>UsbDriver/</code> \u8fd9\u4e2a\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\uff0c\u4e4b\u540e\u70b9\u51fb\u786e\u5b9a\u5373\u53ef\u3002</p> <p></p> <p>\u6ce8\u610f\u8fdb\u5165\u5230  <code>UsbDriver/</code>  \u6587\u4ef6\u5939\uff0c\u7136\u540e\u70b9\u51fb\u786e\u5b9a\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u7ee7\u7eed\u70b9\u51fb \u4e0b\u4e00\u9875 \u6309\u94ae\uff0c\u8fd9\u65f6\u7cfb\u7edf\u5c31\u4f1a\u63d0\u793a\u5b89\u88c5\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u3002 </p> <p>\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u6211\u4eec\u70b9\u51fb \u59cb\u7ec8\u5b89\u88c5\u6b64\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6 \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\u3002</p> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f1a\u63d0\u793a\uff0cWindows\u5df2\u6210\u529f\u66f4\u65b0\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002</p> <p></p> <p>\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8bbe\u5907\u7ba1\u7406\u5668 \u91cc\u9762\u7684\u672a\u77e5\u8bbe\u5907 \u53d8\u6210\u4e86\u4e00\u4e2a <code>USB Device(VID_1f3a_efe8)</code>\u7684\u8bbe\u5907\uff0c\u8fd9\u65f6\u5c31\u8868\u660e\u8bbe\u5907\u9a71\u52a8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002</p> <p></p>"},{"location":"DongshanPI-D1s/03-1_FlashSystem/#_4","title":"\u8fd0\u884c\u8f6f\u4ef6\u70e7\u5199","text":"<p>\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684\u5168\u5fd7\u7ebf\u5237\u5de5\u5177 AllwinnertechPhoeniSuit \u89e3\u538b\u7f29\uff0c\u540c\u65f6\u5c06**SPI Nor\u7cfb\u7edf\u955c\u50cf**\u4e0b\u8f7d\u4e0b\u6765\u4e5f\u8fdb\u884c\u89e3\u538b\u7f29\u3002</p> <p>\u89e3\u538b\u540e\uff0c\u5f97\u5230\u4e00\u4e2a tina_d1s-nezha_nor_uart0_nor.img \u955c\u50cf\uff0c\u662f\u7528\u4e8e\u70e7\u5f55\u5230SPI NAND\u955c\u50cf\u5f97\u3002\u53e6\u4e00\u4e2a\u662f**AllwinnertechPhoeniSuit**\u6587\u4ef6\u5939\u3002</p> <p>\u9996\u5148\u6211\u4eec\u8fdb\u5165\u5230 AllwinnertechPhoeniSuit\\AllwinnertechPhoeniSuitRelease20201225 \u76ee\u5f55\u4e0b \u627e\u5230 PhoenixSuit.exe \u53cc\u51fb\u8fd0\u884c\u3002</p> <p>\u6253\u5f00\u8f6f\u4ef6\u540e \u8f6f\u4ef6\u4e3b\u754c\u9762\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p> <p>\u200b   \u63a5\u4e0b\u6765 \u6211\u4eec\u9700\u8981\u5207\u6362\u5230 \u4e00\u952e\u5237\u673a**\u7a97\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u70b9\u51fb\u7ea2\u6846\u6807\u53f71\uff0c\u5728\u5f39\u51fa\u7684\u65b0\u7a97\u53e3\u5185\uff0c\u6211\u4eec\u70b9\u51fb \u7ea2\u68462 **\u6d4f\u89c8 \u627e\u5230\u6211\u4eec\u521a\u624d\u89e3\u538b\u8fc7\u7684 SPI Nor \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf  tina_d1s-nezha_nor_uart0_nor.img \uff0c\u9009\u4e2d\u955c\u50cf\u540e\uff0c\u70b9\u51fb\u7ea2\u68463 \u5168\u76d8\u64e6\u9664\u5347\u7ea7 \uff0c\u6700\u540e\u70b9\u51fb\u7ea2\u68464  \u7acb\u5373\u5347\u7ea7\u3002</p> <p>\u200b   \u70b9\u51fb\u5b8c\u6210\u540e\uff0c\u4e0d\u9700\u8981\u7406\u4f1a \u5f39\u51fa\u7684\u4fe1\u606f\uff0c\u8fd9\u65f6 \u6211\u4eec\u62ff\u8d77\u5df2\u7ecf\u8fde\u63a5\u597d\u7684\u5f00\u53d1\u677f\uff0c\u5148\u6309\u4f4f FEL \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b RESET \u7cfb\u7edf\u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u5e76\u5f00\u59cb\u70e7\u5199\u3002</p> <p></p> <p>\u200b   \u70e7\u5199\u65f6\u4f1a\u63d0\u793a\u70e7\u5199\u8fdb\u5ea6\u6761\uff0c\u70e7\u5199\u5b8c\u6210\u540e \u5f00\u53d1\u677f\u4f1a\u81ea\u5df1\u91cd\u542f\u3002</p> <p></p>"},{"location":"DongshanPI-D1s/03-1_FlashSystem/#_5","title":"\u542f\u52a8\u7cfb\u7edf","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u70e7\u5199\u6210\u529f\u540e \u90fd\u4f1a\u81ea\u52a8\u91cd\u542f \u542f\u52a8\u7cfb\u7edf\uff0c\u6b64\u65f6\u6211\u4eec\u8fdb\u5165\u5230 \u4e32\u53e3\u7ec8\u7aef\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u7684\u542f\u52a8\u4fe1\u606f\uff0c\u7b49\u6240\u6709\u542f\u52a8\u4fe1\u606f\u52a0\u8f7d\u5b8c\u6210\uff0c\u8f93\u5165 root \u7528\u6237\u540d\u5373\u53ef\u767b\u5f55\u70e7\u5199\u597d\u7684\u7cfb\u7edf\u5185\u3002</p>"},{"location":"DongshanPI-D1s/03-1_FlashSystem/#tf","title":"\u70e7\u5199\u56fa\u4ef6\u81f3TF\u5361","text":""},{"location":"DongshanPI-D1s/03-1_FlashSystem/#_6","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ul> <li>\u786c\u4ef6\uff1a DongshanPI-D1s\u4e3b\u677f x1</li> <li>\u786c\u4ef6\uff1aUSB Type-C\u7ebf x2</li> <li>\u786c\u4ef6\uff1aTF\u5361\u8bfb\u5361\u5668  x1</li> <li>\u786c\u4ef6\uff1a8GB\u4ee5\u4e0a\u7684 Micro TF\u5361 x1</li> <li>\u8f6f\u4ef6\uff1aTina\u7cfb\u7edfTF\u5361\u70e7\u5f55\u5de5\u5177: PhoenixCard-V2.8</li> <li>\u8f6f\u4ef6\uff1aSDcard\u683c\u5f0f\u5316\u5de5\u5177\uff1aSDCardFormatter5</li> <li>\u8f6f\u4ef6\uff1aTinaTF\u5361\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\uff1a[tina_d1s-nezha_sd_uart0](https://gitlab.com/dongshanpi/tools/-/raw/main/tina_d1s-nezha_sd_uart0.zip\uff09</li> </ul>"},{"location":"DongshanPI-D1s/03-1_FlashSystem/#_7","title":"\u8fd0\u884c\u70e7\u5199\u8f6f\u4ef6\u70e7\u5199","text":"<p>\u9996\u5148\u9700\u8981\u4e0b\u8f7d  win32diskimage  SDcard\u4e13\u7528\u683c\u5f0f\u5316 \u8fd9\u4e24\u4e2a\u70e7\u5199TF\u5361\u7684\u5de5\u5177\uff0c\u7136\u540e\u83b7\u53d6\u5230TF\u5361\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6**tina_d1s-nezha_sd_uart0.zip**\uff0c\u83b7\u53d6\u5230\u4ee5\u540e\uff0c\u5148\u5b89\u88c5 SDcard\u4e13\u7528\u683c\u5f0f\u5316 SDCardFormatter5  \u8fd9\u4e2a\u5de5\u5177\uff0c\u540c\u65f6\u53ef\u4ee5\u89e3\u538b \u4e00\u4e0bTF\u5361\u7cfb\u7edf\u7684\u955c\u50cf\u6587\u4ef6 tina_d1s-nezha_sd_uart0.zip\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a  tina_d1s-nezha_sd_uart0.img**\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u8981\u70e7\u5199\u7684\u955c\u50cf\u3002  \u540c\u65f6\u89e3\u538b\u7f29 **Tina\u7cfb\u7edfTF\u5361\u70e7\u5f55\u5de5\u5177 PhoenixCard-V2.8\uff0c\u89e3\u538b\u5b8c\u6210\u540e\uff0c\u8fdb\u5165\u5230\u70e7\u5199\u5de5\u5177\u76ee\u5f55\u5185\uff0c\u53cc\u51fb\u8fd0\u884c <code>PhoenixCard.exe</code>\u70e7\u5f55\u5de5\u5177\u3002</p> <p></p> <p>\u6b65\u9aa4\u4e00\uff1a \u5c06TF\u5361\u63d2\u8fdb\u8bfb\u5361\u5668\u5185\uff0c\u540c\u65f6\u5c06\u8bfb\u5361\u5668\u63d2\u5230\u7535\u8111USB\u63a5\u53e3\uff0c\u4f7f\u7528SD CatFormat\u683c\u5f0f\u5316TF\u5361\uff0c\u6ce8\u610f\u5907\u4efd\u5361\u5185\u6570\u636e\u3002\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u70b9\u51fb\u5237\u65b0\u627e\u5230TF\u5361\uff0c\u7136\u540e\u70b9\u51fb Format \u5728\u5f39\u51fa\u7684 \u5bf9\u8bdd\u6846 \u70b9\u51fb **\u662f(Yes)**\u7b49\u5f85\u683c\u5f0f\u5b8c\u6210\u5373\u53ef\u3002</p> <p></p> <p>\u6b65\u9aa4\u4e8c\uff1a\u683c\u5f0f\u5316\u5b8c\u6210\u540e\uff0c\u4f7f\u7528**PhoenixCard.exe**\u5de5\u5177\u6765\u70e7\u5f55\u955c\u50cf\uff0c\u53c2\u8003\u4e0b\u56fe\u6b65\u9aa4\uff0c\u627e\u5230\u81ea\u5df1\u7684TF\u5361\u76d8\u7b26\uff0c\u70b9\u51fb <code>\u5de6\u4e0a\u89d2\u7ea2\u68461</code> \u56fa\u4ef6\uff0c\u9009\u62e9\u5df2\u7ecf\u89e3\u538b\u8fc7\u7684 <code>tina_d1s-nezha_sd_uart0.img</code> \u955c\u50cf\uff0c\u7136\u540e\u70b9\u51fb <code>\u7ea2\u68462 \u542f\u52a8\u5361</code>\uff0c\u6700\u540e\u70b9\u51fb<code>\u7ea2\u68463 \u70e7\u5f55</code> \u7b49\u5f85\u70e7\u5f55\u5b8c\u6210\u5373\u53ef\u3002</p> <p></p> <p>\u5982\u4e0b\u56fe\u4e3a\u70e7\u5f55\u6210\u529f\u793a\u610f\u56fe\u3002</p> <p></p> <p>\u70e7\u5f55\u5b8c\u6210\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f39\u51faTF\u5361\uff0c\u5e76\u5c06\u5176\u63d2\u5230\u5f00\u53d1\u677f\u6b63\u9762 <code>\u9ed1\u8272\u5b57\u4f53\u5e8f\u53f7 11.TF\u5361\u5361\u69fd</code>\u4f4d\u7f6e\u5904\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528 \u675c\u90a6\u7ebf \u8fde\u63a5 <code>PE2 PE3 GND</code>\u4f7f\u7528\u4e32\u53e3\u8fdb\u884c\u767b\u5f55\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 adb shell \u76f4\u63a5\u8fde\u63a5 ADB\u8fdb\u884c\u767b\u5f55\u8bbf\u95ee\u3002</p> <p>\u6ce8\u610f\uff1aD1s\u56e0TF\u5361\u548cCKlink\u5f15\u811a\u5b58\u5728\u590d\u7528\u5173\u7cfb\uff0c\u9700\u5c06\u62e8\u7801\u5f00\u5173 <code>SW1</code> \u62e8\u81f3\u6570\u5b57\u65b9\u5411\uff0c\u624d\u53ef\u4ee5\u652f\u6301TF\u5361\u542f\u52a8</p>"},{"location":"DongshanPI-D1s/03-1_FlashSystem/#_8","title":"\u542f\u52a8\u7cfb\u7edf","text":"<p>\u5982\u4e0b\u542f\u52a8\u4fe1\u606f \u4e3a \u4f7f\u7528\u675c\u90a6\u7ebf \u5c06PE2 PE3 GND\u8fde\u63a5\u81f3 CKlink\u63a5\u53e3\u65c1 RX TX GND \u5f15\u811a\u901a\u5b54\u663e\u793a\u3002 <pre><code>[71]HELLO! BOOT0 is starting!\n[74]BOOT0 commit : 88480af\n[77]set pll start\n[79]periph0 has been enabled\n[81]set pll end\n[83][pmu]: bus read error\n[85]board init ok\n[87]ZQ value = 0x2f\n[89]get_pmu_exist() = -1\n[91]ddr_efuse_type: 0xa\n[94]trefi:7.8ms\n[96][AUTO DEBUG] single rank and full DQ!\n[100]ddr_efuse_type: 0xa\n[102]trefi:7.8ms\n[104][AUTO DEBUG] rank 0 row = 13\n[107][AUTO DEBUG] rank 0 bank = 4\n[110][AUTO DEBUG] rank 0 page size = 2 KB\n[114]DRAM BOOT DRIVE INFO: V0.33\n[117]DRAM CLK = 528 MHz\n[119]DRAM Type = 2 (2:DDR2,3:DDR3)\n[123]DRAMC read ODT  off.\n[125]DRAM ODT off.\n[127]ddr_efuse_type: 0xa\n[130]DRAM SIZE =64 M\n[132]dram_tpr4:0x0\n[133]PLL_DDR_CTRL_REG:0xf8002b00\n[136]DRAM_CLK_REG:0xc0000000\n[139][TIMING DEBUG] MR2= 0x0\n[144]DRAM simple test OK.\n[146]dram size =64\n[148]card no is 0\n[149]sdcard 0 line count 4\n[152][mmc]: mmc driver ver 2021-04-2 16:45\n[161][mmc]: Wrong media type 0x0\n[164][mmc]: ***Try SD card 0***\n[173][mmc]: HSSDR52/SDR25 4 bit\n[176][mmc]: 50000000 Hz\n[178][mmc]: 30448 MB\n[180][mmc]: ***SD/MMC 0 init OK!!!***\n[230]Loading boot-pkg Succeed(index=0).\n[234]Entry_name        = opensbi\n[237]Entry_name        = u-boot\n[240]Entry_name        = dtb\n[243]mmc not para\n\u2592245]Jump to second Boot.\n\nU-Boot 2018.05-g24521d6 (Feb 11 2022 - 08:52:39 +0000) Allwinner Technology\n\n[00.254]DRAM:  64 MiB\n[00.256]Relocation Offset is: 01ee7000\n[00.261]secure enable bit: 0\n[00.263]CPU=1008 MHz,PLL6=600 Mhz,AHB=200 Mhz, APB1=100Mhz  MBus=300Mhz\n[00.270]flash init start\n[00.272]workmode = 0,storage type = 1\n[00.275][mmc]: mmc driver ver uboot2018:2021-11-19 15:38:00\n[00.281][mmc]: get sdc_type fail and use default host:tm1.\n[00.287][mmc]: can't find node \"mmc0\",will add new node\n[00.292][mmc]: fdt err returned &lt;no error&gt;\n[00.296][mmc]: Using default timing para\n[00.299][mmc]: SUNXI SDMMC Controller Version:0x50310\n[00.317][mmc]: card_caps:0x3000000a\n[00.320][mmc]: host_caps:0x3000003f\n[00.324]sunxi flash init ok\n[00.327]line:703 init_clocks\n[00.330]drv_disp_init\nrequest pwm success, pwm7:pwm7:0x2000c00.\n[00.347]drv_disp_init finish\n[00.349]boot_gui_init:start\n[00.352]set disp.dev2_output_type fail. using defval=0\n[00.379]boot_gui_init:finish\npartno erro : can't find partition bootloader\n54 bytes read in 1 ms (52.7 KiB/s)\n[00.561]bmp_name=bootlogo.bmp size 38454\n38454 bytes read in 3 ms (12.2 MiB/s)\n[00.582]Loading Environment from SUNXI_FLASH... OK\n[00.602]out of usb burn from boot: not need burn key\n[00.606][mmc]: memalign dst_align is NULL!\nread first [00.612]LCD open finish\nbackup failed in fun sunxi_flash_mmc_secread line 358\n[00.619][mmc]: memalign dst_align is NULL!\nread first backup failed in fun sunxi_flash_mmc_secread line 358\n[00.628]unknown error happen in item 0 read\n[00.632]get secure storage map err\npartno erro : can't find partition private\nroot_partition is rootfs\nset root to /dev/mmcblk0p5\n[00.646]update part info\n[00.649]update bootcmd\n[00.652]change working_fdt 0x42aa6da0 to 0x42a86da0\ndisable nand error: FDT_ERR_BADPATH\nNo reserved memory region found in source FDT\n[00.682]update dts\nnoncached_alloc(): addr = 0x42efb080\nnoncached_alloc(): addr = 0x42efb0c0\nnoncached_alloc(): addr = 0x42efb100\nnoncached_alloc(): addr = 0x42efb940\ngeth_sys_init:634: get node 'gmac0' error\ngeth_sys_init fail!\n[00.702]Board Net Initialization Failed\n[00.706]No ethernet found.\nHit any key to stop autoboot:  0\n[02.017]no vendor_boot partition is found\nAndroid's image name: d1s-nezha_sd\nDetect comp none\n[02.035]\nStarting kernel ...\n\n[02.038][mmc]: MMC Device 2 not found\n[02.041][mmc]: mmc 2 not find, so not exit\n** 6 printk messages dropped **\n  node   0: [mem 0x0000000040000000-0x0000000043ffffff]\nInitmem setup node 0 [mem 0x0000000040000000-0x0000000043ffffff]\nOn node 0 totalpages: 16384\n  DMA32 zone: 224 pages used for memmap\n  DMA32 zone: 0 pages reserved\n  DMA32 zone: 16384 pages, LIFO batch:3\nelf_hwcap is 0x20112d\npcpu-alloc: s0 r0 d32768 u32768 alloc=1*32768\npcpu-alloc: [0] 0\nBuilt 1 zonelists, mobility grouping on.  Total pages: 16160\nKernel command line: earlyprintk=sunxi-uart,0x02500000 clk_ignore_unused initcall_debug=0 console=ttyS0,115200 loglevel=8 root=/dev/mmcblk0p5 init=/pseudo_init partitions=boot-resource@mmcblk0p1:env@mmcblk0p2:env-redund@mmcblk0p3:boot@mmcblk0p4:rootfs@mmcblk0p5:recovery@mmcblk0p6:rootfs_data@mmcblk0p7:UDISK@mmcblk0p8 cma=0M snum= mac_addr= wifi_mac= bt_mac= specialstr= gpt=1 androidboot.mode=normal androidboot.hardware=sun20iw1p1 boot_type=1 androidboot.boot_type=1 gpt=1 uboot_message=2018.05-g24521d6(02/11/2022-08:52:39) mbr_\nDentry cache hash table entries: 8192 (order: 4, 65536 bytes, linear)\nInode-cache hash table entries: 4096 (order: 3, 32768 bytes, linear)\nSorting __ex_table...\nmem auto-init: stack:off, heap alloc:off, heap free:off\nMemory: 53012K/65536K available (4486K kernel code, 402K rwdata, 1712K rodata, 144K init, 230K bss, 12524K reserved, 0K cma-reserved)\nSLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1\nrcu: Preemptible hierarchical RCU implementation.\n        Tasks RCU enabled.\nrcu: RCU calculated value of scheduler-enlistment delay is 10 jiffies.\nNR_IRQS: 0, nr_irqs: 0, preallocated irqs: 0\nplic: mapped 200 interrupts with 1 handlers for 2 contexts.\nriscv_timer_init_dt: Registering clocksource cpuid [0] hartid [0]\nclocksource: riscv_clocksource: mask: 0xffffffffffffffff max_cycles: 0x588fe9dc0, max_idle_ns: 440795202592 ns\nsched_clock: 64 bits at 24MHz, resolution 41ns, wraps every 4398046511097ns\nriscv_timer_clockevent depends on broadcast, but no broadcast function available\nclocksource: timer: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns\nCalibrating delay loop (skipped), value calculated using timer frequency.. 48.00 BogoMIPS (lpj=240000)\npid_max: default: 32768 minimum: 301\nMount-cache hash table entries: 512 (order: 0, 4096 bytes, linear)\nMountpoint-cache hash table entries: 512 (order: 0, 4096 bytes, linear)\nASID allocator initialised with 65536 entries\nrcu: Hierarchical SRCU implementation.\ndevtmpfs: initialized\nrandom: get_random_u32 called from bucket_table_alloc.isra.27+0xfe/0x120 with crng_init=0\nclocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns\nfutex hash table entries: 256 (order: 0, 6144 bytes, linear)\npinctrl core: initialized pinctrl subsystem\nNET: Registered protocol family 16\nDMA: preallocated 256 KiB pool for atomic allocations\ncpuidle: using governor menu\nrtc_ccu: sunxi ccu init OK\nclock: sunxi ccu init OK\nclock: sunxi ccu init OK\niommu: Default domain type: Translated\nsunxi iommu: irq = 4\nSCSI subsystem initialized\nusbcore: registered new interface driver usbfs\nusbcore: registered new interface driver hub\nusbcore: registered new device driver usb\nvideodev: Linux video capture interface: v2.00\nAdvanced Linux Sound Architecture Driver Initialized.\nBluetooth: Core ver 2.22\nNET: Registered protocol family 31\nBluetooth: HCI device and connection manager initialized\nBluetooth: HCI socket layer initialized\nBluetooth: L2CAP socket layer initialized\npwm module init!\ng2d 5410000.g2d: Adding to iommu group 0\nG2D: rcq version initialized.major:252\nclocksource: Switched to clocksource riscv_clocksource\nsun8iw20-pinctrl 2000000.pinctrl: initialized sunXi PIO driver\nNET: Registered protocol family 2\ntcp_listen_portaddr_hash hash table entries: 256 (order: 0, 4096 bytes, linear)\nTCP established hash table entries: 512 (order: 0, 4096 bytes, linear)\nTCP bind hash table entries: 512 (order: 0, 4096 bytes, linear)\nTCP: Hash tables configured (established 512 bind 512)\nUDP hash table entries: 256 (order: 1, 8192 bytes, linear)\nUDP-Lite hash table entries: 256 (order: 1, 8192 bytes, linear)\nNET: Registered protocol family 1\nsun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pc not found, using dummy regulator\nspi spi0: spi0 supply spi not found, using dummy regulator\nsunxi_spi_resource_get()2151 - [spi0] SPI MASTER MODE\nsunxi_spi_resource_get()2189 - Failed to get sample mode\nsunxi_spi_resource_get()2194 - Failed to get sample delay\nsunxi_spi_resource_get()2198 - sample_mode:-1431633921 sample_delay:-1431633921\nsunxi_spi_clk_init()2240 - [spi0] mclk 100000000\nsunxi_spi_probe()2653 - [spi0]: driver probe succeed, base ffffffd004058000, irq 31\nworkingset: timestamp_bits=62 max_order=14 bucket_order=0\nsquashfs: version 4.0 (2009/01/31) Phillip Lougher\nntfs: driver 2.1.32 [Flags: R/W].\nio scheduler mq-deadline registered\nio scheduler kyber registered\n[DISP]disp_module_init\ndisp 5000000.disp: Adding to iommu group 0\n[DISP] disp_init,line:2386:\nsmooth display screen:0 type:1 mode:4\ndisplay_fb_request,fb_id:0\nFreeing logo buffer memory: 4000K\ndisp_al_manager_apply ouput_type:1\n[DISP] lcd_clk_config,line:732:\ndisp 0, clk: pll(420000000),clk(420000000),dclk(70000000) dsi_rate(70000000)\n     clk real:pll(420000000),clk(420000000),dclk(105000000) dsi_rate(150000000)\nsun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pd not found, using dummy regulator\n[DISP]disp_module_init finish\nsunxi_sid_init()551 - insmod ok\npwm-regulator: supplied by regulator-dummy\nsun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pe not found, using dummy regulator\nuart uart0: get regulator failed\nuart uart0: uart0 supply uart not found, using dummy regulator\nuart0: ttyS0 at MMIO 0x2500000 (irq = 18, base_baud = 1500000) is a SUNXI\nsw_console_setup()1808 - console setup baud 115200 parity n bits 8, flow n\nprintk: console [ttyS0] enabled\nsun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pg not found, using dummy regulator\nuart uart1: get regulator failed\nuart uart1: uart1 supply uart not found, using dummy regulator\nuart1: ttyS1 at MMIO 0x2500400 (irq = 19, base_baud = 1500000) is a SUNXI\nmisc dump reg init\nsunxi-rfkill soc@3000000:rfkill@0: module version: v1.0.9\nsunxi-rfkill soc@3000000:rfkill@0: get gpio chip_en failed\nsunxi-rfkill soc@3000000:rfkill@0: get gpio power_en failed\nsunxi-rfkill soc@3000000:rfkill@0: wlan_busnum (1)\nsunxi-rfkill soc@3000000:rfkill@0: Missing wlan_power.\nsunxi-rfkill soc@3000000:rfkill@0: wlan_regon gpio=137 assert=1\nsunxi-rfkill soc@3000000:rfkill@0: wlan_hostwake gpio=202 assert=1\nsunxi-rfkill soc@3000000:rfkill@0: wakeup source is enabled\nsunxi-rfkill soc@3000000:rfkill@0: Missing bt_power.\nsunxi-rfkill soc@3000000:rfkill@0: bt_rst gpio=133 assert=0\n[ADDR_MGT] addr_mgt_probe: module version: v1.0.10\n[ADDR_MGT] addr_mgt_probe: success.\nsunxi-spinand: AW SPINand MTD Layer Version: 2.0 20201228\nsunxi-spinand-phy: AW SPINand Phy Layer Version: 1.10 20200306\nrandom: fast init done\nrandom: crng init done\nsunxi-spinand-phy: read id failed : -110\nspi-nand: probe of spi0.0 failed with error -110\nehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver\nsunxi-ehci: EHCI SUNXI driver\nget ehci1-controller wakeup-source is fail.\nsunxi ehci1-controller don't init wakeup source\n[sunxi-ehci1]: probe, pdev-&gt;name: 4200000.ehci1-controller, sunxi_ehci: 0xffffffe0006c0870, 0x:ffffffd004075000, irq_no:31\nsunxi-ehci 4200000.ehci1-controller: 4200000.ehci1-controller supply drvvbus not found, using dummy regulator\nsunxi-ehci 4200000.ehci1-controller: 4200000.ehci1-controller supply hci not found, using dummy regulator\nsunxi-ehci 4200000.ehci1-controller: EHCI Host Controller\nsunxi-ehci 4200000.ehci1-controller: new USB bus registered, assigned bus number 1\nsunxi-ehci 4200000.ehci1-controller: irq 49, io mem 0x04200000\nsunxi-ehci 4200000.ehci1-controller: USB 2.0 started, EHCI 1.00\nhub 1-0:1.0: USB hub found\nhub 1-0:1.0: 1 port detected\nohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver\nsunxi-ohci: OHCI SUNXI driver\nget ohci1-controller wakeup-source is fail.\nsunxi ohci1-controller don't init wakeup source\n[sunxi-ohci1]: probe, pdev-&gt;name: 4200400.ohci1-controller, sunxi_ohci: 0xffffffe0006c0c38\nsunxi-ohci 4200400.ohci1-controller: 4200400.ohci1-controller supply drvvbus not found, using dummy regulator\nsunxi-ohci 4200400.ohci1-controller: 4200400.ohci1-controller supply hci not found, using dummy regulator\nsunxi-ohci 4200400.ohci1-controller: OHCI Host Controller\nsunxi-ohci 4200400.ohci1-controller: new USB bus registered, assigned bus number 2\nsunxi-ohci 4200400.ohci1-controller: irq 50, io mem 0x04200400\nhub 2-0:1.0: USB hub found\nhub 2-0:1.0: 1 port detected\nsunxi-rtc 7090000.rtc: registered as rtc0\nsunxi-rtc 7090000.rtc: setting system clock to 1970-01-01T02:07:25 UTC (7645)\nsunxi-rtc 7090000.rtc: sunxi rtc probed\ni2c /dev entries driver\nIR NEC protocol handler initialized\nuvcvideo: Unable to create debugfs directory\nusbcore: registered new interface driver uvcvideo\nUSB Video Class driver (1.1.1)\nsunxi cedar version 1.1\nsunxi-cedar 1c0e000.ve: Adding to iommu group 0\nVE: install start!!!\n\nVE: cedar-ve the get irq is 6\n\nVE: install end!!!\n\nVE: sunxi_cedar_probe\nBluetooth: HCI UART driver ver 2.3\nBluetooth: HCI UART protocol H4 registered\nBluetooth: HCI UART protocol BCSP registered\nBluetooth: XRadio Bluetooth LPM Mode Driver Ver 1.0.10\n[XR_BT_LPM] bluesleep_probe: bt_wake polarity: 1\n[XR_BT_LPM] bluesleep_probe: host_wake polarity: 1\n[XR_BT_LPM] bluesleep_probe: wakeup source is disabled!\n\n[XR_BT_LPM] bluesleep_probe: uart_index(1)\nsunxi-mmc 4020000.sdmmc: SD/MMC/SDIO Host Controller Driver(v4.21 2021-11-18 10:02)\nsunxi-mmc 4020000.sdmmc: ***ctl-spec-caps*** 8\nsunxi-mmc 4020000.sdmmc: No vmmc regulator found\nsunxi-mmc 4020000.sdmmc: No vqmmc regulator found\nsunxi-mmc 4020000.sdmmc: No vdmmc regulator found\nsunxi-mmc 4020000.sdmmc: No vd33sw regulator found\nsunxi-mmc 4020000.sdmmc: No vd18sw regulator found\nsunxi-mmc 4020000.sdmmc: No vq33sw regulator found\nsunxi-mmc 4020000.sdmmc: No vq18sw regulator found\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 0Hz bm PP pm UP vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4020000.sdmmc: no vqmmc,Check if there is regulator\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4020000.sdmmc: detmode:gpio polling\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4021000.sdmmc: SD/MMC/SDIO Host Controller Driver(v4.21 2021-11-18 10:02)\nsunxi-mmc 4021000.sdmmc: ***ctl-spec-caps*** 8\nsunxi-mmc 4021000.sdmmc: No vmmc regulator found\nsunxi-mmc 4021000.sdmmc: No vqmmc regulator found\nsunxi-mmc 4021000.sdmmc: No vdmmc regulator found\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4021000.sdmmc: No vd33sw regulator found\nsunxi-mmc 4021000.sdmmc: No vd18sw regulator found\nsunxi-mmc 4021000.sdmmc: No vq33sw regulator found\nsunxi-mmc 4021000.sdmmc: No vq18sw regulator found\nsunxi-mmc 4021000.sdmmc: Cann't get pin bias hs pinstate,check if needed\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm UP vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4021000.sdmmc: no vqmmc,Check if there is regulator\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\nsunxi-mmc 4021000.sdmmc: detmode:manually by software\nsunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\nashmem: initialized\nsunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\nsunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\nexFAT: Version 1.3.0\n[AUDIOCODEC][sunxi_codec_parse_params][2412]:digital_vol:0, lineout_vol:26, mic1gain:31, mic2gain:31 pa_msleep:120, pa_level:1, pa_pwr_level:1\n\nmmc0: host does not support reading read-only switch, assuming write-enable\n[AUDIOCODEC][sunxi_codec_parse_params][2448]:adcdrc_cfg:0, adchpf_cfg:1, dacdrc_cfg:0, dachpf:0\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing SD-HS(SDR25) dt B\n[AUDIOCODEC][sunxi_internal_codec_probe][2609]:codec probe finished\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 50000000Hz bm PP pm ON vdd 21 width 1 timing SD-HS(SDR25) dt B\nsunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[SNDCODEC][sunxi_card_init][583]:card init finished\nsunxi-codec-machine 2030340.sound: 2030000.codec &lt;-&gt; 203034c.dummy_cpudai mapping ok\nsunxi-mmc 4020000.sdmmc: sdc set ios:clk 50000000Hz bm PP pm ON vdd 21 width 4 timing SD-HS(SDR25) dt B\nmmc0: new high speed SDHC card at address 5048\nsunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\nsunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\ninput: audiocodec sunxi Audio Jack as /devices/platform/soc@3000000/2030340.sound/sound/card0/input0\nsunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\nsunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\nsunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm OFF vdd 0 width 1 timing LEGACY(SDR12) dt B\nmmcblk0: mmc0:5048 SD32G 29.7 GiB\n[SNDCODEC][sunxi_card_dev_probe][836]:register card finished\nNET: Registered protocol family 10\nSegment Routing with IPv6\nNET: Registered protocol family 17\n mmcblk0: p1 p2 p3 p4 p5 p6 p7 p8\nsunxi-i2c sunxi-i2c2: sunxi-i2c2 supply twi not found, using dummy regulator\nsunxi-i2c sunxi-i2c2: probe success\nsun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pb not found, using dummy regulator\nget ehci0-controller wakeup-source is fail.\nsunxi ehci0-controller don't init wakeup source\n[sunxi-ehci0]: probe, pdev-&gt;name: 4101000.ehci0-controller, sunxi_ehci: 0xffffffe0006c00e0, 0x:ffffffd0040fd000, irq_no:2e\n[sunxi-ehci0]: Not init ehci0\nget ohci0-controller wakeup-source is fail.\nsunxi ohci0-controller don't init wakeup source\n[sunxi-ohci0]: probe, pdev-&gt;name: 4101400.ohci0-controller, sunxi_ohci: 0xffffffe0006c04a8\n[sunxi-ohci0]: Not init ohci0\nclk: Not disabling unused clocks\nALSA device list:\n  #0: audiocodec\nplatform regulatory.0: Direct firmware load for regulatory.db failed with error -2\ncfg80211: failed to load regulatory.db\nalloc_fd: slot 0 not NULL!\nVFS: Mounted root (squashfs filesystem) readonly on device 179:5.\ndevtmpfs: mounted\nFreeing unused kernel memory: 144K\nThis architecture does not have kernel memory protection.\nRun /pseudo_init as init process\nmount: mounting none on /dev failed: Device or resource busy\nmount: mounting /dev/by-name/rootfs_data on /overlay failed: No such device\nMount Failed: formating /dev/by-name/rootfs_data to ext4 ...\n/pseudo_init: line 395: mkfs.ext4: not found\ncan't run '/etc/preinit': No such file or directory\nmount: mounting proc on /proc failed: Device or resource busy\nmount: mounting tmpfs on /run failed: No such file or directory\n[SNDCODEC][sunxi_check_hs_detect_status][191]:plugin --&gt; switch:1\nhostname: can't open '/etc/hostname': No such file or directory\n------run rc.preboot file-----\n/etc/init.d/rcS: line 136: mkfs.ext4: not found\n------run rc.modules file-----\nusbcore: registered new interface driver usb-storage\nsunxi_gpadc_init,2151, success\nsunxi_gpadc_setup: get channel scan data failed\ninput: sunxi-gpadc0 as /devices/virtual/input/input1\ninsmod: can't insert '/lib/modules/5.4.61/xr829.ko': No such file or directory\nSuccessfully initialized wpa_supplicant\nCould not read interface wlan0 flags: No such device\nnl80211: Driver does not support authentication/association or connect commands\nnl80211: deinit ifname=wlan0 disabled_11b_rates=0\nCould not read interface wlan0 flags: No such device\nwlan0: Failed to initialize driver interface\n------run rc.final file-----\n\ninsmod_host_driver\n\n[ehci0-controller]: sunxi_usb_enable_ehci\n[sunxi-ehci0]: probe, pdev-&gt;name: 4101000.ehci0-controller, sunxi_ehci: 0xffffffe0006c00e0, 0x:ffffffd0040fd000, irq_no:2e\nsunxi-ehci 4101000.ehci0-controller: 4101000.ehci0-controller supply hci not found, using dummy regulator\nsunxi-ehci 4101000.ehci0-controller: EHCI Host Controller\nsunxi-ehci 4101000.ehci0-controller: new USB bus registered, assigned bus number 3\nsunxi-ehci 4101000.ehci0-controller: irq 46, io mem 0x04101000\nsunxi-ehci 4101000.ehci0-controller: USB 2.0 started, EHCI 1.00\ndevice_chose finished 139!\nhub 3-0:1.0: USB hub found\nhub 3-0:1.0: 1 port detected\n[ohci0-controller]: sunxi_usb_enable_ohci\n[sunxi-ohci0]: probe, pdev-&gt;name: 4101400.ohci0-controller, sunxi_ohci: 0xffffffe0006c04a8\nsunxi-ohci 4101400.ohci0-controller: 4101400.ohci0-controller supply hci not found, using dummy regulator\nsunxi-ohci 4101400.ohci0-controller: OHCI Host Controller\nsunxi-ohci 4101400.ohci0-controller: new USB bus registered, assigned bus number 4\nsunxi-ohci 4101400.ohci0-controller: irq 47, io mem 0x04101400\nfile system registered\nhub 4-0:1.0: USB hub found\nhub 4-0:1.0: 1 port detected\nhost_chose finished!\nconfigfs-gadget 4100000.udc-controller: failed to start g1: -19\nsh: write error: No such device\n\nrmmod_host_driver\n\n[ehci0-controller]: sunxi_usb_disable_ehci\n[sunxi-ehci0]: remove, pdev-&gt;name: 4101000.ehci0-controller, sunxi_ehci: 0xffffffe0006c00e0\nnice: can't execute '/usr/bin/story_ota_bin': No such file or directory\nread descriptors\nread strings\nsunxi-ehci 4101000.ehci0-controller: remove, state 4\nusb usb3: USB disconnect, device number 1\nsunxi-ehci 4101000.ehci0-controller: USB bus 3 deregistered\n[ohci0-controller]: sunxi_usb_disable_ohci\n[sunxi-ohci0]: remove, pdev-&gt;name: 4101400.ohci0-controller, sunxi_ohci: 0xffffffe0006c04a8\nsunxi-ohci 4101400.ohci0-controller: remove, state 4\nusb usb4: USB disconnect, device number 1\nsunxi-ohci 4101400.ohci0-controller: USB bus 4 deregistered\n\ninsmod_device_driver\n\nsunxi_usb_udc 4100000.udc-controller: 4100000.udc-controller supply udc not found, using dummy regulator\ndevice_chose finished!\nnumid=30,iface=MIXER,name='Headphone Switch'\n  ; type=BOOLEAN,access=rw------,values=1\n  : values=on\n\n\nBusyBox v1.27.2 () built-in shell (ash)\n\n------run profile file-----\n _____  _              __     _\n|_   _||_| ___  _ _   |  |   |_| ___  _ _  _ _\n  | |   _ |   ||   |  |  |__ | ||   || | ||_'_|\n  | |  | || | || _ |  |_____||_||_|_||___||_,_|\n  |_|  |_||_|_||_|_|  Tina is Based on OpenWrt!\n --------------------------sunxi_set_cur_vol_work()397 WARN: get power supply failed\n--------------------\n Tina Linux (Neptune, 61CC0487)\n ----------------------------------------------\nroot@TinaLinux:/# android_work: sent uevent USB_STATE=CONNECTED\nsunxi_set_cur_vol_work()397 WARN: get power supply failed\nsunxi_vbus_det_work()3356 WARN: get power supply failed\nandroid_work: sent uevent USB_STATE=DISCONNECTED\nandroid_work: sent uevent USB_STATE=CONNECTED\nconfigfs-gadget gadget: high-speed config #1: c\nandroid_work: sent uevent USB_STATE=CONFIGURED\n</code></pre></p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002 \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002 \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002</p>"},{"location":"DongshanPI-D1s/03-2_SomeQustion/","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"DongshanPI-D1s/03-QuickStart/","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":"<p>\u6ce8\u610f\uff1a\u5f00\u53d1\u677f\u677f\u8f7d\u4e86 SPI-NorFLASH \u53d1\u8d27\u524d\u90fd\u4f1a\u628aTina-Linux \u7cfb\u7edf\u63d0\u524d\u70e7\u5f55\u81f3 SPINor\u5185\uff0c\u5bf9\u4e8e\u4f7f\u7528TF\u5361\u542f\u52a8\u7684\u540c\u5b66 \u8bf7\u5355\u72ec\u770b\u540e\u7eed\u7ae0\u8282 <code>\u66f4\u65b0\u7cfb\u7edf</code> \u5355\u72ec\u70e7\u5f55\u7cfb\u7edf\u81f3TF\u5361\u5e76\u542f\u52a8\u3002</p> <p>\u56e0\u5f00\u53d1\u677f\u677f\u8f7d\u4e86CKLINK\uff0c\u4e14TF\u5361\u5f15\u811a\u548cCKLINK\u51b2\u7a81\u5bfc\u81f4\u65e0\u6cd5\u540c\u65f6\u4f7f\u7528\uff0c\u9700\u8981\u901a\u8fc7\u62e8\u7801\u5f00\u5173 <code>SW1</code> \u6765\u5207\u6362\u542f\u52a8\u529f\u80fd\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u88f8\u673a/RTOS\u8bfe\u7a0b\u4f1a\u7528\u5230CKLINK\u8fdb\u884c\u8c03\u8bd5\u548c\u8f93\u51fa\u529f\u80fd\uff0c\u786c\u4ef6\u9ed8\u8ba4\u628a PF2 PF4\u4f5c\u4e3a\u4e86UART0\uff0c\u4f46\u662f\u5f53\u60a8\u4f7f\u7528DongshanPI-D1s\u8fd0\u884cLinux\u7cfb\u7edf\u65f6\uff0cLinux\u7cfb\u7edf\u9ed8\u8ba4\u7684UART0\u4e3aPE2 PE3 \u8fd9\u65f6\u9700\u8981\u53c2\u8003\u4e0b\u56fe\u901a\u8fc72.54mm\u89c4\u683c\u7684\u675c\u90a6\u7ebf\u8fde\u63a5\u53f3\u4fa7J2 \u6392\u9488\u7684 PE2 PE3 GND \u8fde\u63a5\u81f3 \u5f00\u53d1\u677f <code>\u9ed1\u8272\u5e8f\u53f7 5.\u8c03\u8bd5\u4e0eUART\u529f\u80fd</code>\u65c1\u8fb9\u7684 RX TX GND \u4e09\u4e2a\u5706\u5b54\u5185\uff0c\u9700\u8981\u76f4\u63a5\u7528\u516c\u5934\u675c\u90a6\u7ebf\u7a7f\u8fc7\u5706\u5b54\u3002</p> <p></p> <p>\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u675c\u90a6\u7ebf\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f18\u5148\u4f7f\u7528\u4e0b\u9762\u7684 \u4f7f\u7528ADB\u767b\u5f55\u7cfb\u7edf \u65b9\u5f0f\u8fdb\u884c\u767b\u5f55\u7cfb\u7edf</p>"},{"location":"DongshanPI-D1s/03-QuickStart/#windows-adb","title":"windows\u4e0b\u4f7f\u7528 ADB\u767b\u5f55\u7cfb\u7edf","text":""},{"location":"DongshanPI-D1s/03-QuickStart/#otg","title":"\u8fde\u63a5OTG\u7ebf","text":"<p>\u5c06\u5f00\u53d1\u677f\u914d\u5957\u7684\u4e24\u6839typec\u7ebf\uff0c\u4e00\u6839 \u76f4\u63a5\u8fde\u63a5\u81f3 \u5f00\u53d1\u677f <code>\u9ed1\u8272\u5b57\u4f53\u5e8f\u53f7 3.OTG\u70e7\u5f55\u63a5\u53e3</code> \u53e6\u4e00\u5934\u8fde\u63a5\u81f3\u7535\u8111\u7684USB\u63a5\u53e3\uff0c\u5f00\u53d1\u677f\u9ed8\u8ba4\u6709\u7cfb\u7edf\uff0c\u63a5\u901aotg\u7535\u6e90\u7ebf\u5c31\u4f1a\u901a\u7535\u5e76\u76f4\u63a5\u542f\u52a8\u3002</p>"},{"location":"DongshanPI-D1s/03-QuickStart/#windowsadb","title":"\u5b89\u88c5windows\u677fADB","text":"<p>\u70b9\u51fb\u94fe\u63a5\u4e0b\u8f7dWindows\u7248ADB\u5de5\u5177 adb-tools \u4e0b\u8f7d\u5b8c\u6210\u540e\u89e3\u538b\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u76ee\u5f55\uff0c</p> <p></p> <p>\u7136\u540e \u6211\u4eec\u5355\u72ec \u62f7\u8d1d \u4e0a\u4e00\u5c42\u7684 platform-tools \u6587\u4ef6\u5939\u5230\u4efb\u610f \u76ee\u5f55\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\uff0c\u8bb0\u4f4f\u8fd9\u4e2a \u76ee\u5f55\u4f4d\u7f6e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u628a\u8fd9\u4e2a \u8def\u5f84\u6dfb\u52a0\u81f3 Windows\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u91cc\u3002</p> <p></p> <p>\u6211\u8fd9\u91cc\u662f\u628a\u5b83\u5355\u72ec\u62f7\u8d1d\u5230\u4e86 D\u76d8\uff0c\u6211\u7684\u76ee\u5f55\u662f <code>D:\\platform-tools</code> \u63a5\u4e0b\u6765 \u6211\u9700\u8981\u628a\u5b83\u5355\u72ec\u6dfb\u52a0\u5230Windows\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u91cc\u9762\u624d\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u4f7f\u7528adb\u547d\u4ee4\u3002</p> <p></p> <p>\u6dfb\u52a0\u5230 Windows\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u91cc\u9762 </p>"},{"location":"DongshanPI-D1s/03-QuickStart/#cmd","title":"\u6253\u5f00cmd\u8fde\u63a5\u5f00\u53d1\u677f","text":"<p>\u6253\u5f00CMD Windows \u547d\u4ee4\u63d0\u793a\u7b26\u65b9\u5f0f\u6709\u4e24\u79cd \u65b9\u5f0f1\uff1a\u76f4\u63a5\u5728Windows10/11\u641c\u7d22\u5bf9\u8bdd\u6846\u4e2d\u8f93\u5165  cmd \u5728\u5f39\u51fa\u7684\u8f6f\u4ef6\u4e2d\u70b9\u51fb  <code>\u547d\u4ee4\u63d0\u793a\u7b26</code> \u65b9\u5f0f2\uff1a\u540c\u65f6\u6309\u4e0b wind + r \u952e\uff0c\u8f93\u5165 cmd \u547d\u4ee4\uff0c\u6309\u4e0b\u786e\u8ba4 \u5c31\u53ef\u4ee5\u81ea\u52a8\u6253\u5f00 <code>\u547d\u4ee4\u63d0\u793a\u7b26</code></p> <p></p> <p>\u6253\u5f00\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u8f93\u51fa adb\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\u6211\u4eec\u7684adb\u5df2\u7ecf\u914d\u7f6e\u6210\u529f</p> <p></p> <p>\u8fde\u63a5\u597d\u5f00\u53d1\u677f\u7684 OTG \u5e76\u5c06\u5176\u8fde\u63a5\u81f3\u7535\u8111\u4e0a\uff0c\u7136\u540e \u8f93\u5165 adb shell\u5c31\u53ef\u4ee5\u81ea\u52a8\u767b\u5f55\u7cfb\u7edf</p> <p><pre><code>C:\\System&gt; adb shell\n* daemon not running. starting it now on port 5037 *\n* daemon started successfully *\n\n _____  _              __     _\n|_   _||_| ___  _ _   |  |   |_| ___  _ _  _ _\n  | |   _ |   ||   |  |  |__ | ||   || | ||_'_|\n  | |  | || | || _ |  |_____||_||_|_||___||_,_|\n  |_|  |_||_|_||_|_|  Tina is Based on OpenWrt!\n ----------------------------------------------\n Tina Linux\n ----------------------------------------------\nroot@TinaLinux:/#\n</code></pre> ADB \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6587\u4ef6\u4f20\u8f93\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a <pre><code>C:\\System&gt; adb push badapple.mp4 /mnt/UDISK   # \u5c06 badapple.mp4 \u4e0a\u4f20\u5230\u5f00\u53d1\u677f /mnt/UDISK \u76ee\u5f55\u5185\n</code></pre> <pre><code>C:\\System&gt; adb pull /mnt/UDISK/badapple.mp4   # \u5c06 /mnt/UDISK/badapple.mp4 \u4e0b\u62c9\u5230\u5f53\u524d\u76ee\u5f55\u5185\n</code></pre></p> <p>\u6ce8\u610f\uff1a \u6b64\u65b9\u6cd5\u76ee\u524d\u53ea\u9002\u7528\u4e8e \u4f7f\u7528\u5168\u5fd7Tina-SDK \u6784\u5efa\u51fa\u6765\u7684\u7cfb\u7edf\u3002</p>"},{"location":"DongshanPI-D1s/03-QuickStart/#_2","title":"\u4f7f\u7528\u4e32\u53e3\u767b\u5f55\u7cfb\u7edf","text":""},{"location":"DongshanPI-D1s/03-QuickStart/#1","title":"1. \u8fde\u63a5\u4e32\u53e3\u7ebf","text":"<p>\u5c06\u914d\u5957\u7684TypeC\u7ebf\u4e00\u6bb5\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\u7684\u4e32\u53e3/\u4f9b\u7535\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\u677f\u8f7d\u7684\u7ea2\u8272\u7535\u6e90\u706f\u4f1a\u4eae\u8d77\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5b89\u88c5\u4e32\u53e3\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u52a8\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u6765\u81ea\u52a8\u5b89\u88c5\u3002 * \u5bf9\u4e8eWindows\u7cfb\u7edf \u6b64\u65f6Windows\u8bbe\u5907\u7ba1\u7406\u5668 \u5728 \u7aef\u53e3(COM\u548cLPT) \u5904\u4f1a\u591a\u51fa\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u4e00\u822c\u662f\u4ee5 <code>USB-Enhanced-SERIAL CH9102</code>\u5f00\u5934\uff0c\u60a8\u9700\u8981\u7559\u610f\u4e00\u4e0b\u540e\u9762\u7684\u5177\u4f53COM\u7f16\u53f7\uff0c\u7528\u4e8e\u540e\u7eed\u8fde\u63a5\u4f7f\u7528\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\uff0cCOM\u53f7\u662f96\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8fde\u63a5\u6240\u4f7f\u7528\u7684\u4e32\u53e3\u53f7\u5c31\u662f96\u3002</p> <ul> <li>\u5bf9\u4e8eLinux\u7cfb\u7edf \u53ef\u4ee5\u67e5\u770b\u662f\u5426\u591a\u51fa\u4e00\u4e2a/dev/tty&lt;&gt; \u8bbe\u5907,\u4e00\u822c\u60c5\u51b5\u8bbe\u5907\u8282\u70b9\u4e3a /dev/ttyACM0  \u3002</li> </ul> <p></p>"},{"location":"DongshanPI-D1s/03-QuickStart/#2","title":"2. \u6253\u5f00\u4e32\u53e3\u63a7\u5236\u53f0","text":""},{"location":"DongshanPI-D1s/03-QuickStart/#_3","title":"\u83b7\u53d6\u4e32\u53e3\u5de5\u5177","text":"<p>\u4f7f\u7528Putty\u6216\u8005MobaXterm\u7b49\u4e32\u53e3\u5de5\u5177\u6765\u5f00\u53d1\u677f\u8bbe\u5907\u3002</p> <ul> <li>\u5176\u4e2dputty\u5de5\u5177\u53ef\u4ee5\u8bbf\u95ee\u9875\u9762  https://www.chiark.greenend.org.uk/~sgtatham/putty/  \u6765\u83b7\u53d6\u3002</li> <li>MobaXterm\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u9875\u9762 https://mobaxterm.mobatek.net/ \u83b7\u53d6 (\u63a8\u8350\u4f7f\u7528)\u3002</li> </ul>"},{"location":"DongshanPI-D1s/03-QuickStart/#putty","title":"\u4f7f\u7528putty\u767b\u5f55\u4e32\u53e3","text":""},{"location":"DongshanPI-D1s/03-QuickStart/#mobaxterm","title":"\u4f7f\u7528Mobaxterm\u767b\u5f55\u4e32\u53e3","text":"<p>\u6253\u5f00MobaXterm\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u201cSession\u201d\uff0c\u5728\u5f39\u51fa\u7684\u754c\u9762\u9009\u4e2d\u201cSerial\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u9009\u62e9\u7aef\u53e3\u53f7\uff08\u524d\u9762\u8bbe\u5907\u7ba1\u7406\u5668\u663e\u793a\u7684\u7aef\u53e3\u53f7COM21\uff09\u3001\u6ce2\u7279\u7387\uff08Speed 115200\uff09\u3001\u6d41\u63a7\uff08Flow Control: none\uff09,\u6700\u540e\u70b9\u51fb\u201cOK\u201d\u5373\u53ef\u3002\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6ce8\u610f\uff1a\u6d41\u63a7\uff08Flow Control\uff09\u4e00\u5b9a\u8981\u9009\u62e9none\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u5728MobaXterm\u4e2d\u5411\u4e32\u53e3\u8f93\u5165\u6570\u636e</p> <p></p>"},{"location":"DongshanPI-D1s/03-QuickStart/#3-shell","title":"3. \u8fdb\u5165\u7cfb\u7edfshell","text":"<p>\u4f7f\u7528\u4e32\u53e3\u5de5\u5177\u6210\u529f\u6253\u5f00\u4e32\u53e3\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u4e0b Enter \u952e \u8fdb\u5165shell\uff0c\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u6309\u4e0b\u677f\u5b50\u4e0a\u7684 <code>Reset</code>\u590d\u4f4d\u952e\uff0c\u6765\u67e5\u770b\u5b8c\u6574\u7684\u7cfb\u7edf\u4fe1\u606f\u3002</p> <p><pre><code>[34]HELLO! BOOT0 is starting!\n[37]BOOT0 commit : 88480af\n[40]set pll start\n[42]periph0 has been enabled\n[44]set pll end\n[46][pmu]: bus read error\n[48]board init ok\n[50]ZQ value = 0x2f\n[52]get_pmu_exist() = -1\n[54]DRAM BOOT DRIVE INFO: V0.33\n[57]DRAM CLK = 528 MHz\n[59]DRAM Type = 2 (2:DDR2,3:DDR3)\n[62]DRAMC read ODT  off.\n[65]DRAM ODT off.\n[67]ddr_efuse_type: 0xa\n[69]DRAM SIZE =64 M\n[71]dram_tpr4:0x0\n[73]PLL_DDR_CTRL_REG:0xf8002b00\n[76]DRAM_CLK_REG:0xc0000000\n[78][TIMING DEBUG] MR2= 0x0\n[83]DRAM simple test OK.\n[85]dram size =64\n[87]spinor id is: ef 40 18, read cmd: 6b\n[90]Succeed in reading toc file head.\n[94]The size of toc is 100000.\n[139]Entry_name        = opensbi\n[142]Entry_name        = u-boot\n[146]Entry_name        = dtb\n\u2592149]Jump to second Boot.\n\nU-Boot 2018.05-g24521d6 (Feb 11 2022 - 08:52:39 +0000) Allwinner Technology\n\n[00.158]DRAM:  64 MiB\n[00.160]Relocation Offset is: 01ee7000\n[00.165]secure enable bit: 0\n[00.167]CPU=1008 MHz,PLL6=600 Mhz,AHB=200 Mhz, APB1=100Mhz  MBus=300Mhz\n[00.174]flash init start\n[00.176]workmode = 0,storage type = 3\nindividual lock is enable\n[00.185]spi sunxi_slave-&gt;max_hz:100000000\nSF: Detected w25q128 with page size 256 Bytes, erase size 64 KiB, total 16 MiB\n[00.195]sunxi flash init ok\n[00.198]line:703 init_clocks\n[00.201]drv_disp_init\nrequest pwm success, pwm7:pwm7:0x2000c00.\n[00.218]drv_disp_init finish\n[00.220]boot_gui_init:start\n[00.223]set disp.dev2_output_type fail. using defval=0\n[00.250]boot_gui_init:finish\npartno erro : can't find partition bootloader\n54 bytes read in 0 ms\n[00.259]bmp_name=bootlogo.bmp size 38454\n38454 bytes read in 1 ms (36.7 MiB/s)\n[00.434]Loading Environment from SUNXI_FLASH... OK\n[00.448]out of usb burn from boot: not need burn key\n[00.453]get secure storage map err\npartno erro : can't find partition private\nroot_partition is rootfs\nset root to /dev/mtdblock5\n[00.464]update part info\n[00.467]update bootcmd\n[00.469]change working_fdt 0x42aa6da0 to 0x42a86da0\nNo reserved memory region found in source FDT\nFDT ERROR:fdt_get_all_pin:get property handle pinctrl-0 error:FDT_ERR_INTERNAL\nsunxi_pwm_pin_set_state, fdt_set_all_pin, ret=-1\n[00.494]LCD open finish\n[00.510]update dts\nnoncached_alloc(): addr = 0x42ebb200\nnoncached_alloc(): addr = 0x42ebb240\nnoncached_alloc(): addr = 0x42ebb280\nnoncached_alloc(): addr = 0x42ebbac0\ngeth_sys_init:634: get node 'gmac0' error\ngeth_sys_init fail!\n[00.530]Board Net Initialization Failed\n[00.533]No ethernet found.\nHit any key to stop autoboot:  0\n[01.686]no vendor_boot partition is found\nAndroid's image name: d1s-nezha_nor\nDetect comp none\n[01.704]\nStarting kernel ...\n\n** 9 printk messages dropped **\n[    0.000000] On node 0 totalpages: 16384\n[    0.000000]   DMA32 zone: 224 pages used for memmap\n[    0.000000]   DMA32 zone: 0 pages reserved\n[    0.000000]   DMA32 zone: 16384 pages, LIFO batch:3\n[    0.000000] elf_hwcap is 0x20112d\n[    0.000000] pcpu-alloc: s0 r0 d32768 u32768 alloc=1*32768\n[    0.000000] pcpu-alloc: [0] 0\n[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 16160\n[    0.000000] Kernel command line: earlyprintk=sunxi-uart,0x02500000 clk_ignore_unused initcall_debug=0 console=ttyS0,115200 loglevel=8 root=/dev/mtdblock5 rootfstype=squashfs init=/sbin/init partitions=boot-resource@mtdblock1:env@mtdblock2:env-redund@mtdblock3:boot@mtdblock4:rootfs@mtdblock5:UDISK@mtdblock6 cma=8M snum= mac_addr= wifi_mac= bt_mac= specialstr= gpt=1 androidboot.hardware=sun20iw1p1 boot_type=3 androidboot.boot_type=3 gpt=1 uboot_message=2018.05-g24521d6(02/11/2022-08:52:39) mbr_offset=1556480 disp_reserve=4096000,0x000000004\n[    0.000000] Dentry cache hash table entries: 8192 (order: 4, 65536 bytes, linear)\n[    0.000000] Inode-cache hash table entries: 4096 (order: 3, 32768 bytes, linear)\n[    0.000000] Sorting __ex_table...\n[    0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off\n[    0.000000] Memory: 44932K/65536K available (4353K kernel code, 404K rwdata, 1736K rodata, 144K init, 229K bss, 12412K reserved, 8192K cma-reserved)\n[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1\n[    0.000000] rcu: Preemptible hierarchical RCU implementation.\n[    0.000000]  Tasks RCU enabled.\n[    0.000000] rcu: RCU calculated value of scheduler-enlistment delay is 10 jiffies.\n[    0.000000] NR_IRQS: 0, nr_irqs: 0, preallocated irqs: 0\n[    0.000000] plic: mapped 200 interrupts with 1 handlers for 2 contexts.\n[    0.000000] riscv_timer_init_dt: Registering clocksource cpuid [0] hartid [0]\n[    0.000000] clocksource: riscv_clocksource: mask: 0xffffffffffffffff max_cycles: 0x588fe9dc0, max_idle_ns: 440795202592 ns\n[    0.000006] sched_clock: 64 bits at 24MHz, resolution 41ns, wraps every 4398046511097ns\n[    0.000026] riscv_timer_clockevent depends on broadcast, but no broadcast function available\n[    0.000375] clocksource: timer: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns\n[    0.001012] Calibrating delay loop (skipped), value calculated using timer frequency.. 48.00 BogoMIPS (lpj=240000)\n[    0.001032] pid_max: default: 32768 minimum: 301\n[    0.001214] Mount-cache hash table entries: 512 (order: 0, 4096 bytes, linear)\n[    0.001232] Mountpoint-cache hash table entries: 512 (order: 0, 4096 bytes, linear)\n[    0.003389] ASID allocator initialised with 65536 entries\n[    0.003591] rcu: Hierarchical SRCU implementation.\n[    0.004352] devtmpfs: initialized\n[    0.020017] random: get_random_u32 called from bucket_table_alloc.isra.27+0xfe/0x120 with crng_init=0\n[    0.021117] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns\n[    0.021148] futex hash table entries: 256 (order: 0, 6144 bytes, linear)\n[    0.021756] pinctrl core: initialized pinctrl subsystem\n[    0.023320] NET: Registered protocol family 16\n[    0.025492] DMA: preallocated 256 KiB pool for atomic allocations\n[    0.026044] cpuidle: using governor menu\n[    0.074053] rtc_ccu: sunxi ccu init OK\n[    0.082956] clock: sunxi ccu init OK\n[    0.084024] clock: sunxi ccu init OK\n[    0.126116] iommu: Default domain type: Translated\n[    0.126314] sunxi iommu: irq = 4\n[    0.127641] SCSI subsystem initialized\n[    0.127857] usbcore: registered new interface driver usbfs\n[    0.127972] usbcore: registered new interface driver hub\n[    0.128097] usbcore: registered new device driver usb\n[    0.128239] videodev: Linux video capture interface: v2.00\n[    0.129274] Advanced Linux Sound Architecture Driver Initialized.\n[    0.130018] Bluetooth: Core ver 2.22\n[    0.130111] NET: Registered protocol family 31\n[    0.130122] Bluetooth: HCI device and connection manager initialized\n[    0.130146] Bluetooth: HCI socket layer initialized\n[    0.130164] Bluetooth: \u2592A\u2592socket layer initialized\n[    0.130206] Bluetooth: SCO socket layer initialized\n[    0.130489] pwm module init!\n[    0.132410] g2d 5410000.g2d: Adding to iommu group 0\n[    0.132978] G2D: rcq version initialized.major:252\n[    0.133921] clocksource: Switched to clocksource riscv_clocksource\n[    0.149198] sun8iw20-pinctrl 2000000.pinctrl: initialized sunXi PIO driver\n[    0.152820] NET: Registered protocol family 2\n[    0.153764] tcp_listen_portaddr_hash hash table entries: 256 (order: 0, 4096 bytes, linear)\n[    0.153818] TCP established hash table entries: 512 (order: 0, 4096 bytes, linear)\n[    0.153838] TCP bind hash table entries: 512 (order: 0, 4096 bytes, linear)\n[    0.153853] TCP: Hash tables configured (established 512 bind 512)\n[    0.154134] UDP hash table entries: 256 (order: 1, 8192 bytes, linear)\n[    0.154180] UDP-Lite hash table entries: 256 (order: 1, 8192 bytes, linear)\n[    0.154478] NET: Registered protocol family 1\n[    0.155843] sun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pc not found, using dummy regulator\n[    0.156478] spi spi0: spi0 supply spi not found, using dummy regulator\n[    0.156806] sunxi_spi_resource_get()2151 - [spi0] SPI MASTER MODE\n[    0.156874] sunxi_spi_resource_get()2189 - Failed to get sample mode\n[    0.156884] sunxi_spi_resource_get()2194 - Failed to get sample delay\n[    0.156893] sunxi_spi_resource_get()2198 - sample_mode:-1431633921 sample_delay:-1431633921\n[    0.157022] sunxi_spi_clk_init()2240 - [spi0] mclk 80000000\n[    0.157876] sunxi_spi_probe()2653 - [spi0]: driver probe succeed, base ffffffd004058000, irq 31\n[    0.160241] workingset: timestamp_bits=62 max_order=14 bucket_order=0\n[    0.167662] squashfs: version 4.0 (2009/01/31) Phillip Lougher\n[    0.167917] ntfs: driver 2.1.32 [Flags: R/W].\n[    0.168281] jffs2: version 2.2. (NAND) (SUMMARY)  \u00a9 2001-2006 Red Hat, Inc.\n[    0.189248] io scheduler mq-deadline registered\n[    0.189265] io scheduler kyber registered\n[    0.190529] [DISP]disp_module_init\n[    0.191182] disp 5000000.disp: Adding to iommu group 0\n[    0.191838] [DISP] disp_init,line:2386:\n[    0.191844] smooth display screen:0 type:1 mode:4\n[    0.234898] display_fb_request,fb_id:0\n[    0.278054] Freeing logo buffer memory: 4000K\n[    0.278577] disp_al_manager_apply ouput_type:1\n[    0.278710] [DISP] lcd_clk_config,line:732:\n[    0.278724] disp 0, clk: pll(420000000),clk(420000000),dclk(70000000) dsi_rate(70000000)\n[    0.278724]      clk real:pll(420000000),clk(420000000),dclk(105000000) dsi_rate(150000000)\n[    0.279046] sun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pd not found, using dummy regulator\n[    0.279905] [DISP]disp_module_init finish\n[    0.280877] sunxi_sid_init()551 - insmod ok\n[    0.281502] pwm-regulator: supplied by regulator-dummy\n[    0.283365] sun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pe not found, using dummy regulator\n[    0.283900] uart uart0: get regulator failed\n[    0.283996] uart uart0: uart0 supply uart not found, using dummy regulator\n[    0.284411] uart0: ttyS0 at MMIO 0x2500000 (irq = 18, base_baud = 1500000) is a SUNXI\n[    0.284441] sw_console_setup()1808 - console setup baud 115200 parity n bits 8, flow n\n[    1.008841] printk: console [ttyS0] enabled\n[    1.014546] sun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pg not found, using dummy regulator\n[    1.026112] uart uart1: get regulator failed\n[    1.030889] uart uart1: uart1 supply uart not found, using dummy regulator\n[    1.039026] uart1: ttyS1 at MMIO 0x2500400 (irq = 19, base_baud = 1500000) is a SUNXI\n[    1.049155] misc dump reg init\n[    1.053653] sunxi-rfkill soc@3000000:rfkill@0: module version: v1.0.9\n[    1.061001] sunxi-rfkill soc@3000000:rfkill@0: get gpio chip_en failed\n[    1.068336] sunxi-rfkill soc@3000000:rfkill@0: get gpio power_en failed\n[    1.075806] sunxi-rfkill soc@3000000:rfkill@0: wlan_busnum (1)\n[    1.082308] sunxi-rfkill soc@3000000:rfkill@0: Missing wlan_power.\n[    1.089275] sunxi-rfkill soc@3000000:rfkill@0: wlan_regon gpio=137 assert=1\n[    1.097209] sunxi-rfkill soc@3000000:rfkill@0: wlan_hostwake gpio=202 assert=1\n[    1.105358] sunxi-rfkill soc@3000000:rfkill@0: wakeup source is enabled\n[    1.113084] sunxi-rfkill soc@3000000:rfkill@0: Missing bt_power.\n[    1.119888] sunxi-rfkill soc@3000000:rfkill@0: bt_rst gpio=133 assert=0\n[    1.128096] [ADDR_MGT] addr_mgt_probe: module version: v1.0.10\n[    1.135878] [ADDR_MGT] addr_mgt_probe: success.\n[    1.142271] spi-nor spi0.0: w25q128 (16384 Kbytes)\n[    1.150219] 7 sunxipart partitions found on MTD device spi0.0\n[    1.156761] Creating 7 MTD partitions on \"spi0.0\":\n[    1.162111] 0x000000000000-0x000000180000 : \"uboot\"\n[    1.174910] 0x000000180000-0x0000001a0000 : \"boot-resource\"\n[    1.194894] 0x0000001a0000-0x0000001c0000 : \"env\"\n[    1.214859] 0x0000001c0000-0x0000001e0000 : \"env-redund\"\n[    1.234825] 0x0000001e0000-0x000000960000 : \"boot\"\n[    1.254839] 0x000000960000-0x000000e60000 : \"rootfs\"\n[    1.274882] 0x000000e60000-0x000001000000 : \"UDISK\"\n[    1.295094] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver\n[    1.302406] sunxi-ehci: EHCI SUNXI driver\n[    1.307584] get ehci1-controller wakeup-source is fail.\n[    1.313516] sunxi ehci1-controller don't init wakeup source\n[    1.319843] [sunxi-ehci1]: probe, pdev-&gt;name: 4200000.ehci1-controller, sunxi_ehci: 0xffffffe0006a5968, 0x:ffffffd004075000, irq_no:31\n[    1.333440] sunxi-ehci 4200000.ehci1-controller: 4200000.ehci1-controller supply drvvbus not found, using dummy regulator\n[    1.346016] sunxi-ehci 4200000.ehci1-controller: 4200000.ehci1-controller supply hci not found, using dummy regulator\n[    1.358354] sunxi-ehci 4200000.ehci1-controller: EHCI Host Controller\n[    1.365653] sunxi-ehci 4200000.ehci1-controller: new USB bus registered, assigned bus number 1\n[    1.375584] sunxi-ehci 4200000.ehci1-controller: irq 49, io mem 0x04200000\n[    1.403980] sunxi-ehci 4200000.ehci1-controller: USB 2.0 started, EHCI 1.00\n[    1.412967] hub 1-0:1.0: USB hub found\n[    1.417344] hub 1-0:1.0: 1 port detected\n[    1.422706] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver\n[    1.429725] sunxi-ohci: OHCI SUNXI driver\n[    1.434948] get ohci1-controller wakeup-source is fail.\n[    1.440916] sunxi ohci1-controller don't init wakeup source\n[    1.447262] [sunxi-ohci1]: probe, pdev-&gt;name: 4200400.ohci1-controller, sunxi_ohci: 0xffffffe0006a5d30\n[    1.457705] sunxi-ohci 4200400.ohci1-controller: 4200400.ohci1-controller supply drvvbus not found, using dummy regulator\n[    1.470355] sunxi-ohci 4200400.ohci1-controller: 4200400.ohci1-controller supply hci not found, using dummy regulator\n[    1.482691] sunxi-ohci 4200400.ohci1-controller: OHCI Host Controller\n[    1.489976] sunxi-ohci 4200400.ohci1-controller: new USB bus registered, assigned bus number 2\n[    1.499896] sunxi-ohci 4200400.ohci1-controller: irq 50, io mem 0x04200400\n[    1.579129] hub 2-0:1.0: USB hub found\n[    1.583375] hub 2-0:1.0: 1 port detected\n[    1.590973] sunxi-rtc 7090000.rtc: registered as rtc0\n[    1.596865] sunxi-rtc 7090000.rtc: setting system clock to 1970-01-01T02:04:44 UTC (7484)\n[    1.606081] sunxi-rtc 7090000.rtc: sunxi rtc probed\n[    1.612051] i2c /dev entries driver\n[    1.616055] IR NEC protocol handler initialized\n[    1.624271] usbcore: registered new interface driver uvcvideo\n[    1.630710] USB Video Class driver (1.1.1)\n[    1.635323] sunxi cedar version 1.1\n[    1.639546] sunxi-cedar 1c0e000.ve: Adding to iommu group 0\n[    1.645914] VE: install start!!!\n[    1.645914]\n[    1.651455] VE: cedar-ve the get irq is 6\n[    1.651455]\n[    1.657869] VE: ve_debug_proc_info:(____ptrval____), data:(____ptrval____), lock:(____ptrval____)\n[    1.657869]\n[    1.669509] VE: install end!!!\n[    1.669509]\n[    1.674642] VE: sunxi_cedar_probe\n[    1.678617] Bluetooth: HCI UART driver ver 2.3\n[    1.683571] Bluetooth: HCI UART protocol H4 registered\n[    1.689347] Bluetooth: HCI UART protocol BCSP registered\n[    1.695514] Bluetooth: XRadio Bluetooth LPM Mode Driver Ver 1.0.10\n[    1.702813] [XR_BT_LPM] bluesleep_probe: bt_wake polarity: 1\n[    1.709312] [XR_BT_LPM] bluesleep_probe: host_wake polarity: 1\n[    1.715883] [XR_BT_LPM] bluesleep_probe: wakeup source is disabled!\n[    1.715883]\n[    1.724595] [XR_BT_LPM] bluesleep_probe: uart_index(1)\n[    1.733393] sunxi-mmc 4020000.sdmmc: SD/MMC/SDIO Host Controller Driver(v4.21 2021-11-18 10:02)\n[    1.743488] sunxi-mmc 4020000.sdmmc: ***ctl-spec-caps*** 8\n[    1.749717] sunxi-mmc 4020000.sdmmc: No vmmc regulator found\n[    1.756106] sunxi-mmc 4020000.sdmmc: No vqmmc regulator found\n[    1.762506] sunxi-mmc 4020000.sdmmc: No vdmmc regulator found\n[    1.768940] sunxi-mmc 4020000.sdmmc: No vd33sw regulator found\n[    1.775504] sunxi-mmc 4020000.sdmmc: No vd18sw regulator found\n[    1.782001] sunxi-mmc 4020000.sdmmc: No vq33sw regulator found\n[    1.788570] sunxi-mmc 4020000.sdmmc: No vq18sw regulator found\n[    1.795653] sunxi-mmc 4020000.sdmmc: Got CD GPIO\n[    1.801151] sunxi-mmc 4020000.sdmmc: set cd-gpios as 24M fail\n[    1.807911] sunxi-mmc 4020000.sdmmc: sdc set ios:clk 0Hz bm PP pm UP vdd 21 width 1 timing LEGACY(SDR12) dt B\n[    1.819057] sunxi-mmc 4020000.sdmmc: no vqmmc,Check if there is regulator\n[    1.839264] sunxi-mmc 4020000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[    1.863788] sunxi-mmc 4020000.sdmmc: sdc set ios:clk 0Hz bm PP pm OFF vdd 0 width 1 timing LEGACY(SDR12) dt B\n[    1.874947] sunxi-mmc 4020000.sdmmc: detmode:gpio irq\n[    1.881360] sunxi-mmc 4021000.sdmmc: SD/MMC/SDIO Host Controller Driver(v4.21 2021-11-18 10:02)\n[    1.891565] sunxi-mmc 4021000.sdmmc: ***ctl-spec-caps*** 8\n[    1.897828] sunxi-mmc 4021000.sdmmc: No vmmc regulator found\n[    1.904224] sunxi-mmc 4021000.sdmmc: No vqmmc regulator found\n[    1.910624] sunxi-mmc 4021000.sdmmc: No vdmmc regulator found\n[    1.917058] sunxi-mmc 4021000.sdmmc: No vd33sw regulator found\n[    1.923580] sunxi-mmc 4021000.sdmmc: No vd18sw regulator found\n[    1.930113] sunxi-mmc 4021000.sdmmc: No vq33sw regulator found\n[    1.936671] sunxi-mmc 4021000.sdmmc: No vq18sw regulator found\n[    1.943200] sunxi-mmc 4021000.sdmmc: Cann't get pin bias hs pinstate,check if needed\n[    1.952830] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm UP vdd 21 width 1 timing LEGACY(SDR12) dt B\n[    1.963988] sunxi-mmc 4021000.sdmmc: no vqmmc,Check if there is regulator\n[    1.984144] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[    2.008376] sunxi-mmc 4021000.sdmmc: detmode:manually by software\n[    2.016052] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\n[    2.023246] ashmem: initialized\n[    2.026772] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\n[    2.033685] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[    2.050339] [AUDIOCODEC][sunxi_codec_parse_params][2412]:digital_vol:0, lineout_vol:26, mic1gain:31, mic2gain:31 pa_msleep:120, pa_level:1, pa_pwr_level:1\n[    2.050339]\n[    2.067665] [AUDIOCODEC][sunxi_codec_parse_params][2448]:adcdrc_cfg:0, adchpf_cfg:1, dacdrc_cfg:0, dachpf:0\n[    2.079194] [AUDIOCODEC][sunxi_internal_codec_probe][2609]:codec probe finished\n[    2.087466] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[    2.100621] debugfs: Directory '203034c.dummy_cpudai' with parent 'audiocodec' already present!\n[    2.110578] [SNDCODEC][sunxi_card_init][583]:card init finished\n[    2.118102] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[    2.125696] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[    2.133257] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[    2.140740] sunxi-codec-machine 2030340.sound: 2030000.codec &lt;-&gt; 203034c.dummy_cpudai mapping ok\n[    2.150542] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[    2.157349] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm OFF vdd 0 width 1 timing LEGACY(SDR12) dt B\n[    2.170213] input: audiocodec sunxi Audio Jack as /devices/platform/soc@3000000/2030340.sound/sound/card0/input0\n[    2.182642] [SNDCODEC][sunxi_card_dev_probe][836]:register card finished\n[    2.192438] NET: Registered protocol family 10\n[    2.199198] Segment Routing with IPv6\n[    2.203505] NET: Registered protocol family 17\n[    2.208780] Bluetooth: RFCOMM TTY layer initialized\n[    2.214457] Bluetooth: RFCOMM socket layer initialized\n[    2.220251] Bluetooth: RFCOMM ver 1.11\n[    2.254092] sunxi-i2c sunxi-i2c2: sunxi-i2c2 supply twi not found, using dummy regulator\n[    2.269939] sunxi-i2c sunxi-i2c2: probe success\n[    2.277215] sun8iw20-pinctrl 2000000.pinctrl: 2000000.pinctrl supply vcc-pb not found, using dummy regulator\n[    2.291717] get ehci0-controller wakeup-source is fail.\n[    2.297794] sunxi ehci0-controller don't init wakeup source\n[    2.304082] [sunxi-ehci0]: probe, pdev-&gt;name: 4101000.ehci0-controller, sunxi_ehci: 0xffffffe0006a51d8, 0x:ffffffd0040fd000, irq_no:2e\n[    2.317660] [sunxi-ehci0]: Not init ehci0\n[    2.322699] get ohci0-controller wakeup-source is fail.\n[    2.328758] sunxi ohci0-controller don't init wakeup source\n[    2.335012] [sunxi-ohci0]: probe, pdev-&gt;name: 4101400.ohci0-controller, sunxi_ohci: 0xffffffe0006a55a0\n[    2.345455] [sunxi-ohci0]: Not init ohci0\n[    2.354475] clk: Not disabling unused clocks\n[    2.359279] ALSA device list:\n[    2.362581]   #0: audiocodec\n[    2.367078] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2\n[    2.376830] cfg80211: failed to load regulatory.db\n[    2.382241] alloc_fd: slot 0 not NULL!\n[    2.391463] VFS: Mounted root (squashfs filesystem) readonly on device 31:5.\n[    2.407785] devtmpfs: mounted\n[    2.411302] Freeing unused kernel memory: 144K\n[    2.416354] This architecture does not have kernel memory protection.\n[    2.423565] Run /sbin/init as init process\n[    2.437570] random: fast init done\n[    2.833256] [SNDCODEC][sunxi_check_hs_detect_status][191]:plugin --&gt; switch:1\n[    3.444188]\n[    3.444188] insmod_device_driver\n[    3.444188]\n[    3.451429] sunxi_usb_udc 4100000.udc-controller: 4100000.udc-controller supply udc not found, using dummy regulator\n[    3.469630] device_chose finished 139!\n[    3.606030] init: Console is alive\n[    3.610285] init: - preinit -\n/dev/by-name/UDISK already format by jffs2\n[    5.339399] mount_root: mounting /dev/root\n[    5.344741] mount_root: loading kmods from internal overlay\n[    5.491810] random: crng init done\n[    5.765812] block: attempting to load /etc/config/fstab\n[    5.807607] block: check_filesystem: jffs2 is not supported\n[    5.838954] jffs2: notice: (91) jffs2_build_xattr_subsystem: complete building xattr subsystem, 10 of xdatum (0 unchecked, 3 orphan) and 12 of xref (3 dead, 0 orphan) found.\n[    5.860743] block: extroot: UUID match (root: bc2f88ab-06eba037-7590c3e8-6fa728e7, overlay: bc2f88ab-06eba037-7590c3e8-6fa728e7)\n[    5.882754] overlayfs: upper fs does not support tmpfile.\n[    5.894649] mount_root: switched to extroot\n[    5.919200] procd: - early -\n[    6.166648] procd: - ubus -\n[    6.170648] procd (1): /proc/100/oom_adj is deprecated, please use /proc/100/oom_score_adj instead.\n[    6.476406] procd: - init -\nPlease press Enter to activate this console.\n[    8.502814] file system registered\n[    8.785556] configfs-gadget 4100000.udc-controller: failed to start g1: -19\n[    9.204177] read descriptors\n[    9.207403] read strings\n[    9.366159] sunxi_set_cur_vol_work()397 WARN: get power supply failed\n[    9.452309] android_work: sent uevent USB_STATE=CONNECTED\n[    9.750396] sunxi_set_cur_vol_work()397 WARN: get power supply failed\n[    9.844049] sunxi_vbus_det_work()3356 WARN: get power supply failed\n[    9.874070] android_work: sent uevent USB_STATE=DISCONNECTED\n[    9.884058] android_work: sent uevent USB_STATE=CONNECTED\n[    9.890766] configfs-gadget gadget: high-speed config #1: c\n[    9.904247] android_work: sent uevent USB_STATE=CONFIGURED\n[   10.998925] ======== XRADIO WIFI OPEN ========\n[   11.004696] [XRADIO] Driver Label:XR_V02.16.85_P2P_HT40_01.31\n[   11.011460] [XRADIO] Allocated hw_priv @ 0000000093cf579f\n[   11.024060] sunxi-rfkill soc@3000000:rfkill@0: bus_index: 1\n[   11.050057] sunxi-rfkill soc@3000000:rfkill@0: wlan power on success\n[   11.260453] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm UP vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   11.271601] [XRADIO] Detect SDIO card 1\n[   11.284074] sunxi-mmc 4021000.sdmmc: no vqmmc,Check if there is regulator\n[   11.304205] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   11.329295] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\n[   11.336962] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\n[   11.347857] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   11.377223] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   11.396443] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   11.403978] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   11.411576] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   11.419230] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   11.426072] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm OFF vdd 0 width 1 timing LEGACY(SDR12) dt B\n[   13.364108] sunxi-rfkill soc@3000000:rfkill@0: wlan power off success\n[   13.471353] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm UP vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   13.482458] [XRADIO] Remove SDIO card 1\n[   13.494072] sunxi-mmc 4021000.sdmmc: no vqmmc,Check if there is regulator\n[   13.503664] [SBUS_ERR] sdio probe timeout!\n[   13.508321] [XRADIO_ERR] sbus_sdio_init failed\n[   13.514634] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   13.526581] xradio_core_init failed (-110)!\n[   13.557678] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\n[   13.565382] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 52, RTO !!\n[   13.572229] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   13.587126] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 400000Hz bm PP pm ON vdd 21 width 1 timing LEGACY(SDR12) dt B\n[   13.600976] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   13.608589] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   13.616646] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   13.624186] sunxi-mmc 4021000.sdmmc: smc 1 p1 err, cmd 5, RTO !!\n[   13.630916] sunxi-mmc 4021000.sdmmc: sdc set ios:clk 0Hz bm PP pm OFF vdd 0 width 1 timing LEGACY(SDR12) dt B\nkmodloader done\n</code></pre> \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002 \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002 \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002</p>"},{"location":"DongshanPI-D1s/04-StudyPath/","title":"\u5b66\u4e60\u8def\u7ebf","text":""},{"location":"DongshanPI-D1s/04-StudyPath/#_2","title":"\u57fa\u7840\u60c5\u51b5","text":""},{"location":"DongshanPI-D1s/04-StudyPath/#linux","title":"\u7eaf\u5c0f\u767d\u540c\u5b66\u4e0d\u61c2Linux","text":"<ul> <li>\u5b66\u4e60\u64cd\u4f5c\u4f7f\u7528ubuntu\u7cfb\u7edf\uff1a https://www.bilibili.com/video/BV1dU4y1D7fz</li> <li>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</li> <li>\u5b66\u4e60Linux C\u7f16\u7a0b\uff1a \u53c2\u8003\u5c0f\u7532\u9c7c\u8bfe\u7a0b</li> <li>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</li> </ul>"},{"location":"DongshanPI-D1s/04-StudyPath/#linux_1","title":"\u61c2\u4e00\u70b9Linux\u6982\u5ff5","text":"<ul> <li> <p>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</p> </li> <li> <p>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</p> </li> </ul>"},{"location":"DongshanPI-D1s/04-StudyPath/#linux_2","title":"\u719f\u6089\u5d4c\u5165\u5f0fLinux\u5f00\u53d1","text":"<ul> <li>\u5b66\u4e60Tina-SDK\u5f00\u53d1</li> <li>\u5b66\u4e60Linux\u9a71\u52a8\u5f00\u53d1</li> <li>\u5b66\u4e60\u4e13\u9898\u8bfe\u7a0b\uff08\u6bd4\u5982RISC-V\u67b6\u6784\u4e13\u9898\uff09</li> </ul>"},{"location":"DongshanPI-D1s/04-StudyPath/#_3","title":"\u5de5\u4f5c\u5c97\u4f4d","text":""},{"location":"DongshanPI-D1s/04-StudyPath/#linux_3","title":"\u5d4c\u5165\u5f0fLinux \u5e94\u7528\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"DongshanPI-D1s/04-StudyPath/#linux_4","title":"\u5d4c\u5165\u5f0fLinux\u9a71\u52a8\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u4e2d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"DongshanPI-D1s/04-StudyPath/#_4","title":"\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1","text":"<p>\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f18\u5316\u5de5\u7a0b\u5e08</p>"},{"location":"DongshanPI-D1s/05-1_RunHelloword/","title":"\u8fd0\u884c\u8f93\u51fahello word","text":""},{"location":"DongshanPI-D1s/05-1_RunHelloword/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u4e1c\u5c71\u54ea\u5412STU \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002\u56e0\u4e3a\u6700\u521d\u7684\u5de5\u5177\u94fe\u662f \u963f\u91cc\u5e73\u5934\u54e5\u63d0\u4f9b\uff0c\u4ed6\u4eec\u7684\u5de5\u5177\u94fe \u4e0e GNU\u793e\u533a\u6807\u51c6\u7684\u5de5\u5177\u94fe\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u6240\u4ee5\u6211\u4eec\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528 \u793e\u533a\u7248\u672c\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\uff0c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p>"},{"location":"DongshanPI-D1s/05-1_RunHelloword/#_2","title":"\u83b7\u53d6\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe","text":"<p>\u6211\u4eec\u7684\u6e90\u7801\u90fd\u5b58\u653e\u5728\u4e0d\u540c\u7684git\u4ed3\u5e93\u5185\uff0c\u5176\u4e2d\u4ee5github\u4e3a\u4e3b\u8981\u6258\u7ba1\uff0c\u4e5f\u662f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u540c\u65f6\u4e5f\u4f1a\u4f7f\u7528 gitee\u4f5c\u4e3a\u5907\u7528\u7ad9\u70b9\uff0c\u6839\u636e\u5927\u5bb6\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u6765\u8fdb\u884c\u9009\u62e9\u3002</p> <ul> <li>\u5bf9\u4e8e\u53ef\u4ee5\u8bbf\u95eegithub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801</li> </ul> <pre><code>git clone https://github.com/DongshanPI/eLinuxCore_dongshannezhastu\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <ul> <li>\u5bf9\u4e8e\u65e0\u6cd5\u8bbf\u95eeGitHub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801\u3002</li> </ul> <pre><code>git clone https://gitee.com/weidongshan/eLinuxCore_dongshannezhastu.git\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <p>\u83b7\u53d6\u5b8c\u6210\u6e90\u7801\u540e\uff0c\u9700\u8981\u8fdb\u5165\u5230\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u8def\u5f84\u5230 \u5185\uff0c\u7528\u4e8e\u9a8c\u8bc1\u662f\u5426\u53ef\u7528\u3002</p> <pre><code>book@virtual-machine:~/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin$ ./riscv64-unknown-linux-gnu-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=./riscv64-unknown-linux-gnu-gcc\nCOLLECT_LTO_WRAPPER=/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin/../libexec/gcc/riscv64-unknown-linux-gnu/8.1.0/lto-wrapper\nTarget: riscv64-unknown-linux-gnu\nConfigured with: /ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/build/../source/riscv/riscv-gcc/configure --target=riscv64-unknown-linux-gnu --with-mpc=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --with-mpfr=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --with-gmp=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --prefix=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/install --with-sysroot=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/install/sysroot --with-system-zlib --enable-shared --enable-tls --enable-languages=c,c++,fortran --disable-libmudflap --disable-libssp --disable-libquadmath --disable-nls --disable-bootstrap --src=../../source/riscv/riscv-gcc --enable-checking=yes --with-pkgversion='C-SKY RISCV Tools V1.8.4 B20200702' --enable-multilib --with-abi=lp64d --with-arch=rv64gcxthead 'CFLAGS_FOR_TARGET=-O2  -mcmodel=medany' 'CXXFLAGS_FOR_TARGET=-O2  -mcmodel=medany' CC=gcc CXX=g++\nThread model: posix\ngcc version 8.1.0 (C-SKY RISCV Tools V1.8.4 B20200702)\n</code></pre> <p>\u5b8c\u6210\u4ee5\u540e \u6211\u4eec\u5c31\u53ef\u4ee5\u52a0\u5165\u5230 \u7cfb\u7edf\u7684 PATH\u73af\u5883\u53d8\u91cf\u5185\u3002</p> <p>\u9996\u5148 \u9700\u8981\u83b7\u53d6 \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u8fdb\u5165\u5230  <code>eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin</code>\u76ee\u5f55\u4e0b\u6267\u884c pwd \u547d\u4ee4\uff0c\u5373\u53ef\u5f97\u5230\u7edd\u5bf9\u8def\u5f84 <code>/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin</code> \u3002</p> <pre><code>book@virtual-machine:~/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin$ pwd\n/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u8bb2\u8fd9\u4e2a\u52a0\u5165\u5230\u7cfb\u7edf \u73af\u5883\u53d8\u91cf\u5185\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6267\u884c  \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4e86\u3002</p> <pre><code>export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\n</code></pre> <p>\u6ce8\u610f\uff1a\u6b64\u65b9\u5f0f\u53ea\u9488\u5bf9\u5f53\u524d\u7684\u7ec8\u7aef\u6709\u6548\uff0c\u5982\u679c\u4f60\u5173\u95ed\u4e86\u8fd9\u4e2a\u7ec8\u7aef\uff0c\u518d\u6b21\u5f00\u542f\u7ec8\u7aef \u9700\u8981\u91cd\u65b0\u6267\u884c\u624d\u53ef\u4ee5\u3002</p> <p>\u8fd8\u6709\u53e6\u4e00\u79cd\u6c38\u4e45\u751f\u6548\u7684\u65b9\u5f0f \u5c31\u662f\u5199\u5165\u5230 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u91cc\u9762\uff0c\u9700\u8981\u4fee\u6539  /etc/environment \u5728\u672b\u5c3e\u52a0\u4e0a \u4f60\u83b7\u53d6\u5230\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7edd\u5bf9\u8def\u5f84,\u6ce8\u610f\u4fee\u6539\u9700\u8981\u4f7f\u7528 sudo \u547d\u4ee4\u3002</p> <pre><code>book@virtual-machine:~$ cat /etc/environment\nPATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\"\n</code></pre>"},{"location":"DongshanPI-D1s/05-1_RunHelloword/#hello-word_1","title":"\u7f16\u5199Hello word\u7a0b\u5e8f","text":"<ul> <li>\u914d\u7f6e\u597d\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff0c\u5982\u4e0b\u4e3a\u4e00\u4e2a\u6700\u7b80\u5355\u7684 hello word\u6253\u5370\u793a\u4f8b\u7a0b\u5e8f\u3002</li> </ul> <pre><code>#include &lt;stdio.h&gt;\nint main (void)\n{\n    printf(\"hello word!\\n\");\n    return 0;\n}    \n</code></pre> <p>\u7f16\u5199\u5b8c\u6210\u540e\uff0c\u4fdd\u5b58\u5230 helloword.c</p> <p>\u4e4b\u540e\u6211\u4eec\u6267\u884c \u5982\u4e0b\u7f16\u8bd1\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1 </p> <pre><code>book@virtual-machine:~$ vim helloword.c \nbook@virtual-machine:~$ riscv64-unknown-linux-gnu-gcc -o helloword helloword.c\nbook@virtual-machine:~$ file helloword\nhelloword: ELF 64-bit LSB executable, UCB RISC-V, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-riscv64xthead-lp64d.so.1, for GNU/Linux 4.15.0, with debug_info, not stripped\n</code></pre>"},{"location":"DongshanPI-D1s/05-1_RunHelloword/#_3","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u63a8\u8fdb\u4f7f\u7528 \u7f51\u7edc\u65b9\u5f0f\uff0c\u7f51\u7edc\u4e5f\u6709\u5f88\u591a\uff0c\u6709TFTP\u4f20\u8f93\uff0c\u6709nfs\u4f20\u8f93\uff0c\u6709SFTP\u4f20\u8f93\uff0c\u5176\u4e2dnfs\u4f20\u8f93\u9700\u8981\u5185\u6838\u652f\u6301 nfs\u6587\u4ef6\u7cfb\u7edf\uff0cSFTP\u9700\u8981\u6839\u6587\u4ef6\u7cfb\u7edf\u652f\u6301 openssh\u7ec4\u4ef6\u670d\u52a1\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u8fd8\u662f\u9009\u7528tftp\u670d\u52a1\u3002</p>"},{"location":"DongshanPI-D1s/05-1_RunHelloword/#tftp","title":"\u4f7f\u7528tftp\u7f51\u7edc\u670d\u52a1","text":"<ol> <li>\u9996\u5148\uff0c\u9700\u8981\u4f60\u7684ubuntu\u7cfb\u7edf\u652f\u6301 tftp\u670d\u52a1\uff0c\u5df2\u7ecf\u914d\u7f6e\u5e76\u4e14\u5b89\u88c5\u597d\uff0c\u7136\u540e\u8bb2\u7f16\u8bd1\u51fa\u6765\u7684 helloword\u7a0b\u5e8f \u62f7\u8d1d\u5230 tftp\u76ee\u5f55\u4e0b\u3002</li> </ol> <pre><code>book@virtual-machine:~$ cp helloword ~/tftpboot/\nbook@virtual-machine:~$ ls ~/tftpboot/helloword\n/home/book/tftpboot/helloword\nbook@virtual-machine:~$\n</code></pre> <ol> <li>\u8fdb\u5165\u5230\u5f00\u53d1\u677f\u5185\uff0c\u9996\u5148\u8ba9\u5f00\u53d1\u677f\u53ef\u4ee5\u83b7\u53d6\u5230IP\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u548c ubuntu\u7cfb\u7edfping\u901a(\u8fd9\u91cc\u6307\u7684\u662f\u7f16\u8bd1helloword\u4e3b\u673a)\uff0c\u4e4b\u540e\u6211\u4eec\u5728\u5f00\u53d1\u677f\u4e0a \u83b7\u53d6 helloword \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6267\u884c\u3002</li> </ol> <pre><code># udhcpc\nudhcpc: started, v1.35.0\nudhcpc: broadcasting discover\nudhcpc: broadcasting select for 192.168.1.47, server 192.168.1.1\nudhcpc: lease of 192.168.1.47 obtained from 192.168.1.1, lease time 86400\ndeleting routers\nadding dns 192.168.1.1\n# tftp -g -r helloword 192.168.1.133\n# ls\nhelloword\n</code></pre> <p>\u5982\u4e0a\u6240\u793a\uff0c\u6211\u7684ubuntu\u4e3b\u673aIP\u5730\u5740\u662f 192.168.1.133 \uff0c\u6240\u4ee5\u4f7f\u7528tftp \u4ece ubuntu\u83b7\u53d6helloword \u7a0b\u5e8f\uff0c\u83b7\u53d6\u901f\u5ea6\u6839\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"DongshanPI-D1s/05-1_RunHelloword/#usb-adb","title":"\u4f7f\u7528usb adb\u65b9\u5f0f","text":"<ul> <li>\u540e\u9762\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 usb otg  adb\u547d\u4ee4\u4f20\u8f93\u6587\u4ef6\u3002</li> </ul>"},{"location":"DongshanPI-D1s/05-1_RunHelloword/#_4","title":"\u8fd0\u884c","text":"<p>\u4e0b\u8f7d\u597d\u7a0b\u5e8f\u4ee5\u540e\uff0c\u9700\u8981\u4f7f\u7528chmod +x \u547d\u4ee4\u6765\u7ed9\u7a0b\u5e8f\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\uff0c\u4e4b\u540e \u6211\u4eec\u5c31\u53ef\u4ee5\u6267\u884c \u8fd9\u4e2ahelloword\u5e94\u7528\u4e86\u3002</p> <pre><code># chmod +x helloword\n# ./helloword\nhello word!\n#\n</code></pre>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/","title":"\u7f16\u8bd1\u8fd0\u884cHelloword\u9a71\u52a8","text":""},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u4e1c\u5c71\u54ea\u5412STU \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002\u56e0\u4e3a\u6700\u521d\u7684\u5de5\u5177\u94fe\u662f \u963f\u91cc\u5e73\u5934\u54e5\u63d0\u4f9b\uff0c\u4ed6\u4eec\u7684\u5de5\u5177\u94fe \u4e0e GNU\u793e\u533a\u6807\u51c6\u7684\u5de5\u5177\u94fe\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u6240\u4ee5\u6211\u4eec\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528 \u793e\u533a\u7248\u672c\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\uff0c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#kernel","title":"\u83b7\u53d6kernel\u6e90\u7801\u5de5\u7a0b","text":"<p>\u6211\u4eec\u7684\u6e90\u7801\u90fd\u5b58\u653e\u5728\u4e0d\u540c\u7684git\u4ed3\u5e93\u5185\uff0c\u5176\u4e2d\u4ee5github\u4e3a\u4e3b\u8981\u6258\u7ba1\uff0c\u4e5f\u662f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u540c\u65f6\u4e5f\u4f1a\u4f7f\u7528 gitee\u4f5c\u4e3a\u5907\u7528\u7ad9\u70b9\uff0c\u6839\u636e\u5927\u5bb6\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u6765\u8fdb\u884c\u9009\u62e9\u3002</p> <ul> <li>\u5bf9\u4e8e\u53ef\u4ee5\u8bbf\u95eegithub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801</li> </ul> <pre><code>git clone https://github.com/DongshanPI/eLinuxCore_dongshannezhastu\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <ul> <li>\u5bf9\u4e8e\u65e0\u6cd5\u8bbf\u95eeGitHub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801\u3002</li> </ul> <pre><code>git clone https://gitee.com/weidongshan/eLinuxCore_dongshannezhastu.git\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#_2","title":"\u914d\u7f6e\u5185\u6838\u7f16\u8bd1\u73af\u5883","text":"<p><pre><code>export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\nexport ARCH=riscv\nexport CROSS_COMPILE=riscv64-unknown-linux-gnu-\n</code></pre> <pre><code>book@100ask:~/eLinuxCore_dongshannezhastu/linux$ export ARCH=riscv\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ export CROSS_COMPILE=riscv64-unknown-linux-gnu-\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\nbook@100ask:~/NezhaSTU/eLinuxCore_dongshannezhastu/linux$ make sun20iw1p1_d1_defconfig\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  HOSTCC  scripts/kconfig/confdata.o\n  HOSTCC  scripts/kconfig/expr.o\n  LEX     scripts/kconfig/lexer.lex.c\n  YACC    scripts/kconfig/parser.tab.[ch]\n  HOSTCC  scripts/kconfig/lexer.lex.o\n  HOSTCC  scripts/kconfig/parser.tab.o\n  HOSTCC  scripts/kconfig/preprocess.o\n  HOSTCC  scripts/kconfig/symbol.o\n  HOSTLD  scripts/kconfig/conf\n#\n# configuration written to .config\n#\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ make Image  -j8\n</code></pre></p>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#helloword_1","title":"\u7f16\u5199 helloword\u9a71\u52a8","text":"<p>hello_drv.c</p> <pre><code>#include &lt;linux/module.h&gt;\n\n#include &lt;linux/fs.h&gt;\n#include &lt;linux/errno.h&gt;\n#include &lt;linux/miscdevice.h&gt;\n#include &lt;linux/kernel.h&gt;\n#include &lt;linux/major.h&gt;\n#include &lt;linux/mutex.h&gt;\n#include &lt;linux/proc_fs.h&gt;\n#include &lt;linux/seq_file.h&gt;\n#include &lt;linux/stat.h&gt;\n#include &lt;linux/init.h&gt;\n#include &lt;linux/device.h&gt;\n#include &lt;linux/tty.h&gt;\n#include &lt;linux/kmod.h&gt;\n#include &lt;linux/gfp.h&gt;\n\n/* 1. \u786e\u5b9a\u4e3b\u8bbe\u5907\u53f7                                                                 */\nstatic int major = 0;\nstatic char kernel_buf[1024];\nstatic struct class *hello_class;\n\n\n#define MIN(a, b) (a &lt; b ? a : b)\n\n/* 3. \u5b9e\u73b0\u5bf9\u5e94\u7684open/read/write\u7b49\u51fd\u6570\uff0c\u586b\u5165file_operations\u7ed3\u6784\u4f53                   */\nstatic ssize_t hello_drv_read (struct file *file, char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_to_user(buf, kernel_buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic ssize_t hello_drv_write (struct file *file, const char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_from_user(kernel_buf, buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic int hello_drv_open (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\nstatic int hello_drv_close (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\n/* 2. \u5b9a\u4e49\u81ea\u5df1\u7684file_operations\u7ed3\u6784\u4f53                                              */\nstatic struct file_operations hello_drv = {\n    .owner   = THIS_MODULE,\n    .open    = hello_drv_open,\n    .read    = hello_drv_read,\n    .write   = hello_drv_write,\n    .release = hello_drv_close,\n};\n\n/* 4. \u628afile_operations\u7ed3\u6784\u4f53\u544a\u8bc9\u5185\u6838\uff1a\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f                                */\n/* 5. \u8c01\u6765\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f\u554a\uff1f\u5f97\u6709\u4e00\u4e2a\u5165\u53e3\u51fd\u6570\uff1a\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u5165\u53e3\u51fd\u6570 */\nstatic int __init hello_init(void)\n{\n    int err;\n\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    major = register_chrdev(0, \"hello\", &amp;hello_drv);  /* /dev/hello */\n\n\n    hello_class = class_create(THIS_MODULE, \"hello_class\");\n    err = PTR_ERR(hello_class);\n    if (IS_ERR(hello_class)) {\n        printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n        unregister_chrdev(major, \"hello\");\n        return -1;\n    }\n\n    device_create(hello_class, NULL, MKDEV(major, 0), NULL, \"hello\"); /* /dev/hello */\n\n    return 0;\n}\n\n/* 6. \u6709\u5165\u53e3\u51fd\u6570\u5c31\u5e94\u8be5\u6709\u51fa\u53e3\u51fd\u6570\uff1a\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u51fa\u53e3\u51fd\u6570           */\nstatic void __exit hello_exit(void)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    device_destroy(hello_class, MKDEV(major, 0));\n    class_destroy(hello_class);\n    unregister_chrdev(major, \"hello\");\n}\n\n\n/* 7. \u5176\u4ed6\u5b8c\u5584\uff1a\u63d0\u4f9b\u8bbe\u5907\u4fe1\u606f\uff0c\u81ea\u52a8\u521b\u5efa\u8bbe\u5907\u8282\u70b9                                     */\n\nmodule_init(hello_init);\nmodule_exit(hello_exit);\n\nMODULE_LICENSE(\"GPL\");\n</code></pre> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n/*\n * ./hello_drv_test -w abc\n * ./hello_drv_test -r\n */\nint main(int argc, char **argv)\n{\n    int fd;\n    char buf[1024];\n    int len;\n\n    /* 1. \u5224\u65ad\u53c2\u6570 */\n    if (argc &lt; 2) \n    {\n        printf(\"Usage: %s -w &lt;string&gt;\\n\", argv[0]);\n        printf(\"       %s -r\\n\", argv[0]);\n        return -1;\n    }\n\n    /* 2. \u6253\u5f00\u6587\u4ef6 */\n    fd = open(\"/dev/hello\", O_RDWR);\n    if (fd == -1)\n    {\n        printf(\"can not open file /dev/hello\\n\");\n        return -1;\n    }\n\n    /* 3. \u5199\u6587\u4ef6\u6216\u8bfb\u6587\u4ef6 */\n    if ((0 == strcmp(argv[1], \"-w\")) &amp;&amp; (argc == 3))\n    {\n        len = strlen(argv[2]) + 1;\n        len = len &lt; 1024 ? len : 1024;\n        write(fd, argv[2], len);\n    }\n    else\n    {\n        len = read(fd, buf, 1024);      \n        buf[1023] = '\\0';\n        printf(\"APP read : %s\\n\", buf);\n    }\n\n    close(fd);\n\n    return 0;\n}\n</code></pre> <p>Makefile:</p> <pre><code># 1. \u4f7f\u7528\u4e0d\u540c\u7684\u5f00\u53d1\u677f\u5185\u6838\u65f6, \u4e00\u5b9a\u8981\u4fee\u6539KERN_DIR\n# 2. KERN_DIR\u4e2d\u7684\u5185\u6838\u8981\u4e8b\u5148\u914d\u7f6e\u3001\u7f16\u8bd1, \u4e3a\u4e86\u80fd\u7f16\u8bd1\u5185\u6838, \u8981\u5148\u8bbe\u7f6e\u4e0b\u5217\u73af\u5883\u53d8\u91cf:\n# 2.1 ARCH,          \u6bd4\u5982: export ARCH=arm64\n# 2.2 CROSS_COMPILE, \u6bd4\u5982: export CROSS_COMPILE=aarch64-linux-gnu-\n# 2.3 PATH,          \u6bd4\u5982: export PATH=$PATH:/home/book/100ask_roc-rk3399-pc/ToolChain-6.3.1/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin \n# \u6ce8\u610f: \u4e0d\u540c\u7684\u5f00\u53d1\u677f\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u4e0a\u8ff03\u4e2a\u73af\u5883\u53d8\u91cf\u4e0d\u4e00\u5b9a\u76f8\u540c,\n#       \u8bf7\u53c2\u8003\u5404\u5f00\u53d1\u677f\u7684\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u624b\u518c\n\nKERN_DIR = /home/book/eLinuxCore_dongshannezhastu/linux/\n\nall:\n    make -C $(KERN_DIR) M=`pwd` modules \n    $(CROSS_COMPILE)gcc -o hello_drv_test hello_drv_test.c \n\nclean:\n    make -C $(KERN_DIR) M=`pwd` modules clean\n    rm -rf modules.order\n    rm -f hello_drv_test\n\nobj-m   += hello_drv.o\n</code></pre>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#_3","title":"\u7f16\u8bd1","text":"<pre><code>book@100ask:~$ make\nmake -C /home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux/ M=`pwd` modules\nmake[1]: Entering directory '/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux'\n  CC [M]  /home/book/NezhaSTU/hello_drv.o\n  Building modules, stage 2.\n  MODPOST 1 modules\n  CC [M]  /home/book/NezhaSTU/hello_drv.mod.o\n  LD [M]  /home/book/NezhaSTU/hello_drv.ko\nmake[1]: Leaving directory '/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux'\nriscv64-unknown-linux-gnu-gcc -o hello_drv_test hello_drv_test.c\nbook@100ask:~$\n</code></pre>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#_4","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u63a8\u8fdb\u4f7f\u7528 \u7f51\u7edc\u65b9\u5f0f\uff0c\u7f51\u7edc\u4e5f\u6709\u5f88\u591a\uff0c\u6709TFTP\u4f20\u8f93\uff0c\u6709nfs\u4f20\u8f93\uff0c\u6709SFTP\u4f20\u8f93\uff0c\u5176\u4e2dnfs\u4f20\u8f93\u9700\u8981\u5185\u6838\u652f\u6301 nfs\u6587\u4ef6\u7cfb\u7edf\uff0cSFTP\u9700\u8981\u6839\u6587\u4ef6\u7cfb\u7edf\u652f\u6301 openssh\u7ec4\u4ef6\u670d\u52a1\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u8fd8\u662f\u9009\u7528tftp\u670d\u52a1\u3002</p>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#tftp","title":"\u4f7f\u7528tftp\u7f51\u7edc\u670d\u52a1","text":"<ol> <li>\u9996\u5148\uff0c\u9700\u8981\u4f60\u7684ubuntu\u7cfb\u7edf\u652f\u6301 tftp\u670d\u52a1\uff0c\u5df2\u7ecf\u914d\u7f6e\u5e76\u4e14\u5b89\u88c5\u597d\uff0c\u7136\u540e\u8bb2\u7f16\u8bd1\u51fa\u6765\u7684 helloword\u7a0b\u5e8f \u62f7\u8d1d\u5230 tftp\u76ee\u5f55\u4e0b\u3002</li> </ol> <pre><code>book@100ask:~$ cp hello_drv_test hello_drv.ko ~/tftpboot/\n</code></pre> <ol> <li>\u8fdb\u5165\u5230\u5f00\u53d1\u677f\u5185\uff0c\u9996\u5148\u8ba9\u5f00\u53d1\u677f\u53ef\u4ee5\u83b7\u53d6\u5230IP\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u548c ubuntu\u7cfb\u7edfping\u901a(\u8fd9\u91cc\u6307\u7684\u662f\u7f16\u8bd1helloword\u4e3b\u673a)\uff0c\u4e4b\u540e\u6211\u4eec\u5728\u5f00\u53d1\u677f\u4e0a \u83b7\u53d6 helloword \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6267\u884c\u3002</li> </ol> <pre><code># udhcpc\nudhcpc: started, v1.35.0\n[  974.154486] libphy: 4500000.eth: probed\n[  974.159083] sunxi-gmac 4500000.eth eth0: eth0: Type(8) PHY ID 001cc916 at 0 IRQ poll (4500000.eth-0:00)\nudhcpc: broadcasting discover\nudhcpc: broadcasting discover\n[  979.331180] sunxi-gmac 4500000.eth eth0: Link is Up - 1Gbps/Full - flow control off\n[  979.340154] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready\nudhcpc: broadcasting discover\nudhcpc: broadcasting select for 192.168.1.47, server 192.168.1.1\nudhcpc: lease of 192.168.1.47 obtained from 192.168.1.1, lease time 86400\ndeleting routers\nadding dns 192.168.1.1\n# [  992.315224] random: crng init done\n[  992.319022] random: 2 urandom warning(s) missed due to ratelimiting\n\n# tftp -g -r hello_drv.ko 192.168.1.133\n# tftp -g -r hello_drv_test  192.168.1.133\n# ls\nhello_drv.ko    hello_drv_test  helloword\n</code></pre> <p>\u5982\u4e0a\u6240\u793a\uff0c\u6211\u7684ubuntu\u4e3b\u673aIP\u5730\u5740\u662f 192.168.1.133 \uff0c\u6240\u4ee5\u4f7f\u7528tftp \u4ece ubuntu\u83b7\u53d6helloword \u7a0b\u5e8f\uff0c\u83b7\u53d6\u901f\u5ea6\u6839\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"DongshanPI-D1s/05-2_RunHellowordDriver/#_5","title":"\u8fd0\u884c","text":"<pre><code># insmod hello_drv.ko\n[ 1007.072991] hello_drv: loading out-of-tree module taints kernel.\n[ 1007.081285] /home/book/NezhaSTU/hello_drv.c hello_init line 70\n# chmod +x hello_drv_test\n# ls /dev/h\nhdmi   hello\n# ls /dev/hello\n/dev/hello\n# ./hello_drv\nhello_drv.ko    hello_drv_test\n# ./hello_drv_test  -w abc\n[ 1060.000621] /home/book/NezhaSTU/hello_drv.c hello_drv_open line 45\n[ 1060.007613] /home/book/NezhaSTU/hello_drv.c hello_drv_write line 38\n[ 1060.015194] /home/book/NezhaSTU/hello_drv.c hello_drv_close line 51\n# ./hello_drv_test  -r\n[ 1062.312864] /home/book/NezhaSTU/hello_drv.c hello_drv_open line 45\n[ 1062.319853] /home/book/NezhaSTU/hello_drv.c hello_drv_read line 30\nAPP read : abc[ 1062.327680] /home/book/NezhaSTU/hello_drv.c hello_drv_close line 51\n\n#\n</code></pre>"},{"location":"DongshanPI-D1s/06-ConfigHostEnv/","title":"\u5b89\u88c5\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":""},{"location":"DongshanPI-D1s/06-ConfigHostEnv/#_2","title":"\u83b7\u53d6\u865a\u62df\u673a\u7cfb\u7edf","text":""},{"location":"DongshanPI-D1s/06-ConfigHostEnv/#vmware","title":"\u4e0b\u8f7dvmware\u865a\u62df\u673a\u5de5\u5177","text":"<p>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u7f51\u5740    https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html   \u53c2\u8003\u4e0b\u56fe\u7bad\u5934\u6240\u793a\uff0c\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5 Windows\u7248\u672c\u7684VMware Workstation \uff0c\u70b9\u51fb DOWNLOAD NOW  \u5373\u53ef\u5f00\u59cb\u4e0b\u8f7d\u3002</p> <p></p> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u5168\u90e8\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u4e00\u6b65\u6b65\u5b89\u88c5\u5373\u53ef\u3002</p>"},{"location":"DongshanPI-D1s/06-ConfigHostEnv/#ubuntu","title":"\u83b7\u53d6Ubuntu\u7cfb\u7edf\u955c\u50cf","text":"<ul> <li>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00  https://www.linuxvmimages.com/images/ubuntu-1804/     \u627e\u5230\u5982\u4e0b\u7bad\u5934\u6240\u793a\u4f4d\u7f6e\uff0c\u70b9\u51fb VMware Image \u4e0b\u8f7d\u3002</li> </ul> <p>\u4e0b\u8f7d\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u6301\u7eed 10 \u5230 30 \u5206\u949f\uff0c\u5177\u4f53\u8981\u4f9d\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"DongshanPI-D1s/06-ConfigHostEnv/#_3","title":"\u8fd0\u884c\u865a\u62df\u673a\u7cfb\u7edf","text":"<ol> <li>\u89e3\u538b\u7f29 \u865a\u62df\u673a\u7cfb\u7edf\u955c\u50cf\u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u5982\u4e0b\u4e24\u4e2a\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 \u540e\u7f00\u540d\u4e3a .vmx \u8fd9\u4e2a \u914d\u7f6e\u6587\u4ef6\u3002</li> </ol> <ol> <li>\u6253\u5f00\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 vmware workstation \u8f6f\u4ef6 \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684 \u6587\u4ef6 \u2192 \u6253\u5f00 \u627e\u5230\u4e0a\u9762\u7684 Ubuntu_18.04.6_VM_LinuxVMImages.COM.vmx  \u6587\u4ef6\uff0c\u4e4b\u540e\u4f1a\u5f39\u51fa\u65b0\u7684\u865a\u62df\u673a\u5bf9\u8bdd\u6846\u9875\u9762\u3002</li> </ol> <ol> <li>\u5982\u4e0b\u56fe\u6240\u793a\u4e3a  \u4e3a\u6211\u4eec\u5df2\u7ecf\u865a\u62df\u673a\u7684\u914d\u7f6e\u754c\u9762\uff0c\u90a3\u9762\u6211\u4eec\u53ef\u4ee5 \u70b9\u51fb \u7ea2\u6846 2 \u7f16\u8f91\u865a\u62df\u673a\u8bbe\u7f6e \u91cc\u9762 \u53bb\u8c03\u6b63 \u6211\u4eec\u865a\u62df\u673a\u7684 \u5185\u5b58 \u5927\u5c0f \u548c\u5904\u7406\u5668\u4e2a\u6570\uff0c\u5efa\u8bae \u6700\u597d \u5185\u5b58\u4e3a 4GB \u53ca\u4ee5\u4e0a\uff0c\u5904\u7406\u5668\u81f3\u5c114 \u4e2a\u3002 \u8c03\u6574\u597d\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5 \u70b9\u51fb \u5f00\u542f\u6b64\u865a\u62df\u673a \u6765\u8fd0\u884c\u6b64\u865a\u62df\u673a\u4e86</li> </ol> <p>\u7b2c\u4e00\u6b21\u6253\u5f00\u4f1a\u63d0\u793a  \u4e00\u4e2a \u865a\u62df\u673a\u5df2\u7ecf\u590d\u5236\u7684 \u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u8fd9\u65f6\uff0c\u53ea\u9700\u8981 \u70b9\u51fb  \u6211\u5df2\u590d\u5236\u865a\u62df\u673a  \u5c31\u53ef\u4ee5\u7ee7\u7eed\u542f\u52a8\u865a\u62df\u673a\u7cfb\u7edf\u4e86\u3002</p> <p></p> <p>\u7b49\u5f85\u6570\u79d2\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u542f\u52a8\u4e86\uff0c\u542f\u52a8\u4ee5\u540e \u9f20\u6807\u70b9\u51fb   Ubuntu  \u5b57\u6837\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u767b\u5f55\u5bf9\u8bdd\u6846\uff0c\u8f93\u5165  \u5bc6\u7801 ubuntu \u5373\u53ef\u767b\u5f55\u8fdb\u5165ubuntu\u7cfb\u7edf\u5185\u3002</p> <p>\u6ce8\u610f\uff1a </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>ubuntu\u9ed8\u8ba4\u9700\u8981\u8054\u7f51\uff0c\u5982\u679c\u4f60\u7684 Windows\u7535\u8111\u5df2\u7ecf\u53ef\u4ee5\u8bbf\u95eeInternet \u4e92\u8054\u7f51\uff0cubuntu\u7cfb\u7edf\u540e\u5c31\u4f1a\u81ea\u52a8\u5171\u4eab Windows\u7535\u8111\u7684\u7f51\u7edc \u8fdb\u884c\u8fde\u63a5internet \u7f51\u7edc\u3002</p>"},{"location":"DongshanPI-D1s/06-ConfigHostEnv/#_4","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li>\u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\u5305, \u9f20\u6807\u70b9\u51fb\u8fdb\u5165 ubuntu\u754c\u9762\u5185\uff0c\u952e\u76d8\u540c\u65f6 \u6309\u4e0b ctrl + alt + t \u4e09\u4e2a\u6309\u952e\u4f1a\u5feb\u901f\u5524\u8d77\uff0c\u7ec8\u7aef\u754c\u9762\uff0c\u5524\u8d77\u6210\u529f\u540e\uff0c\u5728\u7ec8\u7aef\u91cc\u9762\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305\u3002</li> </ul> <pre><code>sudo apt-get install -y  sed make binutils build-essential  gcc g++ bash patch gzip bzip2 perl  tar cpio unzip rsync file  bc wget python  cvs git mercurial rsync  subversion android-tools-mkbootimg vim  libssl-dev  android-tools-fastboot\n</code></pre> <p>\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684ubuntu\u865a\u62df\u673a \u7b2c\u4e00\u6b21\u542f\u52a8 \u65e0\u6cd5 \u901a\u8fc7 windows\u4e0b\u590d\u5236 \u547d\u4ee4 \u7c98\u8d34\u5230 ubuntu\u5185\uff0c\u5219\u9700\u8981\u5148\u624b\u6572 \u6267\u884c\u5982\u4e0b\u547d\u4ee4 \u5b89\u88c5\u4e00\u4e2a \u7528\u4e8e \u865a\u62df\u673a\u548c windows\u5171\u4eab\u526a\u5207\u677f\u7684\u5de5\u5177\u5305\u3002</p> <pre><code>sudo apt install open-vm-tools-desktop \n</code></pre> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u7535\u6e90\u6309\u94ae\uff0c\u91cd\u542fubuntu\u7cfb\u7edf\uff0c\u6216\u8005 \u76f4\u63a5\u8f93\u5165 sudo reboot \u547d\u4ee4\u8fdb\u884c\u91cd\u542f\u3002</p> <p>\u8fd9\u65f6\u5c31\u53ef\u4ee5 \u901a\u8fc7windows\u7aef\u5411ubuntu\u5185\u7c98\u8d34\u6587\u4ef6\uff0c\u6216\u8005\u62f7\u8d1d\u62f7\u51fa\u6587\u4ef6\u4e86\u3002</p> <p></p> <p>\u505a\u5b8c\u8fd9\u4e00\u6b65\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\uff0c\u83b7\u53d6\u6e90\u7801 \u5f00\u59cbRISC-V \u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u7684\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002</p>"},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#_1","title":"\u7b80\u4ecb","text":""},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#sdk","title":"\u83b7\u53d6sdk\u6e90\u7801","text":"<p>\u5f00\u59cb\u4e4b\u524d\u6211\u4eec\u9700\u8981\u5148\u83b7\u53d6 \u63d0\u524d\u51c6\u5907\u597d tina-sdk\u538b\u7f29\u5305\uff0c\u538b\u7f29\u5305\u5206\u4e3a\u56fd\u5185\u56fd\u5916\u4e24\u4e2a\u5b58\u653e\u4f4d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5927\u5c0f\u5927\u69829G\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u62f7\u8d1d\u5230\u63d0\u524d\u914d\u7f6e\u597dHost\u5f00\u53d1\u73af\u5883\u7684ubuntu\u7cfb\u7edf\u5185\uff0c\u7136\u540e\u53c2\u8003 \u4e0b\u8f7d\u7684\u76ee\u5f55\u5185\u7684README.txt\u6587\u6863 \u8fdb\u884c\u89e3\u538b\u7f29\u3002</p> <p>\u83b7\u53d6Tina-sdk V2.0\u6e90\u7801 \u767e\u5ea6\u7f51\u76d8\u83b7\u53d6\u5730\u5740 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/13uKlqDXImmMl9cgKc41tZg?pwd=qcw7 \u63d0\u53d6\u7801\uff1aqcw7 \u538b\u7f29\u5305\u8def\u5f84\u5728 Tina-SDK_DevelopLearningKits-V1/DongshanNezhaSTU-TinaV2.0-SDK \u62f7\u8d1d\u8fdbUbuntu\u7cfb\u7edf\u5185\uff0c\u5e76\u8fdb\u884c\u89e3\u538b\u7f29,\u89e3\u538b\u547d\u4ee4\u5728README\u91cc\u9762</p> <p>\u89e3\u538b\u7f29\u547d\u4ee4</p> <p><pre><code>cat tina-d1-h.tar.gz*| tar zx\n</code></pre> \u89e3\u538b\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u591a\u51fa\u6765\u4e00\u4e2a tina-d1-h\u7684\u6587\u4ef6\u5939</p> <pre><code>book@100ask:~/tina-d1-h$ ls  \nbuild  config  Config.in  device  dl  lichee  Makefile  out  package  prebuilt  README.md  rules.mk  scripts  target  TinaAddons  tmp  toolchain  tools\n</code></pre> <p>\u7531\u4e8e\u9ed8\u8ba4\u7684sdk\u5e76\u672a\u652f\u6301\u6b64\u5f00\u53d1\u677f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u652f\u6301\u6b64\u5f00\u53d1\u677f\u7684\u914d\u7f6e \u5355\u72ec\u62f7\u8d1d\u589e\u52a0\u5230DongshanPI-D1s sdk\u5185\uff0c\u9996\u5148clone\u6b64\u5f00\u53d1\u677f\u8865\u4e01\u4ed3\u5e93\uff0c\u7136\u540e\u5355\u72ec\u8986\u76d6\u3002</p> <pre><code>book@100ask:~$ git clone  https://gitee.com/weidongshan/DongshanPI-D1s_TinaSDK.git\nbook@100ask:~$ cp -rfvd  DongshanPI-D1s_TinaSDK/* tina-d1-h/\n</code></pre>"},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#_2","title":"\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305","text":""},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#ubuntu-1804","title":"ubuntu-18.04","text":"<p>\u8fd0\u884c\u73af\u5883\u914d\u7f6e\uff1a \u6b64\u7cfb\u7edf\u57fa\u4e8eubuntu18.04\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5728\u4e4b\u524d\u7684\u57fa\u7840\u4e4b\u4e0a\u8fd8\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5fc5\u8981\u4f9d\u8d56</p> <pre><code> sudo apt-get install -y  libncurses5-dev   u-boot-tools\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5f00\u59cb\u7f16\u8bd1\u64cd\u4f5c\u3002</p>"},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#_3","title":"\u6700\u5c0f\u7cfb\u7edf\u7f16\u8bd1\u70e7\u5199","text":""},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#spi-nor","title":"\u7f16\u8bd1spi nor\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<pre><code>book@ubuntu1804:~/tina-d1-h$ source build/envsetup.sh \nSetup env done! Please run lunch next.\nbook@ubuntu1804:~/tina-d1-h$ lunch \n\nYou're building on Linux\n\nLunch menu... pick a combo:\n     1. d1-h_nezha_min-tina\n     2. d1-h_nezha-tina\n     3. d1s_nezha_nand-tina\n     4. d1s_nezha_nor-tina\n     5. d1s_nezha_sd-tina\n     6. d1s_nezha-tina\n\nWhich would you like? [Default d1s_nezha]: 4\n============================================\nTINA_BUILD_TOP=/home/book/tina-d1-h\nTINA_TARGET_ARCH=riscv\nTARGET_PRODUCT=d1s_nezha_nor\nTARGET_PLATFORM=d1s\nTARGET_BOARD=d1s-nezha_nor\nTARGET_PLAN=nezha_nor\nTARGET_BUILD_VARIANT=tina\nTARGET_BUILD_TYPE=release\nTARGET_KERNEL_VERSION=5.4\nTARGET_UBOOT=u-boot-2018\nTARGET_CHIP=sun20iw1p1\n============================================\nno buildserver to clean\n[1] 21161\nbook@ubuntu1804:~/tina-d1-h$ \n</code></pre>"},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#spinor","title":"\u70e7\u5199SPINor\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u5728 out/d1s-nezha_nor/\u76ee\u5f55\u4e0b\u8f93\u51fa tina_d1s-nezha_nor_uart0_nor.img \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230Windows\u7cfb\u7edf\u4e0b\u4f7f\u7528 \u4f7f\u7528 \u5168\u5fd7\u5b98\u65b9\u7684  AllwinnertechPhoeniSuit \u8fdb\u884c\u70e7\u5199\u3002 \u8be6\u7ec6\u70e7\u5199\u6b65\u9aa4\u8bf7\uff0c\u8bf7\u53c2\u8003\u5de6\u4fa7 \u66f4\u65b0\u7cfb\u7edf \u9875\u9762\u3002</p>"},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#tfcard","title":"\u7f16\u8bd1TFCard\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<pre><code>book@ubuntu1804:~/tina-d1-h$ source build/envsetup.sh \nSetup env done! Please run lunch next.\nbook@ubuntu1804:~/tina-d1-h$ lunch \n\nYou're building on Linux\n\nLunch menu... pick a combo:\n     1. d1-h_nezha_min-tina\n     2. d1-h_nezha-tina\n     3. d1s_nezha_nand-tina\n     4. d1s_nezha_nor-tina\n     5. d1s_nezha_sd-tina\n     6. d1s_nezha-tina\n\nWhich would you like? [Default d1s_nezha]: 5\n============================================\nTINA_BUILD_TOP=/home/book/tina-d1-h\nTINA_TARGET_ARCH=riscv\nTARGET_PRODUCT=d1s_nezha_sd\nTARGET_PLATFORM=d1s\nTARGET_BOARD=d1s-nezha_sd\nTARGET_PLAN=nezha_sd\nTARGET_BUILD_VARIANT=tina\nTARGET_BUILD_TYPE=release\nTARGET_KERNEL_VERSION=5.4\nTARGET_UBOOT=u-boot-2018\nTARGET_CHIP=sun20iw1p1\n============================================\nclean buildserver\n[1] 3278\nbook@ubuntu1804:~/tina-d1-h$ \n</code></pre>"},{"location":"DongshanPI-D1s/07-TinaSDK_DevelopmentGuide/#tf-card","title":"\u70e7\u5199TF Card\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u5728 out/d1s-nezha_sd/\u76ee\u5f55\u4e0b\u8f93\u51fa tina_d1s-nezha_sd_uart0.img \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230Windows\u7cfb\u7edf\u4e0b\u4f7f\u7528 PhoenixCard\u70e7\u5199\uff0c\u70e7\u5199\u6210\u529f\u4e4b\u540e\u63d2\u5230\u5f00\u53d1\u677f\u4e0a\uff0c\u8bbe\u7f6e\u597d\u62e8\u7801\u5f00\u5173\u5373\u53ef\u542f\u52a8\u3002 \u8bf7\u53c2\u8003\u5de6\u4fa7  \u66f4\u65b0\u7cfb\u7edf \u9875\u9762\u3002</p>"},{"location":"DongshanPI-D1s/08-TinaSDK_BuildBootloader/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efaBootloader","text":"<ul> <li>DongshanPI-D1s\u5f00\u53d1\u677f\uff0cBootloader\u75314\u90e8\u5206\u7ec4\u6210\uff0c \u7b2c\u4e00\u90e8\u5206\u662f boot0 \u9636\u6bb5\uff0c\u7528\u4e8e\u521d\u59cb\u5316CPU DDR UART \u65f6\u949f\u7b49\u4e00\u4e9b\u5fc5\u8981\u5916\u8bbe\u548c\u5f15\u811a\u5206\u914d\uff0c\u4e4b\u540e\u8fdb\u5165\u7b2c\u4e8c\u90e8\u5206\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f opensbi  uboot  board.dtb \u8fd9\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u4e3a\u4e00\u4e2a boot_package.fex \u6587\u4ef6\u3002</li> <li>\u6240\u4ee5Bootloader\u7684\u6574\u4f53\u7684\u542f\u52a8\u6d41\u7a0b\u662f\uff0cboot0\u2192opensbi\u2192u-boot\u2192board.dtb</li> </ul>"},{"location":"DongshanPI-D1s/08-TinaSDK_BuildBootloader/#_1","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e00\u90e8\u5206","text":""},{"location":"DongshanPI-D1s/08-TinaSDK_BuildBootloader/#_2","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e8c\u90e8\u5206","text":""},{"location":"DongshanPI-D1s/08-TinaSDK_BuildBootloader/#uboot","title":"\u5355\u72ec\u7f16\u8bd1 uboot","text":"<ul> <li>\u5355\u72ec\u7f16\u8bd1 uboot\u9636\u6bb5 <pre><code>book@100ask:~/tina-v853$ source build/envsetup.sh\nbook@100ask:~/tina-v853$ lunch\n2 #\u8f93\u5165\u6570\u5b57\u9009\u62e9\u5bf9\u5e94\u5f00\u53d1\u677f\nbook@100ask:~/tina-v853$muboot\n</code></pre></li> </ul> <p>\u7f16\u8bd1uboot\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\u81ea\u52a8\u66f4\u65b0uboot binary\u5230TinaSDK/target/allwinner/$(BOARD)-common/bin/</p> <pre><code>mboot\n</code></pre>"},{"location":"DongshanPI-D1s/09-TinaSDK_BuildLinuxKernel/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1Kernel","text":""},{"location":"DongshanPI-D1s/09-TinaSDK_BuildLinuxKernel/#_1","title":"\u5355\u72ec\u914d\u7f6e","text":"<ul> <li>\u4fee\u6539\u5185\u6838\u914d\u7f6e <pre><code>book@100ask:~/tina-v853$ croot\nbook@100ask:~/tina-v853$ make kernel_menuconfig\n</code></pre></li> </ul> <p>\u53ef\u4ee5\u5728\u4e0a\u56fe\u7684\u754c\u9762\u5185\u4fee\u6539\u5185\u6838\u914d\u7f6e\u3002</p> <ul> <li>\u7f16\u8bd1\u6253\u5305\u540e\u4f1a\u5728out/v851s-perf1\u91cc\u9762\u751f\u6210\u6700\u7ec8\u7684\u955c\u50cf <pre><code>book@100ask:~/tina-v853$ make\nbook@100ask:~/tina-v853$ pack\n</code></pre></li> </ul>"},{"location":"DongshanPI-D1s/10-TinaSDK_BuildRootfs/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":"<p>Tina\u9ed8\u8ba4\u60c5\u51b5\u662f\u7f16\u8bd1\u6253\u5305\u5b8c\u6210\u5728tina-v853/out/v851s-perf1\u4f1a\u751f\u6210\u5bf9\u5e94\u7684rootfs.img</p>"},{"location":"DongshanPI-D1s/10-TinaSDK_BuildRootfs/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6eBusyBox","text":"<p>tina\u9ed8\u8ba4\u662fBusyBox </p> <pre><code>book@100ask:~/tina-v853$ make\nbook@100ask:~/tina-v853$ pack\n</code></pre>"},{"location":"DongshanPI-D1s/10-TinaSDK_BuildRootfs/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>make clean\n</code></pre>"},{"location":"DongshanPI-D1s/11-Tina-SDK_DevelopmentGuide/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"DongshanPI-D1s/11-Tina-SDK_DevelopmentGuide/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li> <p>\u8bbf\u95ee https://d1.docs.aw-ol.com/study/study_1tina/</p> </li> <li> <p>\u4f7f\u7528\u6211\u4eec\u63d0\u524d\u6574\u7406\u597d\u7684\u8d44\u6599\u5149\u76d8 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/13uKlqDXImmMl9cgKc41tZg?pwd=qcw7  \u63d0\u53d6\u7801\uff1aqcw7 </p> </li> </ul>"},{"location":"DongshanPI-D1s/12-1_TinaSDK_SupportWifiBluetooth/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanPI-D1s/12-1_TinaSDK_SupportWifiBluetooth/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6ebusybox","text":"<pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  busybox-menuconfig\n</code></pre>"},{"location":"DongshanPI-D1s/12-1_TinaSDK_SupportWifiBluetooth/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>rm -rf  output/target;    find output/build/ -name .stamp_target_installed | xargs rm ; make\n</code></pre>"},{"location":"DongshanPI-D1s/13-1_TinaSDK_SupportMIPICamera/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanPI-D1s/13-1_TinaSDK_SupportMIPICamera/#buildroot-sdkrootfs_1","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanPI-D1s/13-1_TinaSDK_SupportMIPICamera/#buildroot-sdkrootfs_2","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanPI-D1s/13-1_TinaSDK_SupportMIPICamera/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6ebusybox","text":"<pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  busybox-menuconfig\n</code></pre>"},{"location":"DongshanPI-D1s/13-1_TinaSDK_SupportMIPICamera/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>rm -rf  output/target;    find output/build/ -name .stamp_target_installed | xargs rm ; make\n</code></pre>"},{"location":"DongshanPI-D1s/14-1_TinaSDK_SupportMIPIDisplay/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanPI-D1s/14-1_TinaSDK_SupportMIPIDisplay/#buildroot-sdkrootfs_1","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanPI-D1s/14-1_TinaSDK_SupportMIPIDisplay/#buildroot-sdkrootfs_2","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"DongshanPI-D1s/14-1_TinaSDK_SupportMIPIDisplay/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6ebusybox","text":"<pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  busybox-menuconfig\n</code></pre>"},{"location":"DongshanPI-D1s/14-1_TinaSDK_SupportMIPIDisplay/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>rm -rf  output/target;    find output/build/ -name .stamp_target_installed | xargs rm ; make\n</code></pre>"},{"location":"DongshanPi-One/01-BoardIntroduction/","title":"\u4e3b\u677f\u7b80\u4ecb","text":"<p>[ \u4e2d\u6587 | English ]</p> <ul> <li>\u4e1c\u5c71PI\u58f9\u53f7\u95ee\u9898\u53cd\u9988\u4ea4\u6d41\u533a https://github.com/DongshanPI/Dongshanpi-Docs/discussions/2</li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction/#pi-","title":"\u4e1c\u5c71Pi\u58f9\u53f7-\u5f00\u53d1\u677f","text":"<p>\u4e1c\u5c71Pi\u58f9\u53f7\u5f00\u53d1\u677f\u662f\u8054\u5408\u82af\u7247\u539f\u5382\u661f\u5bb8\u79d1\u6280\u4e00\u8d77\u63a8\u7684\u6700\u5c0fLinux\u5f00\u53d1\u677f\uff0c\u4f7f\u7528\u7684\u662fSSD202D\u4e3b\u63a7\u82af\u7247\uff0c\u6700\u5c0f\u5f00\u53d1\u677f\u63a5\u53e3\u53ea\u4fdd\u7559\u4e86\u51e0\u4e2a\u5e38\u89c1\u63a5\u53e3 \u5305\u542bLED\u706f \u6309\u952e FPCRGB\u663e\u793a\u63a5\u53e3 \u4ee5\u53ca\u4e00\u8defTYPE C USBHOST\u63a5\u53e3 \u8fd8\u6709\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u4f9b\u7535\u548c\u8c03\u8bd5\u4e8c\u5408\u4e00\u7684 TypeC\u63a5\u53e3\uff0c\u80cc\u9762\u540c\u65f6\u589e\u52a0\u4e86SD\u5361\u5361\u69fd \u4e5f\u4fdd\u7559\u4e86\u4e13\u95e8\u7684\u70e7\u5f55\u63a5\u53e3\u3002</p> <ul> <li> <p>\u661f\u5bb8\u79d1\u6280( SigmaStar)\u6210\u7acb\u4e8e2017\u5e74\uff0c\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u4eba\u5de5\u667a\u80fd\u89c6\u89c9\u7cfb\u7edf\u82af\u7247\u9886\u57df\u7684\u79d1\u6280\u516c\u53f8\uff0c\u4ea7\u54c1\u5728\u667a\u80fd\u5b89\u9632\u3001\u667a\u80fd\u8f66\u8f7d\u3001\u667a\u80fd\u7269\u8054\u7b49\u591a\u4e2a\u7ec6\u5206\u9886\u57df\u5168\u7403\u9886\u5148\u3002</p> </li> <li> <p>\u521b\u59cb\u56e2\u961f\u53d1\u6e90\u4e8e\u6668\u661f\u534a\u5bfc\u4f53\u9ad8\u7ba1\u56e2\u961f\uff08Mstar\uff0c\u663e\u793a\u53ca\u7535\u89c6\u82af\u7247\u9886\u57df\u5168\u7403NO.1\uff0c\u4e09\u661f\u3001LG\u3001TCL\u3001\u534e\u661f\u5149\u7535\u3001\u5eb7\u4f73\u3001\u6d77\u4fe1\u3001\u4eac\u4e1c\u65b9\u7b49\u516c\u53f8\u6700\u5927\u82af\u7247\u4f9b\u5e94\u5546\uff0c\u5df2\u4e0e\u8054\u53d1\u79d1\u5408\u5e76\uff09\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction/#_1","title":"\u786c\u4ef6\u63cf\u8ff0","text":"<ul> <li> <p>\u6700\u5c0f\u5f00\u53d1\u677f\u89c4\u683c</p> <p>\u5f00\u53d1\u677f\u5927\u5c0f\u53c2\u8003\u4e86\u6807\u51c6\u7684MINI PCI-E\u89c4\u683c\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u9488\u5bf9\u82af\u7247\u548c\u5668\u4ef6\u505a\u4e86\u76f8\u5e94\u7684\u8c03\u6574\uff0c\u5927\u6982\u5c3a\u5bf8\u662f\u5bbd3.8cm x \u957f5.1cm\u3002</p> </li> <li> <p>\u6700\u5c0f\u5f00\u53d1\u677f\u5668\u4ef6\u5e03\u5c40</p> </li> </ul> <p></p> <ul> <li>\u6700\u5c0f\u5f00\u53d1\u677f\u89c4\u683c\u53c2\u6570</li> <li>\u4e3b\u63a7\u82af\u7247\uff1a \u661f\u8fb0\u79d1\u6280 SSD202D \u5185\u7f6e128MB DDR \u652f\u6301H264/H265\u89e3\u7801 \u652f\u6301MJPG\u7f16\u7801\u3002</li> <li>\u5b58\u50a8\uff1a\u677f\u8f7d128MB SPI NAND FLASH\u82af\u7247 \u4ee5\u53ca\u4e13\u95e8\u7684SD card\u63a5\u53e3</li> <li>LED\u706f\uff1a\u7ea2\u8272x1 \u8868\u793apwr  \u84dd\u8272 \u7eff\u8272 \u5747\u4e3a\u7528\u6237\u706f\u3002</li> <li>Key\uff1a\u786c\u4ef6\u590d\u4f4d\u6309\u952ex1  \u7528\u6237\u6309\u952ex1</li> <li>\u663e\u793a\uff1a50Pin FPC RGB888\u663e\u793a\u8f93\u51fa</li> <li>\u4f9b\u7535&amp;\u8c03\u8bd5\uff1a\u677f\u8f7d\u4e13\u7528USB\u8f6cTTL\u82af\u7247\u540c\u65f6\u7ed9\u6574\u4e2a\u677f\u5b50\u4f9b\u7535\u3002</li> <li>usbHost:  TypeC\u63a5\u53e3\u7684USB HOST \u652f\u6301\u8fde\u63a5\u652f\u6301USB\u534f\u8bae\u7684\u8bbe\u5907\u3002</li> <li> <p>\u6269\u5c55\u63a5\u53e3\uff1a \u4f7f\u7528MINI-PCI-E\u63a5\u53e3 \u7528\u4e8e\u8fde\u63a5\u5e95\u677f\u3002</p> </li> <li> <p>\u4e1c\u5c71Pi\u58f9\u53f7 \u5f00\u53d1\u677f\u539f\u7406\u56fe\u6587\u4ef6\uff1ahttps://forums.100ask.net/t/topic/6615</p> </li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction/#_2","title":"\u5f00\u53d1\u8d44\u6e90\u63cf\u8ff0","text":""},{"location":"DongshanPi-One/01-BoardIntroduction/#cpu","title":"\u914d\u5957CPU\u5f00\u53d1\u624b\u518c","text":"<p>\u5404\u4f4d\u540c\u5b66 \u671f\u5f85\u5df2\u4e45\u7684\u4e1c\u5c71PI\u58f9\u53f7 (SSD202D)\u90e8\u5206\u5e38\u7528\u5916\u8bbeCPU\u5f00\u53d1\u624b\u518c\u5df2\u7ecf\u516c\u5f00\u51fa\u6765\u4e86\uff0c\u91cc\u9762\u5305\u542b\u5bc4\u5b58\u5668\u5730\u5740\u53ca\u63cf\u8ff0\u54e6\uff0c\u5927\u5bb6\u5feb\u6765\u4e0b\u8f7d\u9605\u8bfb\u3002 \u83b7\u53d6\u8fde\u63a5\uff1a\uff1ahttps://forums.100ask.net/t/topic/6615 \u91cc\u9762\u5305\u542b</p> <ul> <li>SSD202D_CHIPTOP_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_CLKGEN_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_EMAC_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_GPIO_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_GPI_INT_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_I2C_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_INTR_CPUINT_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_INTR_CTRL_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_IR_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_PADTOP_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_PWM_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_RTC_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_SAR_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_SPI_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_TIMER_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_UART &amp; FUART_\u767e\u95ee\u7f51.pdf</li> <li>SSD202D_WDT_\u767e\u95ee\u7f51.pdf</li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction/#sdk","title":"\u82af\u7247\u539f\u5382\u914d\u5957SDK","text":"<p>\u7cfb\u7edf\u7248\u672c\u4ecb\u7ecd,\u76ee\u524d\u6574\u5957SDK\u57fa\u4e8e\u661f\u8fb0\u79d1\u6280\u82af\u7247\u539f\u5382\u91ca\u653e\u51fa\u6765\u7684 TAKOYAKI_DLC00V030 \u7248\u672c\u8fdb\u884c\u9002\u914d\u8bb2\u89e3\u3002</p> \u540d\u79f0 \u4ecb\u7ecd boot \u5b58\u653e\u9002\u914d\u597d\u7684uboot\u7684\u6e90\u7801\uff0c\u8be6\u89c1\u5de6\u4fa7\u7f16\u8bd1\u70e7\u5199Boot kernel \u5b58\u653e\u9002\u914d\u597d\u7684linux kernel\u7684\u6e90\u7801\uff0c\u8be6\u89c1\u5de6\u4fa7\u7f16\u8bd1\u70e7\u5199kernel project \u4e3b\u8981\u7528\u4e8e\u6253\u5305\u53ef\u4f9b\u5347\u7ea7\u7684image\u5305\uff0c\u8be6\u89c1\u5de6\u4fa7\u7f16\u8bd1\u70e7\u5199\u7cfb\u7edf sdk \u5b58\u653e\u4e00\u4e9b\u7b80\u5355\u7684demo code\uff0c\u8be6\u89c1\u5de6\u4fa7 \u5e94\u7528Demo\u793a\u4f8b <ul> <li> <p>\u82af\u7247\u539f\u5382SDK\u7684\u4f18\u52bf: </p> <p>\u8fd9\u5957\u6846\u67b6\u662f\u661f\u8fb0\u79d1\u6280\u9488\u5bf9\u4e8e\u4ea7\u54c1\u65b9\u6848 \u9879\u76ee\u65b9\u6848\u7b49\u4e13\u95e8\u8fdb\u884c\u8c03\u6574\u8fc7\u7684sdk \u91cc\u9762\u5305\u542b\u4e86\u8bb8\u591a\u5b9e\u9645\u4ea7\u54c1\u4e2d\u7684demo\u793a\u4f8b\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5feb\u901f\u843d\u5730\u4ea7\u54c1 \u53ef\u4ee5\u4f7f\u7528\u6b64\u5957sdk\u3002</p> </li> <li> <p>\u82af\u7247\u539f\u5382SDK\u7684\u52a3\u52bf</p> <p>\u7531\u4e8e\u8fd9\u5957SDK\u662f\u4e3a\u4e86\u505a\u4ea7\u54c1\uff0c\u6240\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e86\u5f88\u591a\u6846\u67b6\u6027\u7684\u6539\u52a8\uff0c\u548c\u6211\u4eec\u5e38\u89c1\u7684Linux\u5f00\u53d1\u6709\u4e00\u5b9a\u7684\u533a\u522b\uff0c\u9700\u8981\u914d\u5408\u7740\u539f\u5382\u7684\u5f00\u53d1\u6587\u6863\u624d\u53ef\u4ee5\u4f7f\u7528\u3002</p> </li> <li> <p>\u8be6\u7ec6\u7684\u83b7\u53d6\u53ca\u5f00\u53d1\u65b9\u5f0f\u8bf7\u53c2\u8003\u540e\u7eed \u539f\u5382SDK\u5f00\u53d1\u5165\u95e8 \u7ae0\u8282\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction/#linuxsdk","title":"Linux\u793e\u533a\u7248\u672cSDK","text":"<p>\u793e\u533a\u7248\u672c\u4f7f\u7528\u7684\u662f\u57fa\u4e8e \u4e3b\u7ebfLinuxKernel Uboot \u4ee5\u53caBuildroot\u8fdb\u884c\u5f00\u53d1\u3002</p> <ul> <li> <p>\u793e\u533a\u7248\u672c\u4f18\u52bf</p> <p>\u975e\u5e38\u65b9\u4fbf\u7528\u6765\u5b66\u4e60Linux\u57fa\u7840\u77e5\u8bc6\uff0c\u719f\u6089\u6574\u5957\u5f00\u53d1\u6d41\u7a0b\uff0c\u4e14\u7b26\u5408Linux\u5f00\u53d1\u6807\u51c6 \u6709\u53ca\u5176\u4e30\u5bcc\u7684\u793e\u533a\u53c2\u8003\u8d44\u6599\u4e66\u7c4d\u3002</p> </li> <li> <p>\u793e\u533a\u7248\u672c\u52a3\u52bf</p> <p>\u56e0\u4e3a\u5b58\u5728\u5f88\u591a\u4ea7\u54c1\u5185\u7528\u4e0d\u5230\u7684\u7ec4\u4ef6\u9a71\u52a8\uff0c\u5e76\u4e14\u6bd4\u8f83\u6d88\u8017\u8d44\u6e90\uff0c\u6240\u4ee5\u4e0d\u592a\u9002\u5408\u7528\u6765\u505a\u4ea7\u54c1\u3002</p> </li> <li> <p>\u8be6\u7ec6\u7684\u83b7\u53d6\u53ca\u5f00\u53d1\u65b9\u5f0f\u8bf7\u53c2\u8003\u5de6\u4fa7 \u793e\u533a\u7248\u672c\u5f00\u53d1 \u7ae0\u8282\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction_EN/","title":"01 BoardIntroduction EN","text":"<p>[ \u4e2d\u6587 | English ]</p>"},{"location":"DongshanPi-One/01-BoardIntroduction_EN/#dongshanpi-one-boards","title":"DongshanPi-ONE Boards","text":"<p>\u4e1c\u5c71Pi\u58f9\u53f7\u5f00\u53d1\u677f\u662f\u8054\u5408\u82af\u7247\u539f\u5382\u661f\u5bb8\u79d1\u6280\u4e00\u8d77\u63a8\u7684\u6700\u5c0fLinux\u5f00\u53d1\u677f\uff0c\u4f7f\u7528\u7684\u662fSSD202D\u4e3b\u63a7\u82af\u7247\uff0c\u6700\u5c0f\u5f00\u53d1\u677f\u63a5\u53e3\u53ea\u4fdd\u7559\u4e86\u51e0\u4e2a\u5e38\u89c1\u63a5\u53e3 \u5305\u542bLED\u706f \u6309\u952e FPCRGB\u663e\u793a\u63a5\u53e3 \u4ee5\u53ca\u4e00\u8defTYPE C USBHOST\u63a5\u53e3 \u8fd8\u6709\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u4f9b\u7535\u548c\u8c03\u8bd5\u4e8c\u5408\u4e00\u7684 TypeC\u63a5\u53e3\uff0c\u80cc\u9762\u540c\u65f6\u589e\u52a0\u4e86SD\u5361\u5361\u69fd \u4e5f\u4fdd\u7559\u4e86\u4e13\u95e8\u7684\u70e7\u5f55\u63a5\u53e3\u3002</p> <ul> <li> <p>\u661f\u5bb8\u79d1\u6280( SigmaStar)\u6210\u7acb\u4e8e2017\u5e74\uff0c\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u4eba\u5de5\u667a\u80fd\u89c6\u89c9\u7cfb\u7edf\u82af\u7247\u9886\u57df\u7684\u79d1\u6280\u516c\u53f8\uff0c\u4ea7\u54c1\u5728\u667a\u80fd\u5b89\u9632\u3001\u667a\u80fd\u8f66\u8f7d\u3001\u667a\u80fd\u7269\u8054\u7b49\u591a\u4e2a\u7ec6\u5206\u9886\u57df\u5168\u7403\u9886\u5148\u3002</p> </li> <li> <p>\u521b\u59cb\u56e2\u961f\u53d1\u6e90\u4e8e\u6668\u661f\u534a\u5bfc\u4f53\u9ad8\u7ba1\u56e2\u961f\uff08Mstar\uff0c\u663e\u793a\u53ca\u7535\u89c6\u82af\u7247\u9886\u57df\u5168\u7403NO.1\uff0c\u4e09\u661f\u3001LG\u3001TCL\u3001\u534e\u661f\u5149\u7535\u3001\u5eb7\u4f73\u3001\u6d77\u4fe1\u3001\u4eac\u4e1c\u65b9\u7b49\u516c\u53f8\u6700\u5927\u82af\u7247\u4f9b\u5e94\u5546\uff0c\u5df2\u4e0e\u8054\u53d1\u79d1\u5408\u5e76\uff09\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction_EN/#_1","title":"\u786c\u4ef6\u63cf\u8ff0","text":"<ul> <li> <p>\u6700\u5c0f\u5f00\u53d1\u677f\u89c4\u683c</p> <p>\u5f00\u53d1\u677f\u5927\u5c0f\u53c2\u8003\u4e86\u6807\u51c6\u7684MINI PCI-E\u89c4\u683c\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u9488\u5bf9\u82af\u7247\u548c\u5668\u4ef6\u505a\u4e86\u76f8\u5e94\u7684\u8c03\u6574\uff0c\u5927\u6982\u5c3a\u5bf8\u662f\u5bbd3.8cm x \u957f5.1cm\u3002</p> </li> <li> <p>\u6700\u5c0f\u5f00\u53d1\u677f\u5668\u4ef6\u5e03\u5c40</p> </li> </ul> <p></p> <ul> <li>\u6700\u5c0f\u5f00\u53d1\u677f\u89c4\u683c\u53c2\u6570</li> <li>\u4e3b\u63a7\u82af\u7247\uff1a \u661f\u8fb0\u79d1\u6280 SSD202D \u5185\u7f6e128MB DDR \u652f\u6301H264/H265\u89e3\u7801 \u652f\u6301MJPG\u7f16\u7801\u3002</li> <li>\u5b58\u50a8\uff1a\u677f\u8f7d128MB SPI NAND FLASH\u82af\u7247 \u4ee5\u53ca\u4e13\u95e8\u7684SD card\u63a5\u53e3</li> <li>LED\u706f\uff1a\u7ea2\u8272x1 \u8868\u793apwr  \u84dd\u8272 \u7eff\u8272 \u5747\u4e3a\u7528\u6237\u706f\u3002</li> <li>Key\uff1a\u786c\u4ef6\u590d\u4f4d\u6309\u952ex1  \u7528\u6237\u6309\u952ex1</li> <li>\u663e\u793a\uff1a50Pin FPC RGB888\u663e\u793a\u8f93\u51fa</li> <li>\u4f9b\u7535&amp;\u8c03\u8bd5\uff1a\u677f\u8f7d\u4e13\u7528USB\u8f6cTTL\u82af\u7247\u540c\u65f6\u7ed9\u6574\u4e2a\u677f\u5b50\u4f9b\u7535\u3002</li> <li>usbHost:  TypeC\u63a5\u53e3\u7684USB HOST \u652f\u6301\u8fde\u63a5\u652f\u6301USB\u534f\u8bae\u7684\u8bbe\u5907\u3002</li> <li> <p>\u6269\u5c55\u63a5\u53e3\uff1a \u4f7f\u7528MINI-PCI-E\u63a5\u53e3 \u7528\u4e8e\u8fde\u63a5\u5e95\u677f\u3002</p> </li> <li> <p>\u4e1c\u5c71Pi\u58f9\u53f7 \u5f00\u53d1\u677f\u539f\u7406\u56fe\u6587\u4ef6\uff1ahttps://cowtransfer.com/s/9b745ce262544c</p> </li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction_EN/#_2","title":"\u5f00\u53d1\u8d44\u6e90\u63cf\u8ff0","text":""},{"location":"DongshanPi-One/01-BoardIntroduction_EN/#sdk","title":"\u82af\u7247\u539f\u5382\u914d\u5957SDK","text":"<p>\u7cfb\u7edf\u7248\u672c\u4ecb\u7ecd,\u76ee\u524d\u6574\u5957SDK\u57fa\u4e8e\u661f\u8fb0\u79d1\u6280\u82af\u7247\u539f\u5382\u91ca\u653e\u51fa\u6765\u7684 TAKOYAKI_DLC00V030 \u7248\u672c\u8fdb\u884c\u9002\u914d\u8bb2\u89e3\u3002</p> \u540d\u79f0 \u4ecb\u7ecd boot \u5b58\u653e\u9002\u914d\u597d\u7684uboot\u7684\u6e90\u7801\uff0c\u8be6\u89c1\u5de6\u4fa7\u7f16\u8bd1\u70e7\u5199Boot kernel \u5b58\u653e\u9002\u914d\u597d\u7684linux kernel\u7684\u6e90\u7801\uff0c\u8be6\u89c1\u5de6\u4fa7\u7f16\u8bd1\u70e7\u5199kernel project \u4e3b\u8981\u7528\u4e8e\u6253\u5305\u53ef\u4f9b\u5347\u7ea7\u7684image\u5305\uff0c\u8be6\u89c1\u5de6\u4fa7\u7f16\u8bd1\u70e7\u5199\u7cfb\u7edf sdk \u5b58\u653e\u4e00\u4e9b\u7b80\u5355\u7684demo code\uff0c\u8be6\u89c1\u5de6\u4fa7 \u5e94\u7528Demo\u793a\u4f8b <ul> <li> <p>\u82af\u7247\u539f\u5382SDK\u7684\u4f18\u52bf: </p> <p>\u8fd9\u5957\u6846\u67b6\u662f\u661f\u8fb0\u79d1\u6280\u9488\u5bf9\u4e8e\u4ea7\u54c1\u65b9\u6848 \u9879\u76ee\u65b9\u6848\u7b49\u4e13\u95e8\u8fdb\u884c\u8c03\u6574\u8fc7\u7684sdk \u91cc\u9762\u5305\u542b\u4e86\u8bb8\u591a\u5b9e\u9645\u4ea7\u54c1\u4e2d\u7684demo\u793a\u4f8b\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5feb\u901f\u843d\u5730\u4ea7\u54c1 \u53ef\u4ee5\u4f7f\u7528\u6b64\u5957sdk\u3002</p> </li> <li> <p>\u82af\u7247\u539f\u5382SDK\u7684\u52a3\u52bf</p> <p>\u7531\u4e8e\u8fd9\u5957SDK\u662f\u4e3a\u4e86\u505a\u4ea7\u54c1\uff0c\u6240\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e86\u5f88\u591a\u6846\u67b6\u6027\u7684\u6539\u52a8\uff0c\u548c\u6211\u4eec\u5e38\u89c1\u7684Linux\u5f00\u53d1\u6709\u4e00\u5b9a\u7684\u533a\u522b\uff0c\u9700\u8981\u914d\u5408\u7740\u539f\u5382\u7684\u5f00\u53d1\u6587\u6863\u624d\u53ef\u4ee5\u4f7f\u7528\u3002</p> </li> <li> <p>\u8be6\u7ec6\u7684\u83b7\u53d6\u53ca\u5f00\u53d1\u65b9\u5f0f\u8bf7\u53c2\u8003\u540e\u7eed \u539f\u5382SDK\u5f00\u53d1\u5165\u95e8 \u7ae0\u8282\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/01-BoardIntroduction_EN/#linuxsdk","title":"Linux\u793e\u533a\u7248\u672cSDK","text":"<p>\u793e\u533a\u7248\u672c\u4f7f\u7528\u7684\u662f\u57fa\u4e8e \u4e3b\u7ebfLinuxKernel Uboot \u4ee5\u53caBuildroot\u8fdb\u884c\u5f00\u53d1\u3002</p> <ul> <li> <p>\u793e\u533a\u7248\u672c\u4f18\u52bf</p> <p>\u975e\u5e38\u65b9\u4fbf\u7528\u6765\u5b66\u4e60Linux\u57fa\u7840\u77e5\u8bc6\uff0c\u719f\u6089\u6574\u5957\u5f00\u53d1\u6d41\u7a0b\uff0c\u4e14\u7b26\u5408Linux\u5f00\u53d1\u6807\u51c6 \u6709\u53ca\u5176\u4e30\u5bcc\u7684\u793e\u533a\u53c2\u8003\u8d44\u6599\u4e66\u7c4d\u3002</p> </li> <li> <p>\u793e\u533a\u7248\u672c\u52a3\u52bf</p> <p>\u56e0\u4e3a\u5b58\u5728\u5f88\u591a\u4ea7\u54c1\u5185\u7528\u4e0d\u5230\u7684\u7ec4\u4ef6\u9a71\u52a8\uff0c\u5e76\u4e14\u6bd4\u8f83\u6d88\u8017\u8d44\u6e90\uff0c\u6240\u4ee5\u4e0d\u592a\u9002\u5408\u7528\u6765\u505a\u4ea7\u54c1\u3002</p> </li> <li> <p>\u8be6\u7ec6\u7684\u83b7\u53d6\u53ca\u5f00\u53d1\u65b9\u5f0f\u8bf7\u53c2\u8003\u5de6\u4fa7 \u793e\u533a\u7248\u672c\u5f00\u53d1 \u7ae0\u8282\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/","title":"\u6240\u6709\u914d\u5957\u8d44\u6e90","text":""},{"location":"DongshanPi-One/02-SupportingResources/#-comake","title":"\u661f\u5bb8\u79d1\u6280-CoMake\u5f00\u53d1\u8005\u793e\u533a","text":""},{"location":"DongshanPi-One/02-SupportingResources/#comake","title":"CoMake\u5f00\u53d1\u8005\u793e\u533a\u9996\u9875","text":"<p>\u661f\u5bb8\u79d1\u6280\u9488\u5bf9\u4e2a\u4eba\u5f00\u53d1\u8005\u53ca\u4e2d\u5c0f\u4f01\u4e1a\u4e13\u95e8\u63a8\u51fa\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u7ad9\u70b9 comake.online \uff0c\u5728\u8fd9\u4e2a\u7ad9\u70b9\u91cc\u53ef\u4ee5\u67e5\u770b\u661f\u5bb8\u79d1\u6280\u6240\u6709\u7684 \u82af\u7247\u4ecb\u7ecd \u914d\u5957\u7684\u5f00\u53d1\u6587\u6863 \u4ee5\u53ca\u5f00\u53d1\u793e\u533a\u548c\u5b9e\u65f6\u4ea4\u6d41\u793e\u533a\u3002</p> <ul> <li>\u7f51\u5740\u9875\u9762:  https://comake.online/</li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/#_2","title":"\u4ea7\u54c1\u4e2d\u5fc3","text":"<p>\u4e3b\u8981\u82af\u7247\u89c4\u683c\u7b80\u4ecb\uff0c\u7b80\u5355\u89c4\u683c\u4e66\u4e0b\u8f7d</p> <ul> <li>\u7f51\u5740\u9875\u9762: https://comake.online/index.php?p=products_list&amp;lanmu=2</li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/#sdk","title":"SDK\u8d44\u6599\u5305\u4e0b\u8f7d","text":"<ul> <li>\u7f51\u5740\u9875\u9762: https://comake.online/index.php?p=down_list&amp;lanmu=4&amp;c_id=6&amp;id=7</li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/#_3","title":"\u6280\u672f\u8bba\u575b","text":"<ul> <li>\u7f51\u5740\u9875\u9762: https://dev.comake.online/forum.php</li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/#_4","title":"\u7ef4\u57fa\u6559\u7a0b","text":"<p>SDK\u5bf9\u5e94\u7684\u5404\u529f\u80fd\u6a21\u5757\u4f7f\u7528\u8bf4\u660e\u6587\u6863\u3002</p> <ul> <li>\u7f51\u5740\u9875\u9762: https://comake.online/index.php?p=doc</li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/#comake_1","title":"CoMake\u5b9e\u65f6\u4ea4\u6d41\u793e\u533a","text":"<p>\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u8fd9\u91cc\u63d0\u95ee\u95ee\u9898\uff0c\u67e5\u8be2\u5176\u4ed6\u4eba\u54a8\u8be2\u8fc7\u7684\u95ee\u9898\u3002</p> <ul> <li>\u7f51\u5740\u9875\u9762: https://we.comake.online/</li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/#_5","title":"\u914d\u5957\u7684\u6269\u5c55\u786c\u4ef6","text":""},{"location":"DongshanPi-One/02-SupportingResources/#_6","title":"\u4e13\u95e8\u5e95\u677f","text":"<ul> <li>\u5e95\u677f\u539f\u7406\u56fe\u6587\u4ef6  https://forums.100ask.net/t/topic/6615</li> <li>\u5b8c\u5168\u516c\u5f00\u7248\u672c\u5e95\u677f\u6587\u4ef6</li> </ul>"},{"location":"DongshanPi-One/02-SupportingResources/#_7","title":"\u4e13\u95e8\u6a21\u5757","text":"<ul> <li>\u901a\u7528\u6a21\u5757</li> <li>7\u5bf8\u663e\u793a\u5c4f</li> </ul>"},{"location":"DongshanPi-One/03-QuickStart/","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":"<p>\u5982\u679c\u60a8\u611f\u89c9\u8ddf\u7740\u6587\u6863\u4e0d\u77e5\u9053\u600e\u4e48\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6211\u4eec\u63d0\u524d\u5f55\u5236\u597d\u7684\u624b\u628a\u624b\u6559\u5b66\u89c6\u9891\u3002</p>"},{"location":"DongshanPi-One/03-QuickStart/#_2","title":"\u4e0a\u7535\u542f\u52a8\u7cfb\u7edf","text":""},{"location":"DongshanPi-One/03-QuickStart/#1","title":"1. \u8fde\u63a5\u4e32\u53e3\u7ebf","text":"<p>\u5c06\u914d\u5957\u7684TypeC\u7ebf\u4e00\u6bb5\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\u7684\u4e32\u53e3/\u4f9b\u7535\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\u677f\u8f7d\u7684\u7ea2\u8272\u7535\u6e90\u706f\u4f1a\u4eae\u8d77\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5b89\u88c5\u4e32\u53e3\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u52a8\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u6765\u81ea\u52a8\u5b89\u88c5\u3002</p> <ul> <li>\u5bf9\u4e8eWindows\u7cfb\u7edf \u6b64\u65f6Windows\u8bbe\u5907\u7ba1\u7406\u5668 \u5728 \u7aef\u53e3(COM\u548cLPT) \u5904\u4f1a\u591a\u51fa\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u4e00\u822c\u662f\u4ee5 <code>USB-Enhanced-SERIAL CH9102</code>\u5f00\u5934\uff0c\u60a8\u9700\u8981\u7559\u610f\u4e00\u4e0b\u540e\u9762\u7684\u5177\u4f53COM\u7f16\u53f7\uff0c\u7528\u4e8e\u540e\u7eed\u8fde\u63a5\u4f7f\u7528\u3002</li> </ul> <p> \u5982\u4e0a\u56fe\uff0cCOM\u53f7\u662f96\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8fde\u63a5\u6240\u4f7f\u7528\u7684\u4e32\u53e3\u53f7\u5c31\u662f96\u3002</p> <ul> <li>\u5bf9\u4e8eLinux\u7cfb\u7edf \u53ef\u4ee5\u67e5\u770b\u662f\u5426\u591a\u51fa\u4e00\u4e2a/dev/tty&lt;&gt; \u8bbe\u5907,\u4e00\u822c\u60c5\u51b5\u8bbe\u5907\u8282\u70b9\u4e3a /dev/ttyACM0  \u3002 </li> </ul>"},{"location":"DongshanPi-One/03-QuickStart/#2","title":"2. \u6253\u5f00\u4e32\u53e3\u63a7\u5236\u53f0","text":""},{"location":"DongshanPi-One/03-QuickStart/#_3","title":"\u83b7\u53d6\u4e32\u53e3\u5de5\u5177","text":"<p>\u4f7f\u7528Putty\u6216\u8005MobaXterm\u7b49\u4e32\u53e3\u5de5\u5177\u6765\u5f00\u53d1\u677f\u8bbe\u5907\u3002</p> <ul> <li>\u5176\u4e2dputty\u5de5\u5177\u53ef\u4ee5\u8bbf\u95ee\u9875\u9762  https://www.chiark.greenend.org.uk/~sgtatham/putty/  \u6765\u83b7\u53d6\u3002</li> <li>MobaXterm\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u9875\u9762 https://mobaxterm.mobatek.net/ \u83b7\u53d6 (\u63a8\u8350\u4f7f\u7528)\u3002</li> </ul>"},{"location":"DongshanPi-One/03-QuickStart/#putty","title":"\u4f7f\u7528putty\u767b\u5f55\u4e32\u53e3","text":""},{"location":"DongshanPi-One/03-QuickStart/#mobaxterm","title":"\u4f7f\u7528Mobaxterm\u767b\u5f55\u4e32\u53e3","text":"<p>\u6253\u5f00MobaXterm\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u201cSession\u201d\uff0c\u5728\u5f39\u51fa\u7684\u754c\u9762\u9009\u4e2d\u201cSerial\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u9009\u62e9\u7aef\u53e3\u53f7\uff08\u524d\u9762\u8bbe\u5907\u7ba1\u7406\u5668\u663e\u793a\u7684\u7aef\u53e3\u53f7COM21\uff09\u3001\u6ce2\u7279\u7387\uff08Speed 115200\uff09\u3001\u6d41\u63a7\uff08Flow Control: none\uff09,\u6700\u540e\u70b9\u51fb\u201cOK\u201d\u5373\u53ef\u3002\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6ce8\u610f\uff1a\u6d41\u63a7\uff08Flow Control\uff09\u4e00\u5b9a\u8981\u9009\u62e9none\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u5728MobaXterm\u4e2d\u5411\u4e32\u53e3\u8f93\u5165\u6570\u636e</p> <p></p>"},{"location":"DongshanPi-One/03-QuickStart/#3-shell","title":"3. \u8fdb\u5165\u7cfb\u7edfshell","text":"<p>\u4f7f\u7528\u4e32\u53e3\u5de5\u5177\u6210\u529f\u6253\u5f00\u4e32\u53e3\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u4e0b Enter \u952e \u8fdb\u5165shell\uff0c\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u6309\u4e0b\u677f\u5b50\u4e0a\u7684 <code>Reset</code>\u590d\u4f4d\u952e\uff0c\u6765\u67e5\u770b\u5b8c\u6574\u7684\u7cfb\u7edf\u4fe1\u606f\u3002 </p> <p>\u6ce8\u610f\uff1a\u661f\u8fb0\u539f\u5382\u7cfb\u7edf\u6ca1\u6709\u767b\u5f55\u5bc6\u7801\uff0c\u76f4\u63a5\u542f\u52a8\u8fdb\u5165\u6587\u4ef6\u7cfb\u7edf\u5185shell\u7ec8\u7aef\u3002</p>"},{"location":"DongshanPi-One/03-QuickStart/#_4","title":"\u6269\u5c55\u786c\u4ef6","text":""},{"location":"DongshanPi-One/03-QuickStart/#_5","title":"\u8fde\u63a5\u6a21\u5757","text":""},{"location":"DongshanPi-One/03-QuickStart/#7","title":"\u8fde\u63a57\u5bf8\u5c4f\u6a21\u5757","text":"<ul> <li> <p>\u8fde\u63a5\u89c6\u9891\u6559\u7a0b</p> </li> <li> <p>\u6a21\u5757\u4ecb\u7ecd </p> </li> </ul>"},{"location":"DongshanPi-One/03-QuickStart/#_6","title":"\u8fde\u63a5\u5e95\u677f","text":"<ul> <li> <p>\u8fde\u63a5\u89c6\u9891\u6559\u7a0b</p> </li> <li> <p>\u5e95\u677f\u4ecb\u7ecd</p> </li> </ul>"},{"location":"DongshanPi-One/03-QuickStart/#_7","title":"\u7b80\u8ff0\u5f00\u53d1\u6d41\u7a0b","text":""},{"location":"DongshanPi-One/03-QuickStart/#_8","title":"\u8c03\u8bd5\u73af\u5883\u6982\u8ff0","text":""},{"location":"DongshanPi-One/03-SomeQustion/","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"DongshanPi-One/03-SomeQustion/#_2","title":"\u70e7\u5199\u9ed8\u8ba4\u7cfb\u7edf","text":"<ul> <li>\u53c2\u8003\u64cd\u4f5c\u6f14\u793a\u89c6\u9891\u6559\u7a0b</li> </ul>"},{"location":"DongshanPi-One/03-SomeQustion/#_3","title":"\u51c6\u5907\u5de5\u4f5c","text":"<p>\u70e7\u5199\u7cfb\u7edf\u662f\u5728uboot\u547d\u4ee4\u884c\u4e0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u64cd\u4f5c\u4e4b\u524d\u60a8\u9700\u8981\u786e\u8ba4\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5f00\u53d1\u677f\u53ef\u4ee5\u542f\u52a8\u8fdb\u5165\u5230uboot\u547d\u4ee4\u884c\uff0c\u5982\u679c\u4e0d\u884c\u8bf7\u70b9\u51fb\u9875\u9762 \u7f16\u8bd1\u70e7\u5199Boot \u7ae0\u8282\u8fdb\u884c\u70e7\u5199\u66f4\u65b0\u3002</li> <li>\u7531\u4e8e\u4e1c\u5c71Pi\u58f9\u53f7 \u5f00\u53d1\u677f\u6ca1\u6709 \u7f51\u5361\u63a5\u53e3\uff0c\u6240\u4ee5\u70e7\u5f55\u662f\u901a\u8fc7SD\u5361\u8fdb\u884c\u70e7\u5f55\uff0c<ol> <li>\u6240\u4ee5\u60a8\u9700\u8981\u63d0\u524d\u51c6\u5907\u4e00\u4e2a\u5206\u533a\u683c\u5f0f\u4e3a <code>FAT32</code> <code>32GB</code>\u53ca\u4ee5\u4e0b\u5bb9\u91cf\u7684TF\u5361\uff0c\u4ee5\u53ca<code>\u8bfb\u5361\u5668</code>\u3002</li> </ol> </li> <li>\u70e7\u5199\u9ed8\u8ba4\u7cfb\u7edf\u662f\u70e7\u5199\u4e86\u6240\u6709\u7684\u5206\u533a\uff0c\u6240\u4ee5\u5b83\u4f1a\u64e6\u9664\u5e76\u91cd\u65b0\u5199\u5165\u6587\u4ef6\u5230\u6240\u6709\u7684\u5206\u533a\uff0c\u8bf7\u63d0\u524d\u5c06\u91cd\u8981\u6587\u4ef6\u62f7\u8d1d\u51fa\u6765\u3002</li> </ol>"},{"location":"DongshanPi-One/03-SomeQustion/#_4","title":"\u70e7\u5199\u66f4\u65b0","text":"<ul> <li>\u4e0b\u8f7d\u9ed8\u8ba4\u7cfb\u7edf\u955c\u50cf</li> <li> <p>\u70b9\u51fb\u4e0b\u8f7d\u94fe\u63a5\uff1ahttps://forums.100ask.net/t/topic/6615/5 \u4e0b\u8f7d\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u540d\u4e3a <code>images.zip</code> \u7684\u538b\u7f29\u5305\uff0c\u9700\u8981\u5148\u7528\u538b\u7f29\u5de5\u5177\u8fdb\u884c\u89e3\u538b\u7f29\uff0c\u89e3\u538b\u7f29\u540e\u7684\u6587\u4ef6\u5217\u8868\u5982\u4e0b\u3002 <pre><code>appconfigs.ubifs\nauto_update.txt\nauto_update_bin.txt\nboot/\ncis.bin\ncustomer.ubifs\nipl_cust_s.bin\nipl_s.bin\nkernel\nlogo\nmiservice.ubifs\nrootfs.ubifs\nscripts/\nscripts_bin/\nuboot_s.bin\n</code></pre></p> </li> <li> <p>\u62f7\u8d1d\u5230tf\u5361\u5185 \u9996\u5148\u5c06\u5df2\u7ecf\u51c6\u5907\u597d\u7684\u5206\u533a\u683c\u5f0f\u4e3aFAT32\u7684TF\u5361\u8fde\u63a5\u81f3\u7535\u8111\uff0c\u5c06\u4e0a\u8ff0\u89e3\u538b\u51fa\u6765\u7684\u6587\u4ef6 \u5168\u90e8\u62f7\u8d1d\u81f3tf\u5361\u5185\u3002 \u62f7\u8d1d\u5b8c\u6210\u540e,\u5373\u53ef\u4ece\u7535\u8111\u5f39\u51fatf\u5361\uff0c\u5c06\u5361\u63d2\u5165 \u4e1c\u5c71Pi\u5f00\u53d1\u677f\u7684 tf\u5361\u5361\u5ea7\u5185\uff0c\u5b8c\u5168\u6309\u538b\u8fdb\u53bb(\u6ce8\u610ftf\u5361\u4e0d\u53ef\u8d85\u8fc732G)\u3002</p> </li> <li> <p>\u8fdb\u5165uboot\u547d\u4ee4\u884c\u6267\u884c\u70e7\u5199\u547d\u4ee4   \u6b64\u65f6\u786e\u4fdd\u5f00\u53d1\u677f\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u5de5\u5177\u8fdb\u884c\u4ea4\u4e92\uff0c\u6309\u4e0b\u590d\u4f4d\u952e\uff0c\u7d27\u63a5\u7740\u5728\u6709\u542f\u52a8\u4fe1\u606f\u6253\u5370\u65f6\u4e00\u76f4\u957f\u6309\u952e\u76d8 <code>enter</code> \u56de\u8f66\u952e\u4e09\u79d2\u5de6\u53f3\u677e\u5f00\uff0c\u5373\u53ef\u8fdb\u5165uboot\u547d\u4ee4\u884c\u754c\u9762\u5185\u3002   \u8fdb\u5165uboot\u547d\u4ee4\u884c\u4ee5\u540e \u53ef\u4ee5\u76f4\u63a5\u8f93\u5165 <code>dstar</code> \u547d\u4ee4\uff0c\u5c31\u4f1a\u81ea\u52a8\u8fdb\u884c\u66f4\u65b0\uff0c\u7b49\u5f85\u66f4\u65b0 \u7ed3\u675f \u81ea\u52a8\u91cd\u542f\u7cfb\u7edf\u5373\u53ef\u3002  </p> </li> </ul> <p>\u66f4\u65b0\u7cfb\u7edf\u5b8c\u6574\u7684log \u8f93\u51fa\uff0c\u4ec5\u9650\u53c2\u8003\uff1a  </p>"},{"location":"DongshanPi-One/03-SomeQustion/#_5","title":"\u5176\u5b83\u5e38\u89c1\u95ee\u9898","text":""},{"location":"DongshanPi-One/03-SomeQustion/#_6","title":"\u65e0\u4e32\u53e3\u8f93\u51fa\u4fe1\u606f","text":"<ul> <li>\u68c0\u67e5\u662f\u5426\u8fde\u63a5\u6210\u529f \u7535\u8111\u662f\u5426\u5b89\u88c5\u4e32\u53e3\u9a71\u52a8</li> <li>\u68c0\u67e5\u4e32\u53e3\u6ce2\u7279\u7387\u662f\u5426\u8bbe\u7f6e\u6b63\u786e</li> <li>\u68c0\u67e5\u4e32\u53e3\u662f\u5426\u88ab\u5176\u5b83\u5de5\u5177\u62e6\u622a</li> </ul>"},{"location":"DongshanPi-One/03-SomeQustion/#_7","title":"\u65e0\u6cd5\u70e7\u5199\u7cfb\u7edf","text":"<ul> <li>\u68c0\u67e5\u5f00\u53d1\u677f\u662f\u5426\u8fdb\u5165uboot\u6a21\u5f0f</li> <li>\u662f\u5426\u53ef\u4ee5\u52a0\u8f7dSD\u5361\u5185\u955c\u50cf\u5230\u7cfb\u7edf\u5185</li> <li>\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u70e7\u5199</li> </ul>"},{"location":"DongshanPi-One/03-SomeQustion/#_8","title":"\u5c4f\u5e55\u65e0\u4efb\u4f55\u663e\u793a","text":"<ul> <li>\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u7a33\u5b9a\u3002</li> <li>\u67e5\u770b\u5c4f\u5e55\u80cc\u5149\u662f\u5426\u4eae\u8d77\u3002</li> <li>\u68c0\u67e5\u662f\u5426\u6709\u64cd\u4f5c\u5c4f\u5e55\u8fdb\u884c\u663e\u793a\u3002</li> </ul>"},{"location":"DongshanPi-One/05-GetSourceCode/","title":"\u83b7\u53d6\u914d\u5957sdk\u6e90\u7801","text":"<p>\u5982\u679c\u60a8\u611f\u89c9\u8ddf\u7740\u6587\u6863\u4e0d\u77e5\u9053\u600e\u4e48\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6211\u4eec\u63d0\u524d\u5f55\u5236\u597d\u7684\u624b\u628a\u624b\u6559\u5b66\u89c6\u9891\u3002</p>"},{"location":"DongshanPi-One/05-GetSourceCode/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u6211\u4eec\u7684\u5f00\u53d1\u73af\u5883\u57fa\u4e8eubuntu-18.04\u7cfb\u7edf \u4e3a\u4e86\u907f\u514d\u722c\u5751\u6d6a\u8d39\u60a8\u7684\u65f6\u95f4 \u8bf7\u5c3d\u91cf\u548c\u6211\u4eec\u4fdd\u6301\u4e00\u81f4\u3002</p>"},{"location":"DongshanPi-One/05-GetSourceCode/#lib-tool","title":"\u5b89\u88c5\u7f16\u8bd1\u9700\u8981\u7684lib &amp; tool","text":"<p>\u63a5\u4e0b\u6765\u5b89\u88c5\u76f8\u5e94\u7684\u7f16\u8bd1\u5de5\u5177\u7b49\uff1a\u9488\u5bf9SDK\u7f16\u8bd1\u9700\u8981\u5b89\u88c5\u4e00\u4e9btool\uff0c\u5426\u5219\u4f1a\u7f16\u8bd1\u5931\u8d25\u3002 <pre><code>book@100ask:~$ sudo apt-get install libc6-dev-i386\nbook@100ask:~$ sudo apt-get install lib32z1 lib32ncurses5\nbook@100ask:~$ sudo apt-get install libuuid1:i386\nbook@100ask:~$ sudo apt-get install cmake\nbook@100ask:~$ sudo apt-get install libncurses5-dev libncursesw5-dev\nbook@100ask:~$ sudo apt install bc\nbook@100ask:~$ sudo apt-get install xz-utils\nbook@100ask:~$ sudo apt-get install automake\nbook@100ask:~$ sudo apt-get install libtool\nbook@100ask:~$ sudo apt-get install libevdev-dev\nbook@100ask:~$ sudo apt-get install pkg-config\nbook@100ask:~$ sudo apt-get install openssh-server\nbook@100ask:~$ sudo apt-get install repo\n</code></pre></p> <p>\u6216\u8005\u4f7f\u7528\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4\u4e00\u6b21\u5168\u90e8\u4e0b\u8f7d\u4e0a\u9762\u7684tools\uff1a</p> <pre><code>sudo apt-get install -y libc6-dev-i386 lib32z1 lib32ncurses5 libuuid1:i386 cmake libncurses5-dev libncursesw5-dev bc xz-utils automake libtool libevdev-dev pkg-config openssh-server repo\n</code></pre> <p>\u5b89\u88c5\u5b8c\u4e86\u5373\u53ef\u4f7f\u7528,\u5982\u4e0a\u8fd9\u4e9b\u9700\u8981\u5b89\u88c5\u7684tool &amp;&amp; lib\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u7528\u5230\u76f8\u5173\u5185\u5bb9\u3002\u8fd9\u8fb9\u5c31\u4e0d\u4e00\u4e00\u8bf4\u660e\u662f\u54ea\u4e2a\u9519\u8bef\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5148\u4e0d\u5b89\u88c5\u7f16\u8bd1\u6765\u67e5\u770b\u76f8\u5173\u9519\u8bef\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5728\u7f16\u8bd1\u4e4b\u524d\u4e00\u6b21\u6027\u5b89\u88c5\u5373\u53ef\u3002 \u5982\u679c\u9ed8\u8ba4sh\u4e0d\u662fbash\uff0c\u9700\u8981\u5c06sh\u6539\u6210bash\uff1a <pre><code>book@100ask:~$  sudo rm /bin/sh\nbook@100ask:~$  sudo ln -s /bin/bash /bin/sh\n</code></pre></p>"},{"location":"DongshanPi-One/05-GetSourceCode/#_2","title":"\u83b7\u53d6\u6e90\u7801","text":"<p>\u6e90\u7801\u6211\u4eec\u4f7f\u7528repo\u5de5\u5177\u6765\u7edf\u4e00\u7ba1\u7406\u591a\u4e2agit\u4ed3\u5e93\uff0c\u65b9\u4fbf\u4e00\u952e\u83b7\u53d6\u548c\u66f4\u65b0\uff0c\u4e4b\u540e\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u6e90\u7801\u83b7\u53d6\uff0c\u7b49\u5f85\u83b7\u53d6\u5b8c\u6210\u5373\u53ef <pre><code>book@100ask:~$ git clone https://e.coding.net/codebug8/repo.git\nbook@100ask:~$ mkdir DongshanPiOne-TAKOYAKI  &amp;&amp; cd  DongshanPiOne-TAKOYAKI\nbook@100ask:~/DongshanPiOne-TAKOYAKI$ ../repo/repo init -u  https://gitee.com/weidongshan/manifests.git -b linux-sdk -m  SSD202D/dongshanpi-one_takoyaki_dlc00v030.xml --no-repo-verify\nbook@100ask:~/DongshanPiOne-TAKOYAKI$ ../repo/repo sync -j4\n</code></pre> \u83b7\u53d6\u6210\u529f\u540e\u7684\u6e90\u7801\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b <pre><code>book@virtual-machine:~/DongshanPiOne-TAKOYAKI$ tree -L 1\n.\n\u251c\u2500\u2500 boot   //\u4f7f\u7528\u7684\u662fuboot-2015  \u4e3b\u8981\u7528\u4e8e\u70e7\u5199\u5f15\u5bfckernel\u542f\u52a8\u3002\n\u251c\u2500\u2500 DevelopmentEnvConf  //\u81ea\u52a8\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u7684\u4e00\u4e9b\u811a\u672c\u6587\u4ef6\n\u251c\u2500\u2500 gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf   //\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002\n\u251c\u2500\u2500 kernel  //\u4f7f\u75284.9.88\u7248\u672c\u7684\u5185\u6838\n\u251c\u2500\u2500 project  //\u6839\u6587\u4ef6\u7cfb\u7edf\u548c\u5e94\u7528\u76f8\u5173\u6e90\u7801,\u4e3b\u8981\u5305\u542b\u4e86 \u7f16\u8bd1\u6784\u5efa\u6839\u6587\u4ef6\u7cfb\u7edf APP \u5e76\u81ea\u52a8\u6253\u5305\u751f\u6210\u5408\u9002\u7684\u683c\u5f0f\u7528\u6765\u70e7\u5199\u3002\n\u2514\u2500\u2500 sdk  \n</code></pre></p>"},{"location":"DongshanPi-One/05-GetSourceCode/#_3","title":"\u914d\u7f6e\u7f16\u8bd1\u73af\u5883","text":""},{"location":"DongshanPi-One/05-GetSourceCode/#_4","title":"\u8bbe\u7f6e\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe","text":"<p>\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u5728\u5d4c\u5165\u5f0fLinux\u5f00\u53d1\u4e2d\u8d77\u5230\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u4f5c\u7528\uff0c\u5fc5\u987b\u8981\u8fdb\u884c\u914d\u7f6e\uff0c\u5426\u5219\u5c31\u65e0\u6cd5\u8fdb\u884c\u540e\u7eed\u7684\u64cd\u4f5c\u3002</p> <p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u6307\u5b9a\u7684  PATH=$PATH:/home/book \u8def\u5f84\u4e3a\u6f14\u793a\u4e3b\u673a\u7684\u5bb6\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84 \u60a8\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84\u8fdb\u884c\u914d\u7f6e\uff0c\u5bb6\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e0b\u4f7f\u7528 cd ~ &amp;&amp; pwd \u83b7\u53d6\u3002</p> <ul> <li> <p>\u6c38\u4e45\u751f\u6548 \u5982\u9700\u6c38\u4e45\u4fee\u6539\uff0c\u8bf7\u4fee\u6539\u7528\u6237\u914d\u7f6e\u6587\u4ef6\u3002 \u6ce8\u610f\uff1a\u5982\u679c\u4e0d\u4f1a\u4f7f\u7528vim\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528\u56fe\u5f62\u5316\u7684\u7f16\u8f91\u5de5\u5177\uff0c\u6267\u884c\uff1agedit  ~/.bashrc <pre><code>book@100ask:~$ vim  ~/.bashrc\n</code></pre> \u5728\u884c\u5c3e\u6dfb\u52a0\u6216\u4fee\u6539\uff0c\u52a0\u4e0a\u4e0b\u9762\u51e0\u884c\uff1a <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\nexport PATH=$PATH:/home/book/DongshanPiOne-TAKOYAKI/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf/bin\n</code></pre> \u8bbe\u7f6e\u5b8c\u6bd5\u540e\uff0c\u8981\u6267\u884c <code>source  ~/.bashrc</code> \u547d\u4ee4\u4f7f\u5176\u751f\u6548\uff0c\u8fd9\u6761\u547d\u4ee4\u662f\u52a0\u8f7d\u8fd9\u4e9b\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u3002</p> </li> <li> <p>\u4e34\u65f6\u751f\u6548 \u6ce8\u610f\uff1a\u624b\u5de5\u6267\u884c\"export\"\u547d\u4ee4\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u8be5\u8bbe\u7f6e\u53ea\u5bf9\u5f53\u524d\u7ec8\u7aef\u6709\u6548(\u53e6\u5f00\u4e00\u4e2a\u7ec8\u7aef\u9700\u8981\u518d\u6b21\u8bbe\u7f6e). <pre><code>book@100ask:~$ export ARCH=arm\nbook@100ask:~$ export CROSS_COMPILE=arm-linux-gnueabihf-\nbook@100ask:~$ export PATH=$PATH:/home/book/DongshanPiOne-TAKOYAKI/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf/bin\n</code></pre></p> </li> <li> <p>\u9a8c\u8bc1\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u5728\u7ec8\u7aef\u4e0b\u6267\u884c arm-linux-gnueabihf-gcc -v\u547d\u4ee4 \u6709\u5982\u4e0b\u7c7b\u4f3c\u7684\u4fe1\u606f\u8f93\u51fa \u5373\u8868\u660e\u6b63\u5e38\u3002 <pre><code>book@100ask:~$ arm-linux-gnueabihf-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=arm-linux-gnueabihf-gcc\nCOLLECT_LTO_WRAPPER=/home/book/DongshanPiOne-TAKOYAKI/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf/bin/../libexec/gcc/arm-linux-gnueabihf/8.2.1/lto-wrapper\nTarget: arm-linux-gnueabihf\nConfigured with: /tmp/dgboter/bbs/bc-b1-2-11--rhe6x86_64/buildbot/rhe6x86_64--arm-linux-gnueabihf/build/src/gcc/configure --target=arm-linux-gnueabihf --prefix= --with-sysroot=/arm-linux-gnueabihf/libc --with-build-sysroot=/tmp/dgboter/bbs/bc-b1-2-11--rhe6x86_64/buildbot/rhe6x86_64--arm-linux-gnueabihf/build/build-arm-linux-gnueabihf/install//arm-linux-gnueabihf/libc --enable-gnu-indirect-function --enable-shared --disable-libssp --disable-libmudflap --disable-libsanitizer --enable-checking=release --enable-languages=c,c++,fortran --with-gmp=/tmp/dgboter/bbs/bc-b1-2-11--rhe6x86_64/buildbot/rhe6x86_64--arm-linux-gnueabihf/build/build-arm-linux-gnueabihf/host-tools --with-mpfr=/tmp/dgboter/bbs/bc-b1-2-11--rhe6x86_64/buildbot/rhe6x86_64--arm-linux-gnueabihf/build/build-arm-linux-gnueabihf/host-tools --with-mpc=/tmp/dgboter/bbs/bc-b1-2-11--rhe6x86_64/buildbot/rhe6x86_64--arm-linux-gnueabihf/build/build-arm-linux-gnueabihf/host-tools --with-isl=/tmp/dgboter/bbs/bc-b1-2-11--rhe6x86_64/buildbot/rhe6x86_64--arm-linux-gnueabihf/build/build-arm-linux-gnueabihf/host-tools --with-arch=armv7-a --with-fpu=neon --with-float=hard --with-arch=armv7-a --with-pkgversion='GNU Toolchain for the A-profile Architecture 8.2-2018-08 (arm-rel-8.23)'\nThread model: posix\ngcc version 8.2.1 20180802 (GNU Toolchain for the A-profile Architecture 8.2-2018-08 (arm-rel-8.23))\nbook@100ask:~$\n</code></pre></p> </li> </ul> <p>\u8bbe\u7f6e\u5b8c\u6210\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u8bd1\u70e7\u5199\u4e86\u3002</p>"},{"location":"DongshanPi-One/06-BuildFlashBoot/","title":"\u7f16\u8bd1\u70e7\u5199boot","text":"<p>\u7b80\u8ff0\uff1aSSD202D\u82af\u7247\u7684boot\u9636\u6bb5\u4e5f\u662f\u6211\u4eec\u5e38\u8bf4\u7684bootLoader\uff0c\u662f\u57fa\u4e8euboot2015\u8fdb\u884c\u5f00\u53d1\u9002\u914d\uff0c\u91cc\u9762\u589e\u52a0\u4e86\u5927\u91cf\u7684\u82af\u7247\u539f\u5382\u76f8\u5173\u4ee3\u7801\uff0c\u548c\u793e\u533a\u7248\u672c\u5b58\u5728\u5f88\u5927\u5dee\u5f02\uff0c\u7531\u4e8eSSD202\u53ea\u652f\u6301\u4eceNANDFLASH / NorFLASH\u542f\u52a8\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u7684\u5f00\u53d1\u677f\u4e0a\u6ca1\u6709boot\u5206\u533a\u6216\u8005\u4e0d\u5c0f\u5fc3\u7834\u574f\u4e86boot\u5206\u533a\uff0c\u90a3\u4e48\u7cfb\u7edf\u5c31\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\uff0c\u9700\u8981\u901a\u8fc7\u4e13\u95e8\u7684\u70e7\u5f55\u5de5\u5177\u624d\u53ef\u4ee5\u8fdb\u884c\u70e7\u5f55\u66f4\u65b0\u3002</p> <p>\u70e7\u5f55\u5de5\u5177\u53d7\u82af\u7247\u5e02\u573a\u4f9b\u8d27\u5f71\u54cd\uff0c\u4ef7\u683c\u975e\u5e38\u9ad8\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5efa\u8bae\u5927\u5bb6\u64cd\u4f5c\u8fd9\u90e8\u5206\u3002</p> <p>\u5982\u679c\u60a8\u53d1\u73b0\u60a8\u8ddf\u7740\u6b64\u6587\u6863\u64cd\u4f5c\u51fa\u73b0\u95ee\u9898\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6211\u4eec\u63d0\u524d\u5f55\u5236\u597d\u7684\u624b\u628a\u624b\u6559\u5b66\u89c6\u9891\u3002</p>"},{"location":"DongshanPi-One/06-BuildFlashBoot/#bootloader","title":"\u7f16\u8bd1bootloader","text":"<p>\u9996\u5148\u8fdb\u5165boot\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\uff0c\u5728\u7f16\u8bd1\u4e4b\u524d\u9700\u8981\u786e\u8ba4\u6e05\u695a\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7b49\u73af\u5883\u662f\u5426\u914d\u7f6e\u6210\u529f\uff0c\u5982\u679c\u4e0d\u786e\u5b9a \u53ef\u4ee5\u53c2\u8003 \u914d\u7f6e\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u7ae0\u8282\u3002</p> <p>make infinity2m_spinand_defconfig</p> <p>\u6307\u5b9a\u5b8c\u6210\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u7ee7\u7eed\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5f00\u59cb\u7f16\u8bd1\uff08\u6839\u636e\u670d\u52a1\u5668\u914d\u7f6e\uff0c\u53ef\u4ee5\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u8bd1\uff09</p> <p>make -j8</p> <ul> <li>\u53c2\u8003\u6267\u884c\u793a\u4f8b <pre><code>book@100ask:~/DongshanPiOne-TAKOYAKI/boot$ make infinity2m_spinand_defconfig\narch/../configs/.tmp_defconfig:326:warning: override: reassigning to symbol CMD_FASTBOOT\n#\n# configuration written to .config\n#\nbook@100ask:~/DongshanPiOne-TAKOYAKI/boot$ make -j16\n</code></pre></li> </ul> <p>\u6700\u540e\u751f\u6210\u7684\u955c\u50cf\u6587\u4ef6\u4e3a\uff1a</p> <p>u-boot_spinand.xz.img.bin</p> <p>\u6ce8\u610f\uff1a\u5982\u679c\u9700\u8981\u6253\u5305 \u7f16\u8bd1\u51fa\u6765\u7684\u955c\u50cf\u5230\u6700\u7ec8\u7684\u5b8c\u6574\u7cfb\u7edf\u5185\u5219 \u9700\u8981\u8bb2\u751f\u6210\u7684\u6587\u4ef6\u62f7\u8d1d\u5230project\u76ee\u5f55\uff1a</p> <p>cp u-boot_spinand.xz.img.bin project/board/i2m/boot/spinand/uboot/</p> <ul> <li>\u53c2\u8003\u6267\u884c\u793a\u4f8b <pre><code>book@100ask:~/DongshanPiOne-TAKOYAKI/boot$  cp u-boot_spinand.xz.img.bin  ../project/board/i2m/boot/spinand/uboot/\n</code></pre></li> </ul>"},{"location":"DongshanPi-One/06-BuildFlashBoot/#bootloader_1","title":"\u70e7\u5199bootloader","text":""},{"location":"DongshanPi-One/06-BuildFlashBoot/#uboot","title":"\u8fdb\u5165uboot\u5185\u70e7\u5199","text":"<p>\u6ce8\u610f\uff1a\u8fd9\u79cd\u70e7\u5199\u65b9\u5f0f\u662f\u5728\u60a8\u7684\u5f00\u53d1\u677f\u8fd8\u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\uff0c\u53ef\u4ee5\u8fdb\u5165\u5230uboot\u547d\u4ee4\u884c\u5185\u3002 \u9996\u5148\u53c2\u8003\u4e0a\u8ff0\u64cd\u4f5c\u5c06\u7f16\u8bd1\u597d\u7684\u955c\u50cf\u62f7\u8d1d\u5230\u60a8\u7684sd\u5361\u5185\uff0c \u4e4b\u540e\u5f00\u53d1\u677f\u4e0a\u7535\uff0c\u5728\u4e32\u53e3\u6709\u8f93\u51fa\u65f6\u4e00\u76f4\u957f\u6309\u952e\u76d8 Enter \u952e3\u79d2\u5de6\u53f3 \u4e4b\u540e\u653e\u5f00\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230uboot\u547d\u4ee4\u884c\u5185\uff0c \u6700\u540e\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u66f4\u65b0\u3002</p> <p>fatload  mmc 0:1 0x21000000 u-boot_spinand.xz.img.bin</p> <p>nand erase.part UBOOT0</p> <p>nand write.e 0x21000000 UBOOT0 ${filesize}</p> <p>nand erase.part UBOOT1</p> <p>nand write.e 0x21000000 UBOOT1 ${filesize}</p>"},{"location":"DongshanPi-One/06-BuildFlashBoot/#_1","title":"\u4f7f\u7528\u5f00\u6e90\u793e\u533a\u5de5\u5177\u70e7\u5199","text":"<ul> <li>\u5f00\u6e90\u793e\u533a\u5de5\u5177\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\u8bf7\u770b\uff1b</li> <li>\u793e\u533a\u7248\u70e7\u5199\u5de5\u5177 \u8fde\u7ebf\u4ecb\u7ecd https://item.taobao.com/item.htm?id=665728385852</li> <li>\u5c06\u70e7\u5199\u5de5\u5177\u8fde\u63a5\u597d\u70e7\u5f55\u7ebf\u540e\uff0c\u5c06\u70e7\u5f55\u5668\u548c\u5f00\u53d1\u677f\u70e7\u5199\u63a5\u53e3\u8fde\u63a5\u597d\uff0c\u62e8\u7801\u5f00\u5173\u5207\u6362\u4e3a\u70e7\u5199\u6a21\u5f0f(\u62e8\u7801\u5f00\u53d1\u767d\u8272\u62e8\u7801\u5207\u6362\u5230\u975eNO\u65b9\u5411)\u3002</li> </ul> <p>\u4e4b\u540e\u6211\u4eec\u6309\u4e0b \u4e3b\u677f\u4e0a<code>Reset</code>\u952e\uff0c\u540c\u65f6\u6267\u884c\u5982\u4e0b\u70e7\u5199\u547d\u4ee4\uff0c\u5176\u4e2d\u7b2c\u4e00\u53e5\u8bdd<code>sudo SNANDer -p mstarddc -c /dev/i2c-0:49 -e</code>\u662f\u6574\u4e2a \u64e6\u9664 flash \u547d\u4ee4\uff0c\u5efa\u8bae\u6267\u884c\u3002</p> <p>\u6ce8\u610f:\u70e7\u5199\u64cd\u4f5c\u662f\u5728ubuntu-18\u70e7\u5199\uff0c\u9700\u8981\u5c06\u70e7\u5199\u5de5\u5177\u6302\u8f7d\u5230ubuntu\u7cfb\u7edf\u5185\uff0c\u6302\u8f7d\u6210\u529f\u540e\u7cfb\u7edf\u4f1a\u81ea\u52a8\u88c5\u5728\u9a71\u52a8\u6a21\u5757\uff0c\u6b64\u65f6\u8bbe\u5907\u7ba1\u7406\u5668\u4f1a\u591a\u51fa\u4e00\u4e2a<code>/dev/i2c-0</code>\u7684\u8bbe\u5907\u8282\u70b9\uff0c\u5176\u4e2d\u70e7\u5199\u547d\u4ee4\u4e2d <code>-l</code>\u53c2\u6570\u6307\u5b9a\u7684\u662f\u70e7\u5199\u6587\u4ef6\u7684\u957f\u5ea6(\u5927\u5c0f)\uff0c\u5982\u679c\u4f60\u4fee\u6539\u4e86<code>u-boot_spinand.xz.img.bin</code>\u6587\u4ef6\uff0c\u8bf7\u786e\u8ba4\u5927\u5c0f\u662f\u5426\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u3002</p> <pre><code>sudo SNANDer -p mstarddc -c /dev/i2c-0:49 -e\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -w GCIS.bin\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x140000 -l 0x6000 -w IPL.bin\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x200000 -l 0x5800 -w IPL_CUST.bin\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x2C0000 -l 0x3B800 -w u-boot_spinand.xz.img.bin\n</code></pre>"},{"location":"DongshanPi-One/06-BuildFlashBoot/#_2","title":"\u4f7f\u7528\u4e13\u95e8\u7684\u70e7\u5199\u5668\u70e7\u5199","text":"<p>\u6ce8\u610f\uff1a\u672c\u65b9\u5f0f\u9002\u7528\u4e8e\u7a7a\u7247\u70e7\u5f55\u6216\u8005\u677f\u5b50\u65e0\u6cd5\u8fdb\u5165Uboot\u63a7\u5236\u53f0\u4f7f\u7528\u5176\u5b83\u65b9\u5f0f\u70e7\u5f55\u7684\u60c5\u51b5\u3002</p> <p>\u9996\u5148\u5173\u95ed\u4e32\u53e3\u8c03\u8bd5\u5de5\u5177\uff0c\u63a5\u4e0b\u6765\u6253\u5f00\u70e7\u5199\u5de5\u5177\uff1a\u70e7\u5199\u5de5\u5177\u4e0b\u8f7d \u70b9\u51fb\u8df3\u8f6c  \u9009\u62e9\u5408\u9002\u7684\u4e0b\u8f7d\u65b9\u5f0f\u4e0b\u8f7d\u3002 \u5176\u4e2d\u70e7\u5f55\u5668\u8d2d\u4e70\u94fe\u63a5\u5730\u5740\uff1a</p> <p>\u540c\u65f6\u5c06\u70e7\u5f55\u5668\u548c\u5f00\u53d1\u677f\u70e7\u5199\u63a5\u53e3\u8fde\u63a5\u597d\uff0c\u62e8\u7801\u5f00\u5173\u5207\u6362\u4e3a\u70e7\u5199\u6a21\u5f0f(\u62e8\u7801\u5f00\u53d1\u767d\u8272\u62e8\u7801\u5207\u6362\u5230\u975eNO\u65b9\u5411)\u3002 </p> <p>\u7535\u8111\u89e3\u538b\u7f29\u4e0b\u8f7d\u540e\u7684 ISP_5.0.18.zip \u70e7\u5199\u5de5\u5177\u538b\u7f29\u5305\uff0c\u6253\u5f00 <code>Flash_Tool_5.0.18.exe</code>\uff0c\u70b9\u51fbConnect\uff0c\u5efa\u7acb\u8fde\u63a5\u72b6\u6001\uff08Connect\u5fc5\u987b\u786e\u4fdd\u5173\u95ed\u4e32\u53e3\u5de5\u5177\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e89\u62a2\u4e32\u53e3\u8d44\u6e90\u95ee\u9898\uff09\u9009\u62e9Flash Type\u4e3aNand Flash\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\u9700\u8981\u6839\u636e\u6839\u636e\u4ee5\u4e0b\u7684\u5206\u533a\u4ee5\u53ca\u5206\u533a\u8d77\u59cb\u5730\u5740\uff0c\u6309\u7167\u4ee5\u4e0b\u65b9\u6cd5\u4f9d\u6b21\u70e7\u5f55\u5206\u533a\u3002 \u5176\u4e2d <code>GCIS.bin IPL.bin IPL_CUST.bin u-boot_spinand.xz.img.bin</code>\u8fd9\u4e9b\u6587\u4ef6\u53ef\u4ee5\u4ece\u6211\u4eec\u63d0\u4f9b\u63d0\u4f9b\u9ed8\u8ba4\u7cfb\u7edf\u955c\u50cf\u4e2d\u83b7\u53d6 \u6062\u590d\u9ed8\u8ba4\u7cfb\u7edf\u3002</p> \u5206\u533a\u6587\u4ef6 \u5206\u533a\u8d77\u59cb\u5730\u5740 GCIS.bin 0x000000 IPL.bin 0x140000 IPL_CUST.bin 0x200000 u-boot_spinand.xz.img.bin 0x2C0000 <ul> <li> <p>\u70e7\u5f55  GCIS.bin :\u53c2\u8003\u4e0b\u56fe 1 \u7ea2\u6846\u9009\u62e9\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\uff0c(\u6ce8\u610f\u8fd9\u4e9b\u955c\u50cf\u6587\u4ef6\u6765\u6e90\u4e8e \u524d\u9762 \u5e38\u89c1\u95ee\u9898\u7ae0\u8282  \u66f4\u65b0\u9ed8\u8ba4\u7cfb\u7edf\u90e8\u5206)\u3002 \u9009\u62e9\u5b8c\u6210\u540e\uff0c\u53c2\u8003\u4e0b\u56fe 2 \u7ea2\u6846\u8bbe\u7f6e\u70e7\u5199\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u70b9\u51fb \u7bad\u59343 <code>Run</code>\u6309\u94ae\u6765\u5f00\u59cb\u70e7\u5f55\u3002\u7b49\u5f85\u8fd0\u884c\u7ed3\u675f\uff0c\u76f4\u81f3\u63d0\u793aPass\u72b6\u6001\u3002 </p> </li> <li> <p>\u70e7\u5f55  IPL.bin :\u53c2\u8003\u4e0b\u56fe**1 \u7ea2\u6846\u9009\u62e9\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\uff0c(\u6ce8\u610f\u8fd9\u4e9b\u955c\u50cf\u6587\u4ef6\u6765\u6e90\u4e8e \u524d\u9762 \u5e38\u89c1\u95ee\u9898\u7ae0\u8282  \u66f4\u65b0\u9ed8\u8ba4\u7cfb\u7edf\u90e8\u5206)\u3002 \u9009\u62e9\u5b8c\u6210\u540e\uff0c\u53c2\u8003\u4e0b\u56fe **2 \u7ea2\u6846\u8bbe\u7f6e\u70e7\u5199\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u70b9\u51fb \u7bad\u59343 <code>Run</code>\u6309\u94ae\u6765\u5f00\u59cb\u70e7\u5f55\u3002\u7b49\u5f85\u8fd0\u884c\u7ed3\u675f\uff0c\u76f4\u81f3\u63d0\u793aPass\u72b6\u6001\u3002 </p> </li> <li> <p>\u70e7\u5f55  IPL_CUST.bin :\u53c2\u8003\u4e0b\u56fe**1 \u7ea2\u6846\u9009\u62e9\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\uff0c(\u6ce8\u610f\u8fd9\u4e9b\u955c\u50cf\u6587\u4ef6\u6765\u6e90\u4e8e \u524d\u9762 \u5e38\u89c1\u95ee\u9898\u7ae0\u8282  \u66f4\u65b0\u9ed8\u8ba4\u7cfb\u7edf\u90e8\u5206)\u3002 \u9009\u62e9\u5b8c\u6210\u540e\uff0c\u53c2\u8003\u4e0b\u56fe **2 \u7ea2\u6846\u8bbe\u7f6e\u70e7\u5199\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u70b9\u51fb \u7bad\u59343 <code>Run</code>\u6309\u94ae\u6765\u5f00\u59cb\u70e7\u5f55\u3002\u7b49\u5f85\u8fd0\u884c\u7ed3\u675f\uff0c\u76f4\u81f3\u63d0\u793aPass\u72b6\u6001\u3002 </p> </li> <li> <p>\u70e7\u5f55 u-boot_spinand.xz.img.bin :\u53c2\u8003\u4e0b\u56fe**1 \u7ea2\u6846\u9009\u62e9\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\uff0c(\u6ce8\u610f\u8fd9\u4e9b\u955c\u50cf\u6587\u4ef6\u6765\u6e90\u4e8e \u524d\u9762 \u5e38\u89c1\u95ee\u9898\u7ae0\u8282  \u66f4\u65b0\u9ed8\u8ba4\u7cfb\u7edf\u90e8\u5206)\u3002 \u9009\u62e9\u5b8c\u6210\u540e\uff0c\u53c2\u8003\u4e0b\u56fe **2 \u7ea2\u6846\u8bbe\u7f6e\u70e7\u5199\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u70b9\u51fb \u7bad\u59343 <code>Run</code>\u6309\u94ae\u6765\u5f00\u59cb\u70e7\u5f55\u3002  \u70b9\u51fbRun\uff0c\u7b49\u5f85\u8fd0\u884c\u7ed3\u675f\uff0c\u76f4\u81f3\u63d0\u793aPass\u72b6\u6001\u3002\u70e7\u5f55\u5b8c\u4e4b\u540e\u6267\u884creset\u91cd\u542f\u5373\u53ef\u6b63\u5e38\u542f\u52a8\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/07-BuildFlashKernel/","title":"\u7f16\u8bd1\u70e7\u5199Kernel","text":"<p>\u7b80\u8ff0\uff1a\u4e1c\u5c71Pi\u58f9\u53f7\u5f00\u53d1\u677f\u4f7f\u7528\u7684\u5185\u6838\u662f\u57fa\u4e8eLinuxKernel\u4e3b\u7ebf4.9\u7248\u672c\u8fdb\u884c\u9002\u914d\u652f\u6301\uff0c\u652f\u6301\u4e86\u4e00\u4e9b\u81ea\u6709\u7684\u63a7\u5236\u5668\u7b49\u4e13\u6709\u7684\u5904\u7406\u5355\u5143\u7b49\u9a71\u52a8\u6a21\u5757\u3002</p>"},{"location":"DongshanPi-One/07-BuildFlashKernel/#kernel_1","title":"\u7f16\u8bd1Kernel","text":"<p>\u9996\u5148\u8fdb\u5165kernel\u6839\u76ee\u5f55\uff0c\u5728\u7f16\u8bd1\u4e4b\u524d\u8fd8\u662f\u9700\u8981\u786e\u8ba4\u6e05\u695a\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7b49\u73af\u5883\u662f\u5426\u914d\u7f6e\u6210\u529f\uff0c\u5982\u679c\u4e0d\u786e\u5b9a \u53ef\u4ee5\u53c2\u8003 \u914d\u7f6e\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u7ae0\u8282\u3002</p> <p>make infinity2m_spinand_ssc011a_s01a_minigui_defconfig;</p> <p>\u6267\u884cmake clean;make -j8\uff08\u6839\u636e\u670d\u52a1\u5668\u914d\u7f6e\uff0c\u53ef\u4ee5\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u8bd1\uff09\u751f\u6210image\uff0c\u5982\u9700\u8981\u6253\u5305\u9700\u8981Relase\u5230project\u5bf9\u5e94\u76ee\u5f55\u3002</p> <p>Nand Flash   </p> <p>arch/arm/boot/uImage.xz   </p> <p>\u5982\u679c\u9700\u8981\u5c06\u7f16\u8bd1\u51fa\u6765\u7684\u955c\u50cf\u6700\u7ec8\u6253\u5305\u653e\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u955c\u50cf\u5185\u9700\u8981\u62f7\u8d1d\u5230project\u76ee\u5f55\uff1a</p> <p>project\\release\\nvr\\i2m\\011A\\glibc\\8.2.1\\bin\\kernel\\spinand    </p>"},{"location":"DongshanPi-One/07-BuildFlashKernel/#_1","title":"\u68c0\u67e5\u7f16\u8bd1\u73af\u5883","text":""},{"location":"DongshanPi-One/07-BuildFlashKernel/#_2","title":"\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6","text":""},{"location":"DongshanPi-One/07-BuildFlashKernel/#_3","title":"\u7f16\u8bd1\u7cfb\u7edf","text":""},{"location":"DongshanPi-One/07-BuildFlashKernel/#kernel_2","title":"\u70e7\u5199Kernel","text":""},{"location":"DongshanPi-One/07-BuildFlashKernel/#uboot","title":"uboot\u5185\u70e7\u5199","text":"<pre><code>fatload  mmc 0:1  0x21000000 uImage.xz\nnand erase.part KERNEL\nnand write.e 0x21000000 KERNEL ${filesize}\nnand erase.part RECOVERY\nnand write.e 0x21000000 RECOVERY ${filesize}\n</code></pre>"},{"location":"DongshanPi-One/08-BuildFlashSystem/","title":"\u7f16\u8bd1\u70e7\u5199\u7cfb\u7edf","text":""},{"location":"DongshanPi-One/08-BuildFlashSystem/#_2","title":"\u7f16\u8bd1\u6574\u4e2a\u7cfb\u7edf","text":""},{"location":"DongshanPi-One/08-BuildFlashSystem/#_3","title":"\u68c0\u67e5\u7f16\u8bd1\u73af\u5883","text":""},{"location":"DongshanPi-One/08-BuildFlashSystem/#_4","title":"\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6","text":"<p>./setup_config.sh ./configs/nvr/i2m/8.2.1/spinand.glibc.011a.128</p>"},{"location":"DongshanPi-One/08-BuildFlashSystem/#_5","title":"\u751f\u4ea7\u7cfb\u7edf","text":"<p>Release kernel\u76f8\u5173\u8d44\u6e90 \uff08\u975e\u5fc5\u987b\u52a8\u4f5c\uff0c\u53ea\u6709\u5f53\u6539\u52a8\u5230kernel\u90e8\u5206config\u7684\u65f6\u5019\u9700\u8981\u6267\u884c\u6b64\u6b65\uff09Nand Flash\uff1a</p> <p>./release.sh -k  ${kernel_path} -b 011A -p nvr -f spinand -c i2m -l glibc -v 8.2.1\uff1b</p> <p>\u6267\u884c: make image \uff08project\u5de5\u7a0b\u4e0d\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u8bd1\uff09</p> <p>\u751f\u6210image\uff0c\u76ee\u5f55\uff1aproject/image/output/images \u62ff\u5230\u751f\u6210\u7684image\u540e\uff0c\u53c2\u7167\u70e7\u5f55\u6587\u6863/\u6bcd\u7247\u5236\u4f5c\u6587\u6863\u70e7\u5f55\u5230\u677f\u5b50\u5373\u53ef\u3002</p>"},{"location":"DongshanPi-One/08-BuildFlashSystem/#_6","title":"\u70e7\u5199\u955c\u50cf","text":""},{"location":"DongshanPi-One/08-BuildFlashSystem/#uboot","title":"uboot\u5185\u70e7\u5199","text":""},{"location":"DongshanPi-One/09-SupportHardware/","title":"\u652f\u6301\u7684\u786c\u4ef6","text":""},{"location":"DongshanPi-One/10-SupportTools/","title":"\u652f\u6301\u7684\u5de5\u5177","text":""},{"location":"DongshanPi-One/10-SupportTools/#_2","title":"\u539f\u5382\u70e7\u5199\u5de5\u5177","text":"<p>\u70b9\u51fb\u4e0b\u8f7d \u4f20\u8f93\u94fe\u63a5\uff1ahttps://cowtransfer.com/s/e02e0eb2d80c42 </p>"},{"location":"DongshanPi-One/10-SupportTools/#flash","title":"Flash\u6bcd\u7247\u5236\u4f5c\u5de5\u5177","text":""},{"location":"DongshanPi-One/11-SupportOtherSystem/","title":"\u652f\u6301\u7684\u5176\u5b83\u7cfb\u7edf","text":""},{"location":"DongshanPi-One/12-BuildFlashApp/","title":"APP\u5f00\u53d1","text":""},{"location":"DongshanPi-One/12-BuildFlashApp/#app_1","title":"\u7f16\u8bd1APP","text":""},{"location":"DongshanPi-One/12-BuildFlashApp/#_1","title":"\u68c0\u67e5\u7f16\u8bd1\u73af\u5883","text":""},{"location":"DongshanPi-One/12-BuildFlashApp/#_2","title":"\u4ea4\u53c9\u7f16\u8bd1","text":""},{"location":"DongshanPi-One/12-BuildFlashApp/#app_2","title":"\u4e0b\u8f7d&amp;\u66f4\u65b0APP","text":""},{"location":"DongshanPi-One/12-BuildFlashApp/#_3","title":"\u6587\u4ef6\u7cfb\u7edf\u5185\u66f4\u65b0","text":""},{"location":"DongshanPi-One/15-SupportLinuxCommunity/","title":"\u793e\u533a\u7248\u672cLinux\u7b80\u8ff0","text":"<ul> <li>Mstar\u8d44\u6e90\u6c47\u603b\u5217\u8868 https://github.com/100askTeam/mstar-awesome</li> <li>Gitee\u540c\u6b65\u6c47\u603b\u9875\u9762 https://gitee.com/weidongshan/dongshanpi1-awesome</li> </ul>"},{"location":"DongshanPi-One/15-SupportLinuxCommunity/#_1","title":"\u70e7\u5199\u5de5\u5177\u652f\u6301","text":"<ul> <li>I2C\u82af\u7247\u70e7\u5f55\u5668 https://github.com/harbaum/I2C-Tiny-USB/tree/master/digispark</li> <li>\u70e7\u5f55\u5de5\u5177\u6e90\u7801\u4ed3\u5e93\u5730\u5740  https://github.com/fifteenhex/SNANDer/tree/mstar</li> </ul>"},{"location":"DongshanPi-One/15-SupportLinuxCommunity/#u-boot","title":"u-boot","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740 https://github.com/100askTeam/mstar_u-boot</li> </ul>"},{"location":"DongshanPi-One/15-SupportLinuxCommunity/#kernel","title":"kernel","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740  https://github.com/100askTeam/mstar_linux.git</li> </ul>"},{"location":"DongshanPi-One/15-SupportLinuxCommunity/#buildroot","title":"buildroot","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740 https://github.com/100askTeam/Mstar_buildroot</li> </ul>"},{"location":"DongshanPi-One/16-RunDempApp/","title":"\u5e94\u7528\u5f00\u53d1","text":"<ul> <li>\u539f\u5382\u5b98\u65b9\u5f00\u53d1\u6587\u6863 https://wx.comake.online/doc/syg27dk2rkls-SSD20X/customer/development/arch/arch.html</li> </ul>"},{"location":"DongshanPi-One/17-Das_u-boot/","title":"Bootloader","text":""},{"location":"DongshanPi-One/17-Das_u-boot/#u-boot","title":"u-boot","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740 https://github.com/100askTeam/mstar_u-boot</li> </ul>"},{"location":"DongshanPi-One/18-LinuxKernel/","title":"LinuxKernel","text":""},{"location":"DongshanPi-One/18-LinuxKernel/#kernel","title":"kernel","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740  https://github.com/100askTeam/mstar_linux.git</li> </ul>"},{"location":"DongshanPi-One/19.Buildroot/","title":"Buildroot build imags","text":""},{"location":"DongshanPi-One/19.Buildroot/#buildroot","title":"\u4f7f\u7528buildroot\u6784\u5efa\u793e\u533a\u7cfb\u7edf","text":"<ul> <li> <p>\u6e90\u7801\u4ed3\u5e93\u5730\u5740 https://github.com/DongshanPI/buildroot-external-dongshanpione</p> </li> <li> <p>\u6784\u5efa\u6b65\u9aa4 <pre><code> git clone https://github.com/DongshanPI/buildroot-external-dongshanpione\n cd buildroot-external-dongshanpione\n make\n</code></pre> \u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u8f93\u51fa\u7684\u6587\u4ef6\u5b58\u653e\u5728 \u6784\u5efa\u76ee\u5f55\u4e0b\u7684 <code>outputs</code> \u76ee\u5f55\u5185,\u6587\u4ef6\u5982\u4e0b\u3002 <pre><code>book@virtual-machine:~/DongshanPiOne/buildroot-external-dongshanpione/outputs$ ls -lh\ntotal 25M\n-rw-r--r-- 1 book book  44K Apr  1 03:20 dongshanpione-ipl\n-rw-r--r-- 1 book book 3.4M Apr  1 03:20 dongshanpione-kernel.fit\n-rw-r--r-- 1 book book 4.4M Apr  1 03:20 dongshanpione-kernel-rescue.fit\n-rw-r--r-- 1 book book 3.5M Apr  1 03:20 dongshanpione-rootfs.squashfs\n-rw-rw-r-- 1 book book  13M Apr  1 03:20 dongshanpione-ubi.img\n-rw-r--r-- 1 book book 465K Apr  1 03:20 dongshanpione-u-boot.img\n-rw-rw-r-- 1 book book 2.0K Apr  1 03:20 GCIS.bin\n-rw-rw-r-- 1 book book  22K Apr  1 03:20 IPL.bin\n</code></pre> \u63a5\u4e0b\u6765\u8fdb\u884c\u70e7\u5199\u64cd\u4f5c\u3002</p> </li> </ul>"},{"location":"DongshanPi-One/19.Buildroot/#_1","title":"\u8fd0\u884c\u6551\u63f4\u7cfb\u7edf","text":""},{"location":"DongshanPi-One/19.Buildroot/#1u-boot-2022","title":"1.\u70e7\u5199u-boot-2022","text":"<ul> <li>\u4f7f\u7528\u5f00\u6e90\u70e7\u5199\u5de5\u5177 \u5148\u70e7\u5199\u7b2c\u4e00\u9636\u6bb5\u5f15\u5bfc\u7a0b\u5e8f\u3002</li> <li>\u5f00\u6e90\u793e\u533a\u5de5\u5177\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\u8bf7\u770b\uff1b\uff0c\u4e0b\u8f7d\u5b89\u88c5\u65b9\u5f0f\u4e5f\u5728\u6b64\u9875\u9762\u3002</li> <li>\u793e\u533a\u7248\u70e7\u5199\u5de5\u5177 \u8fde\u7ebf\u4ecb\u7ecd https://item.taobao.com/item.htm?id=665728385852</li> <li>\u5c06\u70e7\u5199\u5de5\u5177\u8fde\u63a5\u597d\u70e7\u5f55\u7ebf\u540e\uff0c\u5c06\u70e7\u5f55\u5668\u548c\u5f00\u53d1\u677f\u70e7\u5199\u63a5\u53e3\u8fde\u63a5\u597d\uff0c\u62e8\u7801\u5f00\u5173\u5207\u6362\u4e3a\u70e7\u5199\u6a21\u5f0f(\u62e8\u7801\u5f00\u53d1\u767d\u8272\u62e8\u7801\u5207\u6362\u5230\u975eNO\u65b9\u5411)\u3002 </li> </ul> <p>\u4e4b\u540e\u6211\u4eec\u6309\u4e0b \u4e3b\u677f\u4e0a<code>Reset</code>\u952e\uff0c\u540c\u65f6\u6267\u884c\u5982\u4e0b\u70e7\u5199\u547d\u4ee4\uff0c\u5176\u4e2d\u7b2c\u4e00\u53e5\u8bdd<code>sudo SNANDer -p mstarddc -c /dev/i2c-0:49 -e</code>\u662f\u6574\u4e2a \u64e6\u9664 flash \u547d\u4ee4\uff0c\u5efa\u8bae\u6267\u884c\u3002 \u6ce8\u610f:\u70e7\u5199\u64cd\u4f5c\u662f\u5728ubuntu-18\u70e7\u5199\uff0c\u9700\u8981\u5c06\u70e7\u5199\u5de5\u5177\u6302\u8f7d\u5230ubuntu\u7cfb\u7edf\u5185\uff0c\u6302\u8f7d\u6210\u529f\u540e\u7cfb\u7edf\u4f1a\u81ea\u52a8\u88c5\u5728\u9a71\u52a8\u6a21\u5757\uff0c\u6b64\u65f6\u8bbe\u5907\u7ba1\u7406\u5668\u4f1a\u591a\u51fa\u4e00\u4e2a<code>/dev/i2c-0</code>\u7684\u8bbe\u5907\u8282\u70b9\uff0c\u5176\u4e2d\u70e7\u5199\u547d\u4ee4\u4e2d <code>-l</code>\u53c2\u6570\u6307\u5b9a\u7684\u662f\u70e7\u5199\u6587\u4ef6\u7684\u957f\u5ea6(\u5927\u5c0f)\uff0c\u5982\u679c\u4f60\u4fee\u6539\u4e86\u6e90\u7801\u5927\u5c0f\uff0c\u8bf7\u786e\u8ba4\u5927\u5c0f\u662f\u5426\u6b63\u786e\u3002</p> <p>\u5728\u70e7\u5199\u64cd\u4f5c\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u8fdb\u5165\u9700\u8981\u70e7\u5199\u955c\u50cf\u76ee\u5f55\u5185\u3002</p> <p>\u6ce8\u610f\uff1a\u70e7\u5199\u4e4b\u524d\u6216\u70e7\u5199\u65f6\u8bf7\u4e0d\u8981\u6253\u5f00\u4e32\u53e3\u5de5\u5177\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u70e7\u5199\u5931\u8d25\u3002 * \u5982\u4e0b\u4e3a\u8be6\u7ec6\u7684\u70e7\u5199\u547d\u4ee4\uff0c\u9700\u8981\u4f9d\u6b21\u6267\u884c\u3002 <pre><code>sudo SNANDer -p mstarddc -c /dev/i2c-0:49 -e\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -w GCIS.bin\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x140000 -l 0x6000 -w IPL.bin\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x200000  -l 0xB000 -w  dongshanpione-ipl\n</code></pre> \u70e7\u5199\u5b8c\u6210\u7b2c\u4e00\u90e8\u5206\u540e\uff0c\u8bf7\u5148\u62d4\u4e0b\u70e7\u5f55\u5668\uff0c\u4f7f\u7528\u954a\u5b50 \u8c03\u6574\u62e8\u7801\u5f00\u5173\u81f3 <code>ONKE</code>\u5b57\u6bcd\u4e00\u4fa7\uff0c\u4e4b\u540e\u4f7f\u7528 Mobaxterm\u5de5\u5177\uff0c\u6253\u5f00\u4e32\u53e3\u7ec8\u7aef\uff0c\u6253\u5f00\u7ec8\u7aef\u540e\uff0c\u6309\u4e0b <code>reset</code>\u590d\u4f4d\u6309\u94ae\uff0c\u5373\u53ef\u770b\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684log\u542f\u52a8\u4fe1\u606f\u3002</p> <p><pre><code>IPL g76cd9eb\nD-1e\nHW Reset\nmiupll_233MHz\nMIU0 zq=0x003b\nmiu_bw_set\nutmi_1_init done\nutmi_2_init done\nutmi_3_init done\nusbpll init done......\ncpupll init done\nSPI 54M\nclk_init done\nP1 USB_rterm trim=0x0000\nP1 USB_HS_TX_CURRENT trim=0x0000\nP2 USB_rterm trim=0x0000\nP2 USB_HS_TX_CURRENT trim=0x0001\nP3 USB_rterm trim=0x0000\nP3 USB_HS_TX_CURRENT trim=0x0001\nPM_vol_bgap trim=0x0002\nGCR_SAR_DATA trim=0x0193\nETH 10T output swing trim=0x0010\nETH 100T output swing trim=0x0010\nETH RX input impedance trim=0x0000\nETH TX output impedance trim=0x0001\nMIPI_HS_RTERM trim=0x0001\nMIPI_LP_RTERM trim=0x0000\n128MB\nBIST0_0001-OK\nEnable MMU and CACHE\nLoad IPL_CUST from SPINAND\nQUAD MODE ENABLE\nunable to find IDX for part type:0001\n[I]m7\nChecksum OK\n\ncpuid: 410fc075, mstar chipid: f0\nIPL image is broken\nnormal power on\nwrote 1f206540 &lt;- 4bc7 was 4bc7, readback 4bc7\nwrote 1f206544 &lt;- 0037 was 0037, readback 0037\nwrote 1f206548 &lt;- b3d5 was 0000, readback b3d5\nwrote 1f20654c &lt;- 0043 was 0000, readback 0043\nwrote 1f206560 &lt;- 0001 was 0000, readback 0001\nwrote 1f206554 &lt;- 0006 was 0006, readback 0006\nwrote 1f20655c &lt;- 0008 was 0008, readback 0008\nwrote 1f206564 &lt;- 1000 was 0000, readback 1000\nwrote 1f206550 &lt;- 0000 was 0000, readback 0000\nwrote 1f206550 &lt;- 0001 was 0000, readback 0001\nwrote 1f20442c &lt;- 0001 was 0000, readback 0001\nwrote 1f203ddc &lt;- 0004 was 0000, readback 0004\nwrote 1f203dd4 &lt;- 4004 was 0000, readback 4004\nwrote 1f203dd8 &lt;- 0001 was 0000, readback 0001\nwrote 1f203dc0 &lt;- 0000 was 0000, readback 0000\nwrote 1f203dc0 &lt;- 8000 was 0000, readback 8000\ndelaying for 100\nreadback: 4278\nmplldbg 2\nmpll: 0 - 0\nmpll: 4 - 0\nmpll: 8 - 0\nmpll: c - 0\nmpll: 10 - 0\nTrying to boot from SPI NAND(UBI)\nset speed: 100000\nset mode: 0\nUBI: Bad magic in block 0490 00000000\nUBI: Bad magic in block 0491 00000000\nUBI: Bad magic in block 0493 00000000\nUBI: Bad magic in block 0746 00000000\nUBI: Bad magic in block 01001 00000000\nUBI: Loading VolId #0\nUBI warning: LEB 0 of 1 is missing\nUBI warning: Failed to load volume 0\nUBI: Bad magic in block 0490 00000000\nUBI: Bad magic in block 0491 00000000\nUBI: Bad magic in block 0493 00000000\nUBI: Bad magic in block 0746 00000000\nUBI: Bad magic in block 01001 00000000\nUBI: Loading VolId #0\nUBI warning: LEB 0 of 1 is missing\nUBI warning: Failed to load volume 0\nUBI warning: Failed\nTrying to boot from UART\nCC\n</code></pre> \u4e4b\u540e\u6211\u4eec\u6839\u636e\u63d0\u793a\u4fe1\u606f \u4f7f\u7528\u4e32\u53e3\u53d1\u9001\u534f\u8bae  Z-modem \u6216\u8005 Y-modem \u5c06\uff0c<code>u-boot.img</code> \u4e5f\u5c31\u662f\u7b2c\u4e8c\u90e8\u5206<code>dongshanpione-u-boot.img</code>\u53d1\u9001\u5230\u7ed9 \u4e1c\u5c71PI\u58f9\u53f7\u7684 IPL \u7a0b\u5e8f\uff0c\u7528\u4e8e\u52a0\u8f7d\u5e76\u542f\u52a8\u8fdb\u5165u-boot\u547d\u4ee4\u884c\u3002</p> <p>\u6211\u4eec\u5df2 Mobaxterm\u4e3a\u4f8b\uff0c\u5728\u7cfb\u7edf\u542f\u52a8\u6253\u5370 <code>C</code>\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u53c2\u8003\u4e0b\u5c5e\u64cd\u4f5c\u5728\u5f53\u524d\u4e32\u53e3\u7ec8\u7aef\uff0c\u53f3\u952e \u5f39\u51fa\u83dc\u5355\u9009\u9879\uff0c\u79fb\u52a8\u5230**Send file using Z-modem** \u9879\uff0c\u4e4b\u540e\u518d\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9\u8981\u53d1\u9001\u7684 <code>dongshanpione-u-boot.img</code>  \u955c\u50cf\u6587\u4ef6\uff0c\u7b49\u5f85\u53d1\u9001\u5b8c\u6210\u5373\u53ef\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 </p> <p><pre><code>CCCSending: dongshanpione-u-boot.img\n</code></pre> \u9884\u8ba1\u7b49\u5f851 \u5206\u949f\u5de6\u53f3\u3002\u4f20\u8f93\u5b8c\u6210\u540e\uff0c\u4f1a\u63d0\u793a **Transfer complete**\u8868\u793a\u5b8c\u6210\uff0c\u7136\u540e\u4f1a\u81ea\u52a8\u542f\u52a8 U-Boot\u955c\u50cf\u4e86\u3002</p> <pre><code>Transfer complete\nLoaded 475852 bytes\n\n\nU-Boot 2022.04-rc2 (Mar 08 2022 - 22:03:20 +0000)\n\nDRAM:  128 MiB\nwrote 1f206540 &lt;- 4bc7 was 4bc7, readback 4bc7\nwrote 1f206544 &lt;- 0037 was 0037, readback 0037\nwrote 1f206548 &lt;- b3d5 was b3d5, readback b3d5\nwrote 1f20654c &lt;- 0043 was 0043, readback 0043\nwrote 1f206560 &lt;- 0001 was 0001, readback 0001\nwrote 1f206554 &lt;- 0006 was 0006, readback 0006\nwrote 1f20655c &lt;- 0008 was 0008, readback 0008\nwrote 1f206564 &lt;- 1000 was 1000, readback 1000\nwrote 1f206550 &lt;- 0000 was 0001, readback 0000\nwrote 1f206550 &lt;- 0001 was 0000, readback 0001\nwrote 1f20442c &lt;- 0001 was 0001, readback 0001\nwrote 1f203ddc &lt;- 0004 was 0004, readback 0004\nwrote 1f203dd4 &lt;- 4004 was 4004, readback 4004\nwrote 1f203dd8 &lt;- 0001 was 0001, readback 0001\nwrote 1f203dc0 &lt;- 0000 was 8000, readback 0000\nwrote 1f203dc0 &lt;- 8000 was 0000, readback 8000\ndelaying for 100\nreadback: 4277\nmpll here!\nmpll here xxxx!\nchecking 26f84528 26f84528\nfound parent at 0\nmpll is already running\nCore:  43 devices, 16 uclasses, devicetree: fit\nWDT:   Started watchdog@6000 with servicing (60s timeout)\nMMC:   MSC: 0\nLoading Environment from UBI... set speed: 100000\nset mode: 0\nVolume env not found!\n\n** Unable to read env from UBI:env **\nIn:    uart@221000\nOut:   uart@221000\nErr:   uart@221000\nNet:   mstar pinctrl g 0, f 0\nfound selector\nchecking 26f85630 26f85630\nfound parent at 0\nemac patches\nrx ring 26fcdb40\neth0: emac@2a2000\nHit any key to stop autoboot:  0\nVolume kernel not found!\nWrong Image Format for bootm command\nERROR: can't get kernel image!\n=&gt;\n</code></pre> <p>\u8fdb\u5165\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u63a5\u4e0b\u6765\u5148\u8fd0\u884c \u6700\u5c0f\u7684 Linux \u6551\u63f4\u7cfb\u7edf\uff0c\u8fdb\u5165\u7cfb\u7edf\u540e \u628a\u5404\u4e2a\u90e8\u5206\u955c\u50cf \u70e7\u5199\u5230nand flash\u5185\u3002</p>"},{"location":"DongshanPi-One/19.Buildroot/#2","title":"2.\u8fd0\u884c\u5185\u6838\u7cfb\u7edf","text":"<p>\u63a5\u4e0b\u6765 \u6211\u4eec\u9700\u8981\u901a\u8fc7\u7f51\u7edctftp\u52a0\u8f7d\u8fd0\u884c\u5185\u6838\uff0c\u6216\u8005\u901a\u8fc7\u4e32\u53e3\u4e0b\u8f7d\u5e76\u8fd0\u884c\u5185\u6838\u3002</p>"},{"location":"DongshanPi-One/19.Buildroot/#tftp","title":"\u4f7f\u7528\u7f51\u7edctftp\u65b9\u5f0f\u4e0b\u8f7d(\u63a8\u8350)","text":"<ul> <li>\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u914d\u7f6e\u597d ubuntu\u7cfb\u7edf\u7684tftp \u670d\u52a1\uff0c\u5e76\u5c06\u6211\u4eec\u4e4b\u524d\u7f16\u8bd1\u597d\u7684 <code>dongshanpione-kernel-rescue.fit</code> \u6587\u4ef6\u62f7\u8d1d\u5230\u914d\u7f6e\u597d\u7684  tftp \u76ee\u5f55\u4e0b\uff0c\u4e4b\u540e\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u7684ubuntu host\u4e3b\u673aIP\u5730\u5740\uff0c\u53c2\u8003\u4e0b\u5c5e\u547d\u4ee4\u8fd0\u884c\uff0c\u5982\u4e0b\u793a\u4f8b\u6240\u793a\uff0c\u6211\u4eec\u7684 \u5b58\u653e kernel\u955c\u50cf\u7684 ubuntu tftp\u670d\u52a1\u5668\u4e3b\u673a IP\u5730\u5740\u662f 192.168.1.133 \uff0c\u4f60\u9700\u8981\u6839\u636e\u4f60\u7684\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\u3002</li> </ul> <pre><code>=&gt; setenv loadaddr 0x22000000; dhcp 192.168.1.133:dongshanpione-kernel-rescue.fit;bootm 0x22000000#ssd202d-dongshanpione\n</code></pre> <p>\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5b83\u4f1a\u81ea\u52a8\u4eceubuntu\u7684tftp\u76ee\u5f55\u4e0b\u4e0b\u8f7d\u4f60\u7684\u5185\u6838\u955c\u50cf\u6587\u4ef6\uff0c\u7136\u540e\u542f\u52a8\uff0c\u7c7b\u4f3c\u5982\u4e0b\u6253\u5370\u6d88\u606f\u8f93\u51fa <pre><code>emac@2a2000: PHY present at 0\nPHY reset timed out\nphy power up\nDoing phy power up\nemac@2a2000: Starting autonegotiation...\nemac@2a2000: Autonegotiation complete\nemac@2a2000: link up, 100Mbps full-duplex (lpa: 0xcde1)\nBOOTP broadcast 1\nBOOTP broadcast 2\nBOOTP broadcast 3\nDHCP client bound to address 192.168.1.53 (793 ms)\nUsing emac@2a2000 device\nTFTP from server 192.168.1.133; our IP address is 192.168.1.53\nFilename 'dongshanpione-kernel-rescue.fit'.\nLoad address: 0x22000000\nLoading: #################################################################\n         #################################################################\n         #################################################################\n         #################################################################\n         ######################################################\n         3.4 MiB/s\ndone\nBytes transferred = 4607292 (464d3c hex)\n## Loading kernel from FIT Image at 22000000 ...\n   Using 'ssd202d-dongshanpione' configuration\n   Trying 'kernel-0' kernel subimage\n     Description:  unavailable\n     Type:         Kernel Image\n     Compression:  uncompressed\n     Data Start:   0x220000a4\n     Data Size:    3403824 Bytes = 3.2 MiB\n     Architecture: ARM\n     OS:           Linux\n     Load Address: 0x21800000\n     Entry Point:  0x21800000\n     Hash algo:    crc32\n     Hash value:   dc0ebb3a\n     Hash algo:    sha1\n     Hash value:   881943efc7cf947392bffd3ae624733f2507bd35\n   Verifying Hash Integrity ... crc32+ sha1+ OK\n## Loading ramdisk from FIT Image at 22000000 ...\n   Using 'ssd202d-dongshanpione' configuration\n   Trying 'ramdisk-0' ramdisk subimage\n     Description:  unavailable\n     Type:         RAMDisk Image\n     Compression:  uncompressed\n     Data Start:   0x2234c650\n     Data Size:    1147180 Bytes = 1.1 MiB\n     Architecture: ARM\n     OS:           Linux\n     Load Address: unavailable\n     Entry Point:  unavailable\n     Hash algo:    crc32\n     Hash value:   c40c3d1c\n     Hash algo:    sha1\n     Hash value:   702d8f01c746bdfbfcaebd4572b95ecf32e3bf7c\n   Verifying Hash Integrity ... crc32+ sha1+ OK\n## Loading fdt from FIT Image at 22000000 ...\n   Using 'ssd202d-dongshanpione' configuration\n   Trying 'fdt-1' fdt subimage\n     Description:  unavailable\n     Type:         Flat Device Tree\n     Compression:  uncompressed\n     Data Start:   0x22345c04\n     Data Size:    27001 Bytes = 26.4 KiB\n     Architecture: ARM\n     Hash algo:    crc32\n     Hash value:   4ed1ac67\n     Hash algo:    sha1\n     Hash value:   6209734a29f8a3c9f2ba1329135358d6bbda62d4\n   Verifying Hash Integrity ... crc32+ sha1+ OK\n   Booting using the fdt blob at 0x22345c04\n   Loading Kernel Image\n   Loading Ramdisk to 26e64000, end 26f7c12c ... OK\n   Loading Device Tree to 26e5a000, end 26e63978 ... OK\n\nStarting kernel ...\n\n[    0.000000] Booting Linux on physical CPU 0x0\n[    0.000000] Linux version 5.17.0 (buildroot@buildroot) (arm-buildroot-linux-musleabihf-gcc.br_real (Buildroot 2022.02-349-g1506ff275b) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP Mon Mar 28 12:29:22 UTC 2022\n</code></pre> \u7b49\u5f85\u542f\u52a8\u540e \u53ef\u4ee5\u8f93\u5982 \u7528\u6237\u540d <code>root</code>\u8fdb\u5165\u7cfb\u7edf\u3002</p>"},{"location":"DongshanPi-One/19.Buildroot/#_2","title":"\u4f7f\u7528\u4e32\u53e3\u534f\u8bae\u53d1\u9001","text":"<ul> <li>\u5bf9\u4e8e\u6ca1\u6709\u7f51\u7edc\u6216\u8005\u73af\u5883\u4e0d\u65b9\u4fbf\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u5728u-boot\u4e0b\u4f7f\u7528 \u4e32\u53e3\u534f\u8bae\u8fdb\u884c\u4f20\u8f93 kernel  \u955c\u50cf\uff0c\u6b64\u65b9\u6cd5\u4f20\u8f93\u975e\u5e38\u6162\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 \u6211\u4eec\u53ea\u9700\u8981\u5728 u-boot \u547d\u4ee4\u884c\u4e0b\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff0c\u4e4b\u540e\u5c06\u6b21\u4e32\u53e3\u7ec8\u7aef\u65ad\u5f00\uff0c\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a \u6ce2\u7279\u7387 \u4e3a  460800 \u7684\u4e32\u53e3\u7ec8\u7aef\uff0c\u4e4b\u540e \u6839\u636e\u63d0\u793a \u4f7f\u7528 Z-modem \u547d\u4ee4\u8fdb\u884c\u4f20\u8f93\u6587\u4ef6\u3002 <pre><code>setenv loadaddr 0x22000000; loady ${loadaddr} 460800; bootm\n</code></pre></li> </ul> <p>\u4f20\u8f93\u5b8c\u6210\u540e\uff0c\u6839\u636e\u63d0\u793a\uff0c\u65ad\u5f00\u5f53\u524d \u4e32\u53e3\u7ec8\u7aef\uff0c\u4e4b\u540e\u5207\u6362\u56de\u539f\u6765\u7684 115200 \u6ce2\u7279\u7387\u7ec8\u7aef\uff0c\u6309\u4e0b \u952e\u76d8 <code>ESC</code>\u952e\uff0c\u5373\u53ef\u81ea\u52a8\u52a0\u8f7d\u542f\u52a8\u7cfb\u7edf\u3002 \u542f\u52a8\u4fe1\u606f \u7c7b\u4f3c\u4e0a\u8ff0logo\u3002</p>"},{"location":"DongshanPi-One/19.Buildroot/#3flash","title":"3.\u70e7\u5199\u7cfb\u7edf\u81f3flash","text":"<p>\u6839\u636e\u4e0a\u8ff0\u64cd\u4f5c \u6211\u4eec\u5df2\u7ecf\u8fdb\u5165\u5230 kernel\u7684\u6551\u63f4\u7cfb\u7edf\u5185\uff0c\u4e4b\u540e\u7ee7\u7eed\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\u5c06\u6211\u4eec\u7f16\u8bd1\u597d\u7684\u7cfb\u7edf\u955c\u50cf\u70e7\u5f55\u81f3\u677f\u8f7d\u7684 Nandflash \u82af\u7247\u5185\u3002</p>"},{"location":"DongshanPi-One/19.Buildroot/#1","title":"1.\u683c\u5f0f\u5316\u521b\u5efa\u5206\u533a","text":"<ul> <li>\u5982\u4e0b\u547d\u4ee4\u6240\u793a\uff0c\u9700\u8981\u9996\u5148\u683c\u5f0f\u5316Nandflash \u5e76\u521b\u5efa\u5404\u4e2a\u90e8\u5206\u7684\u955c\u50cf\u5206\u533a\u3002 <pre><code>ubiformat /dev/mtd1\nubiattach -m 1\nubimkvol /dev/ubi0 -N uboot -s 1MiB -t static\nubimkvol /dev/ubi0 -N env -s 256KiB\nubimkvol /dev/ubi0 -N kernel -s 16MiB\nubimkvol /dev/ubi0 -N rescue -s 16MiB\nubimkvol /dev/ubi0 -N rootfs -m\n</code></pre></li> </ul>"},{"location":"DongshanPi-One/19.Buildroot/#2_1","title":"2.\u62f7\u8d1d\u5e76\u70e7\u5199","text":"<ul> <li>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528nfs\u7f51\u7edc\u6302\u8f7d\u7684\u65b9\u5f0f\uff0c\u8fdb\u884c\u62f7\u8d1d\u70e7\u5199\u8fd9\u4e9b\u6587\u4ef6\u3002 <pre><code>mount -t nfs -o nolock 192.168.1.133:/home/book/nfs_rootfs /mnt \n</code></pre></li> </ul>"},{"location":"DongshanPi-One/19.Buildroot/#1_1","title":"1.\u70e7\u5199\u6551\u63f4\u7cfb\u7edf","text":"<ul> <li> <p>\u70e7\u5199u-boot\u955c\u50cf <pre><code>ubiupdatevol /dev/ubi0_0 dongshanpione-u-boot.img\n</code></pre></p> </li> <li> <p>\u70e7\u5199\u6551\u63f4kernel\u955c\u50cf <pre><code>ubiupdatevol /dev/ubi0_3 dongshanpione-kernel-rescue.fit\n</code></pre></p> </li> </ul> <p>\u70e7\u5199\u5b8c\u6210\u540e\uff0c\u91cd\u65b0\u590d\u4f4d\uff0c\u8fdb\u5165uboot\u547d\u4ee4\u884c\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8bbe\u7f6e\u542f\u52a8\u53c2\u6570,\u5373\u53ef\u81ea\u52a8\u4ece\u521a\u624d\u70e7\u5199\u597d\u7684\u5206\u533a\u52a0\u8f7d\u6551\u63f4\u7cfb\u7edf\u955c\u50cf\u5e76\u542f\u52a8\u3002 <pre><code>setenv loadaddr 0x22000000; ubi readvol ${loadaddr} rescue 0x800000; bootm\n</code></pre></p>"},{"location":"DongshanPi-One/19.Buildroot/#2_2","title":"2.\u70e7\u5199\u5185\u6838\u548c\u6839\u6587\u4ef6\u7cfb\u7edf","text":"<ul> <li> <p>\u70e7\u5199\u6b63\u5e38\u7684kernel\u955c\u50cf\u6587\u4ef6 <pre><code>ubiupdatevol /dev/ubi0_2 dongshanpione-kernel.fit\n</code></pre></p> </li> <li> <p>\u70e7\u5199\u6839\u6587\u4ef6\u7cfb\u7edf <pre><code>ubiupdatevol /dev/ubi0_4 dongshanpione-rootfs.squashfs\n</code></pre></p> </li> <li> <p>\u5728uboot\u4e0b\u8bbe\u7f6e\u542f\u52a8\u53c2\u6570\uff0c\u5e76\u4fdd\u5b58\u5230env\u5185\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u65e0\u9700\u4efb\u4f55\u64cd\u4f5c \u5b8c\u6574\u7684\u4ece\u7cfb\u7edf\u542f\u52a8\u4e86\u3002 <pre><code>setenv bootargs console=ttyS0,115200 ubi.mtd=1 ubi.block=0,4 root=/dev/ubiblock0_4 clk_ignore_unused\nsetenv bootcmd 'setenv loadaddr 0x22000000; ubi readvol ${loadaddr} kernel 0x800000; bootm ${loadaddr}#ssd202d-dongshanpione'\n</code></pre></p> </li> </ul>"},{"location":"DongshanPi-One/19.OpensourceMstarTools/","title":"Mstar Tools","text":""},{"location":"DongshanPi-One/19.OpensourceMstarTools/#_1","title":"\u70e7\u5199\u5de5\u5177\u652f\u6301","text":"<ul> <li>I2C\u82af\u7247\u70e7\u5f55\u5668 https://github.com/harbaum/I2C-Tiny-USB/tree/master/digispark</li> <li>\u70e7\u5f55\u5de5\u5177\u6e90\u7801\u4ed3\u5e93\u5730\u5740  https://github.com/fifteenhex/SNANDer/tree/mstar</li> </ul>"},{"location":"DongshanPi-One/19.OpensourceMstarTools/#snander","title":"\u5b89\u88c5SNANDer","text":"<ul> <li>\u4e0b\u8f7d\u83b7\u53d6SNANDer: https://cowtransfer.com/s/a6f7006b4fd64f \u4e0b\u8f7d\u6210\u529f\u540e\u76f4\u63a5\u62f7\u8d1d\u5230Ubuntu\u7cfb\u7edf\u7684home\u76ee\u5f55\u4e0b\u3002     \u4e4b\u540e\u53c2\u8003\u5982\u4e0b\u793a\u4f8b\u62f7\u8d1d\u5230\u7cfb\u7edf\u76ee\u5f55\u4e0b <pre><code>chmod +x   SNANDer\nsudo cp  SNANDer /usr/bin/\nsudo  apt install udev   libusb\n</code></pre></li> </ul>"},{"location":"DongshanPi-One/19.OpensourceMstarTools/#_2","title":"\u4f7f\u7528\u8bf4\u660e","text":"<pre><code>SNANDer - Serial Nor/nAND/Eeprom programmeR v.1.7.2 by McMCC &lt;mcmcc@mail.ru&gt;\n\n  Usage:\n -h             display this message\n -p             programmer {ch341a|mstarddc} (default ch341a)\n -c             programmer connection string\n -d             disable internal ECC(use read and write page size + OOB size)\n -I             ECC ignore errors(for read test only)\n -L             print list support chips\n -i             read the chip ID info\n -E             select I2C EEPROM {24c01|24c02|24c04|24c08|24c16|24c32|24c64|24c128|24c256|24c512|24c1024}\n                select Microwire EEPROM {93c06|93c16|93c46|93c56|93c66|93c76|93c86|93c96} (need SPI-to-MW adapter)\n -8             set organization 8-bit for Microwire EEPROM(default 16-bit) and set jumper on SPI-to-MW adapter\n -f &lt;addr len&gt;  set manual address size in bits for Microwire EEPROM(default auto)\n -e             erase chip(full or use with -a [-l])\n -l &lt;bytes&gt;     manually set length\n -a &lt;address&gt;   manually set address\n -w &lt;filename&gt;  write chip with data from filename\n -r &lt;filename&gt;  read chip and save data to filename\n -v             verify after write on chip\n</code></pre>"},{"location":"DongshanPi-One/19.OpensourceMstarTools/#linuxu-boot","title":"\u70e7\u5199Linux\u677fu-boot","text":"<p>*\u53c2\u8003\u8fd9\u4e2a\u9875\u9762 http://linux-chenxing.org/infinity2/dongshanpione/</p>"},{"location":"DongshanPi-One/19.OpensourceMstarTools/#boot","title":"\u70e7\u5199\u539f\u5382boot\u793a\u4f8b","text":"<p>\u6ce8\u610f:\u70e7\u5199\u547d\u4ee4\u4e2d <code>-l</code>\u53c2\u6570\u6307\u5b9a\u7684\u662f\u70e7\u5199\u6587\u4ef6\u7684\u957f\u5ea6(\u5927\u5c0f)\uff0c\u5982\u679c\u4f60\u4fee\u6539\u4e86<code>u-boot_spinand.xz.img.bin</code>\u6587\u4ef6\uff0c\u8bf7\u786e\u8ba4\u5927\u5c0f\u662f\u5426\u5728\u8fd9\u4e2a\u533a\u57df\u5185\u3002 <pre><code>sudo SNANDer -p mstarddc -c /dev/i2c-0:49 -e\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -w GCIS.bin\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x140000 -l 0x6000 -w IPL.bin\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x200000 -l 0x5800 -w IPL_CUST.bin\n\nsudo SNANDer -p mstarddc -c /dev/i2c-0:49 -a 0x2C0000 -l 0x3B800 -w u-boot_spinand.xz.img.bin\n</code></pre></p>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction.ES/","title":"01 BoardIntroduction.ES","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p> <ul> <li>El precio de la placa de desarrollo se acerca al costo de producci\u00f3n y solo se proporcionan materiales y documentos de desarrollo de SDK originales de la f\u00e1brica, \u00a1sin ning\u00fan soporte t\u00e9cnico adicional!</li> <li>Cualquier problema con esta placa de desarrollo se puede discutir y compartir en nuestro foro en https://forums.100ask.net/c/10-category/picow</li> </ul>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction.ES/#introduccion-de-la-placa-de-desarrollo-dongshanpi-picow","title":"Introducci\u00f3n de la placa de desarrollo DongshanPI-PicoW","text":"<p>La placa de desarrollo DongshanPI-PicoW utiliza la combinaci\u00f3n de tecnolog\u00eda de StarChip SSD210 y SSW101B usb WiFi, con un dise\u00f1o de pines de 2,0 mm y agujeros de estampado, y solo necesita una entrada de alimentaci\u00f3n de 5V para arrancar el sistema de la placa de desarrollo.</p>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction.ES/#introduccion-a-la-configuracion-de-parametros-minimos-de-la-placa","title":"Introducci\u00f3n a la configuraci\u00f3n de par\u00e1metros m\u00ednimos de la placa","text":"<ul> <li>SigMastar SSD210</li> <li>ARM Cortex-A7 Dual Core 1 GHz con Neon y FPU</li> <li>M\u00e1ximo de dos interfaces MIPI con 2 o 1 carril de datos y 2 carriles de reloj</li> <li>Salida TTL hasta 1280x800 60fps</li> <li>Entradas MIC y DMIC, I2S TDM de l\u00ednea de salida de 8 canales, RX de 2/4/8 canales, TX de 2 canales</li> <li>SDIO 2.0 x1</li> <li>USB 2.0 x1</li> <li>64MB DDR2</li> <li>Ethernet x1</li> <li>Motores de seguridad</li> <li>SPI x2, I2C x2, UART x4, PWM x4</li> <li>SSW101B</li> <li>WiFi USB 1T1R de 2,4 GHz</li> <li>IEEE 802.11b/g/n</li> <li>CPU RISC de 32 bits a 150 MHz</li> <li>Admite ancho de banda HT20/40 MHz</li> <li>Memoria Flash NAND SPI Winbond 128MB (W25Q128)</li> <li>Conmutador USB 2.0 Onseemi (480MBbps) (FSUSB30)</li> </ul> <p>Diagrama de la apariencia de la placa de desarrollo</p> <p></p> <ul> <li>Esquema de circuito complementario: https://forums.100ask.net/uploads/short-url/jM5L1WocV3O5xZRiRpLYRlEBVNg.pdf</li> <li>Imagen del sistema predeterminado: https://dongshanpi.cowtransfer.com/s/639100d687674c</li> </ul>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction.ES/#tablero-inferior-de-20-mm-a-254-mm-de-acompanamiento","title":"Tablero inferior de 2,0 mm a 2,54 mm de acompa\u00f1amiento","text":"<p>Como se muestra en la figura siguiente, suelde la placa principal a la placa de adaptador correspondiente de los pines y su\u00e9ldela a la placa inferior. Esta placa inferior se puede conectar a una placa perforada y se puede desarrollar a trav\u00e9s de 7 l\u00edneas + cabeza micro usb + herramienta de conversi\u00f3n usb a serie.</p> <p></p>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction.ES/#tablero-de-desarrollo-de-funciones-basicas-de-acompanamiento","title":"Tablero de desarrollo de funciones b\u00e1sicas de acompa\u00f1amiento","text":"<p>\u00a1Se espera que se lance la pr\u00f3xima semana!</p>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction/","title":"\u4e3b\u677f\u7b80\u4ecb","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p> <ul> <li>\u5f00\u53d1\u677f\u4ef7\u683c\u5df2\u7ecf\u8d34\u8fd1\u751f\u4ea7\u4ef7\uff0c\u53ea\u63d0\u4f9b \u539f\u5382SDK\u7684\u5f00\u53d1\u8d44\u6599\u548c\u6587\u6863\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u6280\u672f\u652f\u6301\uff01</li> <li>\u6b64\u5f00\u53d1\u677f\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u8bba\u575b\u4ea4\u6d41\u8ba8\u8bba https://forums.100ask.net/c/10-category/picow</li> </ul>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction/#dongshanpi-picow","title":"DongshanPI-PicoW\u5f00\u53d1\u677f\u4ecb\u7ecd","text":"<p>DongshanPI-PicoW \u5f00\u53d1\u677f\u4f7f\u7528 \u661f\u5bb8\u79d1\u6280 SSD210 + SSW101B usb WiFi\u7ec4\u6210\uff0c\u91c7\u75282.0mm\u6392\u9488+\u90ae\u7968\u5b54\u8bbe\u8ba1\uff0c\u53ea\u9700\u89815V\u4f9b\u7535\u8f93\u5165\u5c31\u53ef\u4ee5\u542f\u52a8\u4f7f\u7528\u5f00\u53d1\u677f\u7cfb\u7edf\u3002</p>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction/#_1","title":"\u6700\u5c0f\u677f\u53c2\u6570\u914d\u7f6e\u4ecb\u7ecd","text":"<ul> <li>SigMastar SSD210</li> <li>ARM Cortex-A7 Dual Core 1 GHz with Neon and FPU</li> <li>Max.two MIPI interfaces with 2 or 1 data lane and 2 clock lanes</li> <li>TTL output up to 1280x800 60fps</li> <li>MIC and DMIC inputs\uff0clineout I2S TDM 8-channel, RX 2/4/8 channels, TX 2 channels</li> <li>SDIO 2.0 x1</li> <li>USB 2.0 x1</li> <li>64MB DDR2</li> <li>Ethernet x1</li> <li>Security Engines</li> <li>SPI x2 I2C x2 UART x4 PWM x4</li> <li>SSW101B</li> <li>2.4GHz 1T1R USB Wifi</li> <li>IEEE 802.11b/g/n</li> <li>32Bit RISC 150MHz  CPU</li> <li>Support HT20/40MHz Bandwidth</li> <li>Winbond SPI NAND FLASH 128MB (W25Q128)</li> <li>Onseemi  USB 2.0 (480MBbps) Switch  (FSUSB30)</li> </ul> <p>\u5f00\u53d1\u677f\u5916\u89c2\u793a\u610f\u56fe </p> <p></p> <ul> <li>\u914d\u5957\u539f\u7406\u56fe\uff1a     https://forums.100ask.net/uploads/short-url/jM5L1WocV3O5xZRiRpLYRlEBVNg.pdf</li> <li>\u9ed8\u8ba4\u7cfb\u7edf\u955c\u50cf\uff1a  https://dongshanpi.cowtransfer.com/s/639100d687674c </li> </ul>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction/#20mmto254","title":"\u914d\u59572.0mmTo2.54\u5e95\u677f","text":"<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c06\u6838\u5fc3\u677f  \u4e0e \u8f6c\u63a5\u677f Pin\u811a\u5bf9\u5e94\uff0c\u710a\u63a5\u81f3\u5e95\u677f\u4e0a\uff0c\u6b64\u5e95\u677f\u53ef\u4ee5\u8fde\u63a5\u81f3\u6d1e\u6d1e\u677f\u4e0a\uff0c\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b07\u6839\u7ebf \u52a0 micro usb\u5934 + usb\u8f6c\u4e32\u53e3\u5de5\u5177\u5b9e\u73b0\u5f00\u53d1\u3002</p> <p></p>"},{"location":"DongshanPi-PicoW/01-BoardIntroduction/#_2","title":"\u914d\u5957\u57fa\u7840\u529f\u80fd\u5f00\u53d1\u5e95\u677f","text":"<p>\u9884\u8ba1\u4e0b\u5468\u4e0a\u67b6\uff01</p>"},{"location":"DongshanPi-PicoW/02-SupportingResources.ES/","title":"02 SupportingResources.ES","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/02-SupportingResources.ES/#recursos-complementarios","title":"Recursos Complementarios","text":""},{"location":"DongshanPi-PicoW/02-SupportingResources.ES/#1-informacion-del-desarrollo-del-tablero","title":"1. Informaci\u00f3n del desarrollo del tablero","text":"<ul> <li>Esquema del circuito de DongshanPI-D1s</li> <li>Imagen del sistema por defecto</li> <li>Documentos del SDK, probados por la f\u00e1brica, que se encuentran en el sitio web</li> <li>Ejemplos de dise\u00f1o de hardware para tableros complementarios</li> </ul>"},{"location":"DongshanPi-PicoW/02-SupportingResources.ES/#2-informacion-de-la-fabrica","title":"2. Informaci\u00f3n de la f\u00e1brica","text":"<ul> <li>P\u00e1gina web en chino: https://wx.comake.online/doc/doc/SigmaStarDocs-SSD220-SIGMASTAR-202202100949/</li> <li>P\u00e1gina web en ingl\u00e9s: https://wx.comake.online/doc/doc/IKAYAKI_EN/</li> </ul>"},{"location":"DongshanPi-PicoW/02-SupportingResources/","title":"\u914d\u5957\u8d44\u6e90","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/02-SupportingResources/#_1","title":"\u914d\u5957\u8d44\u6e90","text":""},{"location":"DongshanPi-PicoW/02-SupportingResources/#1","title":"1. \u5f00\u53d1\u677f\u8d44\u6599","text":"<ul> <li>DongshanPI-D1s\u539f\u7406\u56fe</li> <li>\u9ed8\u8ba4\u7cfb\u7edf\u955c\u50cf</li> <li>\u539f\u5382\u914d\u5957\u8bd5\u9a8c\u8fc7\u7684SDK\u6587\u7ae0\uff0c\u4e5f\u5c31\u662f\u6b64\u7ad9\u70b9\u6587\u7ae0</li> <li>\u914d\u5957\u5e95\u677f\u786c\u4ef6\u5de5\u7a0b\u793a\u4f8b\u5c01\u88c5</li> </ul>"},{"location":"DongshanPi-PicoW/02-SupportingResources/#2","title":"2. \u539f\u5382\u8d44\u6599","text":"<ul> <li>\u4e2d\u6587\u9875\u9762\uff1a https://wx.comake.online/doc/doc/SigmaStarDocs-SSD220-SIGMASTAR-202202100949/</li> <li>\u82f1\u6587\u9875\u9762\uff1ahttps://wx.comake.online/doc/doc/IKAYAKI_EN/</li> </ul>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/","title":"03 1 FlashSystem.ES","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/#actualizacion-de-la-imagen-del-sistema","title":"Actualizaci\u00f3n de la imagen del sistema","text":""},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/#grabacion-mediante-usb","title":"Grabaci\u00f3n mediante USB","text":"<p>DongshanPI-PicoW es una placa de desarrollo extremadamente peque\u00f1a que puede funcionar directamente con una entrada de voltaje de 5V. Puede hacer referencia a las cuatro flechas en la imagen de la derecha a continuaci\u00f3n y conectar un m\u00f3dulo Micro USB a:</p> <ul> <li><code>P36 USB_DM</code> conectado a la se\u00f1al <code>D-</code> del m\u00f3dulo MicroUSB.</li> <li><code>P35 USB_DP</code> conectado a la se\u00f1al <code>D+</code> del m\u00f3dulo MicroUSB.</li> <li><code>P34 GND</code> conectado a la se\u00f1al <code>GND</code> del m\u00f3dulo MicroUSB.</li> <li><code>P31 5V</code> conectado a la se\u00f1al <code>VBUS</code> del m\u00f3dulo MicroUSB.</li> </ul> <p>Nota: Si anteriormente estaba utilizando una alimentaci\u00f3n de 5V a trav\u00e9s de un puerto serie, debe desconectar primero la alimentaci\u00f3n de 5V del puerto serie antes de conectar el pin 5V del MicroUSB en esta secci\u00f3n.</p> <p>Nota: Si anteriormente estaba utilizando una alimentaci\u00f3n de 5V a trav\u00e9s de un puerto serie, debe desconectar primero la alimentaci\u00f3n de 5V del puerto serie antes de conectar el pin 5V del MicroUSB en esta secci\u00f3n.</p> <p>Nota: Si anteriormente estaba utilizando una alimentaci\u00f3n de 5V a trav\u00e9s de un puerto serie, debe desconectar primero la alimentaci\u00f3n de 5V del puerto serie antes de conectar el pin 5V del MicroUSB en esta secci\u00f3n.</p> <p>Nota: Aseg\u00farese de conectar correctamente la placa de desarrollo con los pines VBUS y GND del m\u00f3dulo MicroUSB en los pines P31 y P34 de la placa de desarrollo respectivamente antes de encenderla, de lo contrario, se puede da\u00f1ar el hardware, lo cual no es responsabilidad nuestra.</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/#1-conexion-del-microusb-a-la-placa-de-desarrollo","title":"1. Conexi\u00f3n del MicroUSB a la placa de desarrollo","text":"<p>La siguiente imagen muestra c\u00f3mo se conectan en la realidad las cuatro l\u00edneas Dupont en la esquina inferior izquierda con el m\u00f3dulo MicroUSB verde. Aseg\u00farese de conectar correctamente la placa de desarrollo con los pines VBUS y GND del m\u00f3dulo MicroUSB en los pines P31 y P34 de la placa de desarrollo respectivamente antes de encenderla, de lo contrario, se puede da\u00f1ar el hardware, lo cual no es responsabilidad nuestra.</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/#2-ejecucion-de-la-herramienta-de-grabacion","title":"2. Ejecuci\u00f3n de la herramienta de grabaci\u00f3n","text":"<p>Despu\u00e9s de asegurarse de que la placa de desarrollo y el m\u00f3dulo Micro USB est\u00e9n conectados correctamente como se indic\u00f3 en los pasos anteriores, obtenga la herramienta de grabaci\u00f3n y la imagen correspondiente.</p> <ol> <li>Descargue la imagen predeterminada y la herramienta de grabaci\u00f3n USB desde el siguiente enlace: https://dongshanpi.cowtransfer.com/s/639100d687674c. Descargue el archivo DongshanPI-PicoW_DefaultImage.zip y descompr\u00edmalo despu\u00e9s de la descarga. Despu\u00e9s de la descompresi\u00f3n, encontrar\u00e1 los siguientes archivos en la carpeta, donde USBDownloadTool.exe es la herramienta de grabaci\u00f3n y los dem\u00e1s archivos son archivos de imagen del sistema requeridos, etc.</li> </ol> <pre><code> AitUVCExtApi.dll\n USBDownloadTool.exe\n appconfigs.ubifs\n auto_update.txt\n auto_update_bin.txt\n boot/\n boot.bin\n cis.bin\n customer.ubifs\n kernel\n misc.fwfs\n miservice.ubifs\n partition_layout.txt\n rootfs.sqfs\n scripts/\n scripts_bin/\n u-boot.bin\n usb_updater.bin\n usb_updater_boot.bin\n usb_updater_ipl.bin\n</code></pre> <ol> <li>Haga doble clic en el software USBDownloadTool.exe para abrirlo. Se abrir\u00e1 un cuadro de di\u00e1logo como se muestra en la siguiente imagen. A continuaci\u00f3n, siga los pasos posteriores para entrar en el modo de grabaci\u00f3n USB mediante el cortocircuito de la placa <code>GND M4</code> para comenzar la operaci\u00f3n de grabaci\u00f3n.</li> </ol> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/#3-acceder-al-modo-de-grabacion-de-la-placa-de-desarrollo","title":"3. Acceder al modo de grabaci\u00f3n de la placa de desarrollo","text":"<p>Siga los siguientes pasos como se muestra en la imagen:</p> <ol> <li> <p>Use una pinza para insertar en el agujero <code>GND M4</code> indicado por la flecha en la placa y luego apri\u00e9telo sin soltarlo.</p> </li> <li> <p>Con la otra mano, presione el bot\u00f3n blanco en el centro de la placa.</p> </li> <li> <p>En este momento, la herramienta de grabaci\u00f3n mostrar\u00e1 autom\u00e1ticamente \"MSDC Connected\", lo que indica que el dispositivo est\u00e1 conectado.</p> </li> <li> <p>Finalmente, haga clic en Upgrade Firmware para grabar el firmware.</p> </li> </ol> <p></p> <p>Consulte la ilustraci\u00f3n a continuaci\u00f3n para ver la operaci\u00f3n.</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/#4-inicio-de-la-grabacion","title":"4. Inicio de la grabaci\u00f3n","text":"<p>Haga clic en Upgrade Firmware en el software de grabaci\u00f3n USBDonwloadTool para comenzar la grabaci\u00f3n. Espere a que se complete la grabaci\u00f3n. Una vez completada la grabaci\u00f3n, aparecer\u00e1 un cuadro de di\u00e1logo de confirmaci\u00f3n de RESET. Presione el bot\u00f3n blanco central de la placa de desarrollo para reiniciar la placa.</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem.ES/#5-configuracion-despues-de-la-grabacion","title":"5. Configuraci\u00f3n despu\u00e9s de la grabaci\u00f3n","text":"<p>Despu\u00e9s de la grabaci\u00f3n, si no se puede iniciar, es necesario agregar los siguientes par\u00e1metros env en la l\u00ednea de comando uboot. Actualmente, se cree que es un error en la herramienta de grabaci\u00f3n. La raz\u00f3n exacta es desconocida. Mantenga presionada la tecla Enter al iniciar para ingresar al modo de l\u00ednea de comando uboot, ingrese la siguiente configuraci\u00f3n y reinicie la placa.</p> <pre><code>setenv mtdids nand0=nand0\nsetenv mtdparts ' mtdparts=nand0:0x140000(CIS),0x1a0000(BOOT0),0x1a0000(BOOT1),0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\nsetenv bootargs ubi.mtd=UBI,0x800 root=/dev/mtdblock8 rootfstype=squashfs ro init=/linuxrc LX_MEM=0x3FE0000 mma_heap=mma_heap_name0,miu=0,sz=0x1E00000 cma=2M highres=off mmap_reserved=fb,miu=0,sz=0x300000,max_start_off=0x3C00000,max_end_off=0x3F00000 ${mtdparts}\nsetenv bootcmd ' nand read.e 0x22000000 KERNEL ${kernel_file_size}; dcache on ; bootlogo 0 0 0 0; bootm 0x22000000;nand read.e 0x22000000 RECOVERY ${recovery_file_size}; dcache on ; bootm 0x22000000\nsetenv autoestart 0\nsetenv sstar_bbm off\nsetenv ipl_version \"##p3##gdf99011IPL_##########setenv ipl_version \"DUALENV=1 SILENT_CONSOLE=1 CFG_SDMMC_DISABLE=n ALK=1 SPINAND=1 CHIP=pioneer3\"\"\nsaveenv\n</code></pre>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem/","title":"\u66f4\u65b0\u7cfb\u7edf","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem/#_1","title":"\u66f4\u65b0\u7cfb\u7edf\u955c\u50cf","text":""},{"location":"DongshanPi-PicoW/03-1_FlashSystem/#usb","title":"\u4f7f\u7528USB\u70e7\u5f55","text":"<p>DongshanPI-PicoW\u5c5e\u4e8e\u6700\u5c0f\u5f00\u53d1\u677f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 5V\u7535\u538b\u8f93\u5165 \u5373\u53ef\u5f00\u59cb\u5de5\u4f5c,\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe\u53f3\u4fa7  \u84dd \u9ec4 \u9ed1 \u7ea2 \u56db\u4e2a\u7bad\u5934\u6240\u793a\uff0c\u4f7f\u7528\u4e00\u4e2a Micro USB\u6a21\u5757 \u5206\u522b \u8fde\u63a5\u81f3</p> <ul> <li><code>P36 USB_DM</code>\u8fde\u63a5\u81f3 MicroUSB\u6a21\u5757 <code>D-</code>\u4fe1\u53f7\u4e0a</li> <li><code>P35 USB_DP</code>\u8fde\u63a5\u81f3 MicroUSB\u6a21\u5757 <code>D+</code>\u4fe1\u53f7\u4e0a</li> <li><code>P34 GND</code>\u8fde\u63a5\u81f3 MicroUSB\u6a21\u5757 <code>GND</code> \u4fe1\u53f7\u4e0a</li> <li><code>P31 5V</code>\u8fde\u63a5\u81f3 MicroUSB\u6a21\u5757 VBUS\u4fe1\u53f7\u4e0a</li> </ul> <p>\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u4e4b\u524d\u6709 \u4f7f\u7528\u4e32\u53e3\u7684 5V\u4f9b\u7535\uff0c\u5728\u8fd9\u4e00\u7ae0\u8282\uff0c\u4e00\u5b9a\u8981\u628a \u4e32\u53e3\u7684 5V\u4f9b\u7535\u5148\u62d4\u6389\uff0c\u518d\u6765\u63a5 MicroUSB\u76845V VBUS</p> <p>\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u4e4b\u524d\u6709 \u4f7f\u7528\u4e32\u53e3\u7684 5V\u4f9b\u7535\uff0c\u5728\u8fd9\u4e00\u7ae0\u8282\uff0c\u4e00\u5b9a\u8981\u628a \u4e32\u53e3\u7684 5V\u4f9b\u7535\u5148\u62d4\u6389\uff0c\u518d\u6765\u63a5 MicroUSB\u76845V VBUS</p> <p>\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u4e4b\u524d\u6709 \u4f7f\u7528\u4e32\u53e3\u7684 5V\u4f9b\u7535\uff0c\u5728\u8fd9\u4e00\u7ae0\u8282\uff0c\u4e00\u5b9a\u8981\u628a \u4e32\u53e3\u7684 5V\u4f9b\u7535\u5148\u62d4\u6389\uff0c\u518d\u6765\u63a5 MicroUSB\u76845V VBUS</p> <p>\u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u786e\u4fdd\u5f00\u53d1\u677f\u4e0eMicro\u6a21\u5757 VBUS  GND\u4e0e\u5f00\u53d1\u677f\u7684P31 P34 \u8fde\u63a5\u65e0\u8bef\uff0c\u624d\u80fd\u901a\u7535\uff0c\u5426\u5219 \u4f1a\u5bfc\u81f4\u786c\u4ef6\u635f\u574f\uff0c\u6211\u4eec\u4e0d\u4e88\u5904\u7406\u3002</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem/#1-microusb","title":"1. \u8fde\u63a5MicroUSB\u81f3\u5f00\u53d1\u677f","text":"<p>\u5982\u4e0b\u793a\u610f\u56fe\uff0c\u4e3a\u5b9e\u7269\u8fde\u63a5\u56fe\uff0c\u8bf7\u6ce8\u610f\u770b\u4e0b\u56fe \u5de6\u4e0b\u89d2 \u56db\u6839 \u675c\u90a6\u7ebf \u4e0e \u7eff\u8272 MicroUSB \u6a21\u5757\u7684\u8fde\u63a5\u987a\u5e8f\u3002</p> <p>\u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u786e\u4fdd\u5f00\u53d1\u677f\u4e0eMicro\u6a21\u5757 VBUS  GND\u4e0e\u5f00\u53d1\u677f\u7684P31 P34 \u8fde\u63a5\u65e0\u8bef\uff0c\u624d\u80fd\u901a\u7535\uff0c\u5426\u5219 \u4f1a\u5bfc\u81f4\u786c\u4ef6\u4e0e\u7535\u8111\u77ed\u8def\u635f\u574f\uff0c\u6b64\u95ee\u9898\u6211\u4eec\u4e0d\u4e88\u5904\u7406\u3002</p> <p>\u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u786e\u4fdd\u5f00\u53d1\u677f\u4e0eMicro\u6a21\u5757 VBUS  GND\u4e0e\u5f00\u53d1\u677f\u7684P31 P34 \u8fde\u63a5\u65e0\u8bef\uff0c\u624d\u80fd\u901a\u7535\uff0c\u5426\u5219 \u4f1a\u5bfc\u81f4\u786c\u4ef6\u4e0e\u7535\u8111\u77ed\u8def\u635f\u574f\uff0c\u6b64\u95ee\u9898\u6211\u4eec\u4e0d\u4e88\u5904\u7406\u3002</p> <p>\u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u786e\u4fdd\u5f00\u53d1\u677f\u4e0eMicro\u6a21\u5757 VBUS  GND\u4e0e\u5f00\u53d1\u677f\u7684P31 P34 \u8fde\u63a5\u65e0\u8bef\uff0c\u624d\u80fd\u901a\u7535\uff0c\u5426\u5219 \u4f1a\u5bfc\u81f4\u786c\u4ef6\u4e0e\u7535\u8111\u77ed\u8def\u635f\u574f\uff0c\u6b64\u95ee\u9898\u6211\u4eec\u4e0d\u4e88\u5904\u7406\u3002</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem/#2","title":"2. \u8fd0\u884c\u70e7\u5f55\u5de5\u5177","text":"<p>\u786e\u4fdd\u4e0a\u8ff0\u6b65\u9aa4\u5f00\u53d1\u677f\u548cMicro USB\u6a21\u5757\u8fde\u63a5\u65e0\u8bef\u540e\uff0c\u83b7\u53d6\u70e7\u5f55\u5de5\u5177\u548c\u914d\u5957\u7684\u955c\u50cf\u6587\u4ef6\u3002</p> <ol> <li>\u4e0b\u8f7d\u9ed8\u8ba4\u7684\u955c\u50cf\u548cusb\u70e7\u5199\u5de5\u5177\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee  https://dongshanpi.cowtransfer.com/s/639100d687674c \u4e0b\u8f7d DongshanPI-PicoW_DefaultImage.zip \u4e0b\u8f7d\u5b8c\u6210\u540e\u8fdb\u884c\u89e3\u538b\u7f29\uff0c\u89e3\u538b\u5b8c\u6210\u540e \u53ef\u4ee5\u770b\u5230\u6587\u4ef6\u5939\u5185\u6709\u5982\u4e0b\u6587\u4ef6,\u5176\u4e2d USBDownloadTool.exe \u662f\u70e7\u5199\u5de5\u5177\uff0c\u5176\u4ed6\u6587\u4ef6\u4e3a\u7cfb\u7edf\u6240\u9700\u955c\u50cf\u6587\u4ef6\u7b49\u3002</li> </ol> <pre><code> AitUVCExtApi.dll\n USBDownloadTool.exe\n appconfigs.ubifs\n auto_update.txt\n auto_update_bin.txt\n boot/\n boot.bin\n cis.bin\n customer.ubifs\n kernel\n misc.fwfs\n miservice.ubifs\n partition_layout.txt\n rootfs.sqfs\n scripts/\n scripts_bin/\n u-boot.bin\n usb_updater.bin\n usb_updater_boot.bin\n usb_updater_ipl.bin\n</code></pre> <ol> <li>\u53cc\u51fb USBDownloadTool.exe \u8f6f\u4ef6\uff0c\u6253\u5f00\u8f6f\u4ef6\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u53c2\u8003\u540e\u7eed\u6b65\u9aa4 \u5c06\u677f\u5b50\u901a\u8fc7\u77ed\u63a5 <code>GND M4</code> \u8fdb\u5165USB \u70e7\u5f55\u6a21\u5f0f \u6765\u5f00\u59cb\u8fdb\u884c\u70e7\u5f55\u64cd\u4f5c\u3002</li> </ol> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem/#3","title":"3. \u5f00\u53d1\u677f\u8fdb\u5165\u70e7\u5f55\u6a21\u5f0f","text":"<p>\u53c2\u8003\u4e0b\u56fe\u6240\u793a\u6b65\u9aa4\uff0c</p> <ol> <li> <p>\u4f7f\u7528\u954a\u5b50\u585e\u5165 \u677f\u5b50\u7bad\u5934\u6240\u793a \u7684<code>GND M4</code>\u5b54\u5185\uff0c\u7136\u540e\u634f\u7d27\uff0c\u4e0d\u8981\u677e\u5f00</p> </li> <li> <p>\u53e6\u4e00\u4e2a\u624b \u6309\u4e00\u4e0b \u677f\u5b50\u4e2d\u95f4\u7684\u767d\u8272\u6309\u94ae\uff0c</p> </li> <li>\u6b64\u65f6\u70e7\u5f55\u5de5\u5177\u4f1a\u81ea\u52a8\u63d0\u793a  MSDC Connected \u5c31\u8868\u793a\u8bbe\u5907\u5df2\u7ecf\u8fde\u63a5</li> <li>\u6700\u540e\uff0c\u70b9\u51fb Upgrade Firmware \u6765\u70e7\u5f55\u56fa\u4ef6</li> </ol> <p></p> <p>\u53c2\u8003\u4e0b\u56fe\u64cd\u4f5c\u793a\u610f\u56fe</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem/#4","title":"4. \u5f00\u59cb\u70e7\u5f55","text":"<p>\u70b9\u51fb USBDonwloadTool \u70e7\u5199\u8f6f\u4ef6\u7684 Upgrade Firmware  \u5373\u53ef\u5f00\u59cb\u70e7\u5f55\uff0c\u7b49\u5f85\u70e7\u5f55\u5b8c\u6210\u5373\u53ef\u3002\u70e7\u5f55\u5b8c\u6210\u4f1a\u5f39\u51fa RESET \u63d0\u793a\u5bf9\u8bdd\u6846\uff0c\u6b64\u65f6\u6309\u4e0b \u5f00\u53d1\u677f\u4e2d\u95f4\u7684 \u767d\u8272\u6309\u94ae\u91cd\u542f\u5f00\u53d1\u677f\u5373\u53ef\u3002</p> <p></p>"},{"location":"DongshanPi-PicoW/03-1_FlashSystem/#5","title":"5. \u70e7\u5f55\u5b8c\u6210\u540e\u8bbe\u7f6e","text":"<p>\u70e7\u5f55\u5b8c\u6210\u540e\uff0c\u5982\u679c\u65e0\u6cd5\u542f\u52a8\u5219\u9700\u8981\u5728uboot \u547d\u4ee4\u884c\u4e2d\u589e\u52a0\u5982\u4e0benv\u53c2\u6570\uff0c\u76ee\u524d\u521d\u6b65\u8ba4\u4e3a\u662f\u70e7\u5199\u5de5\u5177\u7684bug\u5bfc\u81f4\u7684 \u5177\u4f53\u539f\u56e0\u672a\u77e5\u3002 \u5f00\u673a\u540e\u957f\u6309 enter \u8fdb\u5165 uboot \u547d\u4ee4\u884c\uff0c\u8f93\u5165\u5982\u4e0b\u914d\u7f6e\uff0c\u91cd\u542f\u5f00\u53d1\u677f\u5373\u53ef\u3002</p> <pre><code>setenv mtdids nand0=nand0\nsetenv mtdparts ' mtdparts=nand0:0x140000(CIS),0x1a0000(BOOT0),0x1a0000(BOOT1),0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\nsetenv bootargs ubi.mtd=UBI,0x800 root=/dev/mtdblock8 rootfstype=squashfs ro init=/linuxrc LX_MEM=0x3FE0000 mma_heap=mma_heap_name0,miu=0,sz=0x1E00000 cma=2M highres=off mmap_reserved=fb,miu=0,sz=0x300000,max_start_off=0x3C00000,max_end_off=0x3F00000 ${mtdparts}\nsetenv bootcmd ' nand read.e 0x22000000 KERNEL ${kernel_file_size}; dcache on ; bootlogo 0 0 0 0; bootm 0x22000000;nand read.e 0x22000000 RECOVERY ${recovery_file_size}; dcache on ; bootm 0x22000000\nsetenv autoestart 0\nsetenv sstar_bbm off\nsetenv ipl_version \"##p3##gdf99011IPL_##########setenv ipl_version \"DUALENV=1 SILENT_CONSOLE=1 CFG_SDMMC_DISABLE=n ALK=1 SPINAND=1 CHIP=pioneer3\"\"\nsaveenv\n</code></pre>"},{"location":"DongshanPi-PicoW/03-QuickStart.ES/","title":"03 QuickStart.ES","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#guia-de-inicio-rapido","title":"Gu\u00eda de inicio r\u00e1pido","text":""},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#conexion-del-modulo-de-serie","title":"Conexi\u00f3n del m\u00f3dulo de serie","text":"<p>El DongshanPI-PicoW es una placa de desarrollo m\u00ednima que puede comenzar a funcionar simplemente conect\u00e1ndolo a una fuente de alimentaci\u00f3n de 5V. Para ello, se puede utilizar un m\u00f3dulo de serie y seguir las siguientes instrucciones de conexi\u00f3n:</p> <ul> <li>Conectar el pin <code>P42 TX</code> a la entrada <code>RX</code> del m\u00f3dulo USB-Serial.</li> <li>Conectar el pin <code>P43 RX</code> a la salida <code>TX</code> del m\u00f3dulo USB-Serial.</li> <li>Conectar el pin <code>P46 GND</code> a la conexi\u00f3n <code>GND</code> del m\u00f3dulo USB-Serial.</li> <li>Opcionalmente, se puede conectar el pin <code>P31 5V</code> a la salida <code>5V</code> del m\u00f3dulo USB-Serial.</li> </ul> <p>Una vez que se ha verificado la conexi\u00f3n, conectar el DongshanPI-PicoW al puerto USB de un ordenador. La placa se iniciar\u00e1 autom\u00e1ticamente y se puede acceder al sistema a trav\u00e9s de un programa de terminal serie.</p> <p>Nota: Aseg\u00farese de que la conexi\u00f3n de los pines <code>5V</code> y <code>GND</code> del m\u00f3dulo USB-Serial con los pines <code>P31</code> y <code>P46</code> de la placa est\u00e9 correcta antes de encenderla, de lo contrario podr\u00eda da\u00f1ar la placa y no nos haremos responsables del problema.</p> <p></p> <p>A continuaci\u00f3n se muestra un ejemplo de diagrama de conexi\u00f3n entre un DongshanPI-PicoW y un m\u00f3dulo USB-Serial. \u00a1Aseg\u00farese de verificar los cables y las conexiones del m\u00f3dulo USB-Serial!</p> <p></p>"},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#2-acceso-al-sistema-a-traves-de-un-puerto-serie","title":"2. Acceso al sistema a trav\u00e9s de un puerto serie","text":""},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#1-conexion-del-cable-de-puerto-serie","title":"1. Conexi\u00f3n del cable de puerto serie","text":"<p>Conecte un cable TypeC que viene con la placa de desarrollo a la interfaz de puerto serie / alimentaci\u00f3n de la placa y el otro extremo a un puerto USB de la computadora. Si la conexi\u00f3n es correcta, la luz roja de alimentaci\u00f3n en la placa se encender\u00e1 autom\u00e1ticamente. En la mayor\u00eda de los casos, el sistema instalar\u00e1 autom\u00e1ticamente el controlador del dispositivo de puerto serie. Si el controlador no se instala autom\u00e1ticamente, puede usar el controlador Genius para instalarlo autom\u00e1ticamente.</p> <ul> <li>Para el sistema Windows En la secci\u00f3n Puertos (COM y LPT) del Administrador de dispositivos de Windows, se agregar\u00e1 un dispositivo de puerto serie, que generalmente comienza con <code>USB-Enhanced-SERIAL CH9102</code>. Preste atenci\u00f3n al n\u00famero de COM espec\u00edfico detr\u00e1s de \u00e9l para usarlo en la conexi\u00f3n posterior.</li> </ul> <p></p> <p>En la imagen de arriba, el n\u00famero de COM es 96, que es el n\u00famero de puerto serie que usaremos a continuaci\u00f3n.</p> <ul> <li>Para el sistema Linux Puede verificar si se agrega un dispositivo <code>/dev/tty&lt;&gt;</code>, y en la mayor\u00eda de los casos el dispositivo se encuentra en <code>/dev/ttyACM0</code>.</li> </ul> <p></p>"},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#2-abrir-la-consola-serie","title":"2. Abrir la consola serie","text":""},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#obtener-la-herramienta-serie","title":"Obtener la herramienta serie","text":"<p>Utilice una herramienta serie como Putty o MobaXterm para conectarse al dispositivo de la placa.</p> <ul> <li>La herramienta Putty se puede obtener visitando la p\u00e1gina https://www.chiark.greenend.org.uk/~sgtatham/putty/.</li> <li>Puede obtener MobaXterm visitando la p\u00e1gina https://mobaxterm.mobatek.net/ (se recomienda utilizar).</li> </ul>"},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#iniciar-sesion-en-la-consola-serie-con-putty","title":"Iniciar sesi\u00f3n en la consola serie con Putty","text":""},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#iniciar-sesion-en-la-consola-serie-con-mobaxterm","title":"Iniciar sesi\u00f3n en la consola serie con Mobaxterm","text":"<p>Abra MobaXterm, haga clic en \"Session\" en la esquina superior izquierda, seleccione \"Serial\" en la ventana emergente y luego seleccione el n\u00famero de puerto (el n\u00famero de puerto COM21 que se muestra en el administrador de dispositivos), la velocidad de bits (115200), el control de flujo (Flow Control: none). Por \u00faltimo, haga clic en \"OK\". Los pasos se muestran en la siguiente figura. Nota: Debe seleccionar none como control de flujo (Flow Control), de lo contrario no podr\u00e1 ingresar datos al puerto serie en MobaXterm.</p> <p></p>"},{"location":"DongshanPi-PicoW/03-QuickStart.ES/#3-ingresar-al-shell-del-sistema","title":"3. Ingresar al shell del sistema","text":"<p>Despu\u00e9s de abrir el puerto serie con \u00e9xito utilizando la herramienta de puerto serie, puede presionar la tecla Enter para ingresar al shell. Tambi\u00e9n puede presionar el bot\u00f3n \"Reset\" en la placa para ver la informaci\u00f3n completa del sistema.</p> <p><pre><code>IPL gdf99011\nD-06\nHW Reset\n00000000 00000000\nResume? N, addr 00000000\nmiupll_200MHz\nSPI 54M\n64MB\nBIST0_0001-OK\nSPI 54M\n[BBT] Found table @ 0x00020000\n\nChecksum OK\n\nIPL_CUST gdf99011\nExport ENV 1\n\n\n\nU-Boot 2015.01 (Dec 10 2021 - 09:17:46), Build: jenkins-devops--UBT--AutoRelese_To_ALKAID-141\n\nVersion: P3g5414d39\nI2C:   ready\nDRAM:\nWARNING: Caches not enabled\nSPINAND_I:  [FLASH] Found SNI in block 0.\n[FLASH] dev_id = 0xee\n[FLASH] mfr_id = 0xef, dev_id= 0xaa id_len = 0x3\n[SPINAND] RFC ues command 0x6b with 0x08 dummy clock.\n[SPINAND] Program load with command 0x32.\n[SPINAND] Random load with command 0x34.\n[FLASH] Unlock all block.\n[FLASH] Use BDMA.\n128 MiB\nMMC:   MStar SD/MMC: 0\nENV: offset = 0x480000 size = 0x40000\nENV1: offset = 0x4c0000 size = 0x40000\nIn:    serial\nOut:   serial\nErr:   serial\nNet:   No ethernet found.\n\nNAND read: device 0 offset 0x520000, size 0x500000\nTime:383961 us, speed:13654 KB/s\n 5242880 bytes read: OK\nfound the partition info of MISC\n_BootLogoSetPq 1674, pData: 23a0ce00 u32DataSize: 2964\ngpio debug MHal_GPIO_Pad_Set: pin=62\nclk=12M, u16Div=0 u32Duty=0x95f u32Period=0x95f\n[halPWMPadSet][106] (pwmId, padId) = (1, 63)\n##  Booting kernel from Legacy Image at 22000000 ...\n   Image Name:   MVX4##P3##g#######KL_LX409##[BR:\n   Image Type:   ARM Linux Kernel Image (lzma compressed)\n   Data Size:    2121028 Bytes = 2 MiB\n   Load Address: 20008000\n   Entry Point:  20008000\n   Verifying Checksum ... OK\n-usb_stop(USB_PORT0)\n-usb_stop(USB_PORT2)\n   Uncompressing Kernel Image ...\n[XZ] !!!reserved 0x21000000 length=0x 1000000 for xz!!\n   XZ: uncompressed size=0x43d000, ret=7\nOK\natags:0x20000000\n\nStarting kernel ...\n\nearly_atags_to_fdt() success\nBooting Linux on physical CPU 0x0\nLinux version 4.9.84 (ubuntu@ubuntu1804) (gcc version 9.1.0 (GCC) ) #6 SMP PREEMPT Thu Mar 16 04:59:57 EDT 2023\nCPU: ARMv7 Processor [410fc075] revision 5 (ARMv7), cr=50c5387d\nCPU: div instructions available: patching division code\nCPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache\nearly_atags_to_fdt() success\nOF: fdt:Machine model: PIONEER3 SSC021A-S01A-S\n[ERR] LX_MEM, LX_MEM2, LX_MEM3 not 1MB aligned\nLXmem is 0x3fe0000 PHYS_OFFSET is 0x20000000\nAdd mem start 0x20000000 size 0x3fe0000!!!!\n\nLX_MEM  = 0x20000000, 0x3fe0000\nLX_MEM2 = 0x0, 0x0\nLX_MEM3 = 0x0, 0x0\nEMAC_LEN= 0x0\nDRAM_LEN= 0x0\ndeal_with_reserved_mmap memblock_reserve success mmap_reserved_config[0].reserved_start=\n0x23c00000\n\ndeal_with_reserve_mma_heap memblock_reserve success mma_config[0].reserved_start=\n0x21e00000\n\ncma: Reserved 2 MiB at 0x21c00000\nMemory policy: Data cache writealloc\npercpu: Embedded 14 pages/cpu @c3f1c000 s25368 r8192 d23784 u57344\nBuilt 1 zonelists in Zone order, mobility grouping on.  Total pages: 16224\nKernel command line: ubi.mtd=UBI,0x800 root=/dev/mtdblock8 rootfstype=squashfs ro init=/linuxrc LX_MEM=0x3FE0000 mma_heap=mma_heap_name0,miu=0,sz=0x1E00000 cma=2M highres=off mmap_reserved=fb,miu=0,sz=0x300000,max_start_off=0x3C00000,max_end_off=0x3F00000 mtdparts=nand0:0x140000(CIS),0x1a0000(BOOT0),0x1a0000(BOOT1),0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\nPID hash table entries: 256 (order: -2, 1024 bytes)\nDentry cache hash table entries: 8192 (order: 3, 32768 bytes)\nInode-cache hash table entries: 4096 (order: 2, 16384 bytes)\nMemory: 24224K/65408K available (2514K kernel code, 206K rwdata, 1304K rodata, 168K init, 159K bss, 39136K reserved, 2048K cma-reserved)\nVirtual kernel memory layout:\n    vector  : 0xffff0000 - 0xffff1000   (   4 kB)\n    fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)\n    vmalloc : 0xc4000000 - 0xff800000   ( 952 MB)\n    lowmem  : 0xc0000000 - 0xc3fe0000   (  63 MB)\n    modules : 0xbf800000 - 0xc0000000   (   8 MB)\n      .text : 0xc0008000 - 0xc027ce44   (2516 kB)\n      .init : 0xc03e6000 - 0xc0410000   ( 168 kB)\n      .data : 0xc0410000 - 0xc0443bc8   ( 207 kB)\n       .bss : 0xc0445000 - 0xc046ce90   ( 160 kB)\nSLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1\nPreemptible hierarchical RCU implementation.\n        Build-time adjustment of leaf fanout to 32.\n        RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=2.\nRCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=2\nNR_IRQS:16 nr_irqs:16 16\nms_init_main_intc: np-&gt;name=ms_main_intc, parent=gic\nms_init_pm_intc: np-&gt;name=ms_pm_intc, parent=ms_main_intc\nss_init_gpi_intc: np-&gt;name=ms_gpi_intc, parent=ms_main_intc\nFind CLK_cpupll_clk, hook ms_cpuclk_ops\nFind CLK_spi_synth_pll, hook ss_pllclk_ops\narm_arch_timer: Architected cp15 timer(s) running at 6.00MHz (virt).\nclocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x1623fa770, max_idle_ns: 440795202238 ns\nsched_clock: 56 bits at 6MHz, resolution 166ns, wraps every 4398046511055ns\nSwitching to timer-based delay loop, resolution 166ns\nConsole: colour dummy device 80x30\nconsole [ttyS0] enabled\nCalibrating delay loop (skipped), value calculated using timer frequency.. 12.00 BogoMIPS (lpj=60000)\npid_max: default: 4096 minimum: 301\nMount-cache hash table entries: 1024 (order: 0, 4096 bytes)\nMountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)\nCPU: Testing write buffer coherency: ok\nCPU0: update cpu_capacity 1024\nCPU0: thread -1, cpu 0, socket 0, mpidr 80000000\nSetting up static identity map for 0x20008280 - 0x200082cc\nCPU1: update cpu_capacity 1024\nCPU1: thread -1, cpu 1, socket 0, mpidr 80000001\nBrought up 2 CPUs\nSMP: Total of 2 processors activated (24.00 BogoMIPS).\nCPU: All CPU(s) started in SVC mode.\ndevtmpfs: initialized\nVFP support v0.3: implementor 41 architecture 2 part 30 variant 7 rev 5\nclocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns\nfutex hash table entries: 16 (order: -2, 1024 bytes)\nNET: Registered protocol family 16\nDMA: preallocated 256 KiB pool for atomic coherent allocations\n\n\nVersion : MVX4##P3##g#######KL_LX409##[BR:g]#XVM\n\nGPIO: probe endhw-breakpoint: found 5 (+1 reserved) breakpoint and 4 watchpoint registers.\nhw-breakpoint: maximum watchpoint size is 8 bytes.\nSCSI subsystem initialized\nPinreg:0 bit:0 enable:0 speed:5\nPort:0 Index=1\nEnable=1\nDmaReadMode:0\nSpeed:5\nDmaEnable:0\nDmaAddrMode:0\nDmaMiuCh:0\nDmaMiuPri:0\nDmaPhyAddr:21c40000\nSTART default delay 5(us)\nSTOP default delay 5(us)\nHWI2C_MUTEX_CREATE!\nHWI2C(0): initialized\nPinreg:0 bit:0 enable:0 speed:5\nPort:1 Index=17\nEnable=1\nDmaReadMode:0\nSpeed:5\nDmaEnable:1\nDmaAddrMode:0\nDmaMiuCh:0\nDmaMiuPri:0\nDmaPhyAddr:21c41000\nSTART default delay 5(us)\nSTOP default delay 5(us)\nHWI2C_MUTEX_CREATE!\nHWI2C(1): initialized\n[DrvPWMDutyQE0] grp:0\n[DrvPWMDutyQE0] grp:0\n[DrvPWMDutyQE0] grp:0\n[DrvPWMDutyQE0] grp:0\n[NOTICE]pwm-isr(60) success. If not i6e or i6b0, pls confirm it on .dtsi\nclocksource: Switched to clocksource arch_sys_counter\nNET: Registered protocol family 2\nTCP established hash table entries: 1024 (order: 0, 4096 bytes)\nTCP bind hash table entries: 1024 (order: 2, 20480 bytes)\nTCP: Hash tables configured (established 1024 bind 1024)\nUDP hash table entries: 128 (order: 0, 6144 bytes)\nUDP-Lite hash table entries: 128 (order: 0, 6144 bytes)\nNET: Registered protocol family 1\nhw perfevents: enabled with armv7_cortex_a7 PMU driver, 5 counters available\nworkingset: timestamp_bits=30 max_order=13 bucket_order=0\nsquashfs: version 4.0 (2009/01/31) Phillip Lougher\njffs2: version 2.2. \u00a9 2001-2006 Red Hat, Inc.\nfuse init (API version 7.26)\nio scheduler noop registered\nio scheduler deadline registered (default)\nlibphy: Fixed MDIO Bus: probed\nmousedev: PS/2 mouse device common for all mice\n[MHal_GPIO_Check_PE] set gpio84 PE\ni2c /dev entries driver\n1f221000.uart0: ttyS0 at MMIO 0x0 (irq = 34, base_baud = 10800000) is a unknown\n1f221200.uart1: ttyS1 at MMIO 0x0 (irq = 35, base_baud = 10800000) is a unknown\n1f220400.uart2: ttyS2 at MMIO 0x0 (irq = 37, base_baud = 10800000) is a unknown\n1f221400.uart2: ttyS3 at MMIO 0x0 (irq = 38, base_baud = 10800000) is a unknown\n&gt;&gt; [sdmmc] ms_sdmmc_probe\nFail to get pad(131074) form padmux !\n&gt;&gt; [sdmmc] Err: Could not get SD pad group from Padmux dts!\n&gt;&gt; [sdmmc] Err: Failed to use DTS function!\n\nms_sdmmc: probe of soc:sdmmc failed with error -22\nMSYS: DMEM request: [emac0_buff]:0x00000812\nMSYS: DMEM request: [emac0_buff]:0x00000812 success, CPU phy:@0x21C44000, virt:@0xC1C44000\nlibphy: mdio: probed\nmdio_bus mdio-bus@emac0: /soc/emac0/mdio-bus/ethernet-phy@0 has invalid PHY address\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 0\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 1\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 2\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 3\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 4\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 5\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 6\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 7\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 8\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 9\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 10\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 11\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 12\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 13\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 14\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 15\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 16\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 17\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 18\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 19\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 20\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 21\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 22\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 23\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 24\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 25\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 26\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 27\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 28\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 29\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 30\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 31\n[emac_phy_connect][3534] connected mac emac0 to PHY at mdio-bus@emac0:00 [uid=11112222, driver=Generic PHY]\n[ms_cpufreq_init] Current clk=799999872\n[FLASH] Found SNI in block 0.\n[FLASH] dev_id = 0xee\nMSYS: DMEM request: [BDMA]:0x00000840\nMSYS: DMEM request: [BDMA]:0x00000840 success, CPU phy:@0x21C45000, virt:@0xC1C45000\n[FLASH] mfr_id = 0xef, dev_id= 0xaa id_len = 0x3\n[SPINAND] RFC ues command 0x6b with 0x08 dummy clock.\n[SPINAND] Program load with command 0x32.\n[SPINAND] Random load with command 0x34.\n[FLASH] Use BDMA.\nnand: device found, Manufacturer ID: 0xef, Chip ID: 0xaa\nnand: 128 MiB, SLC, erase size: 128 KiB, page size: 2048, OOB size: 64\n11 cmdlinepart partitions found on MTD device nand0\nCreating 11 MTD partitions on \"nand0\":\n0x000000000000-0x000000140000 : \"CIS\"\n0x000000140000-0x0000002e0000 : \"BOOT0\"\n0x0000002e0000-0x000000480000 : \"BOOT1\"\n0x000000480000-0x0000004c0000 : \"ENV\"\n0x0000004c0000-0x000000500000 : \"ENV1\"\n0x000000500000-0x000000520000 : \"KEY_CUST\"\n0x000000520000-0x000000a20000 : \"KERNEL\"\n0x000000a20000-0x000000f20000 : \"RECOVERY\"\n0x000000f20000-0x000001520000 : \"rootfs\"\n0x000001520000-0x0000015c0000 : \"MISC\"\n0x0000015c0000-0x000008000000 : \"UBI\"\n[wakeup source] HW gate_xtal:0 SourceNum:1\n[wakeup source] WakeupSource:61\n\n[ss_gpi_intc_domain_alloc] hw:61 -&gt; v:65\n[ss_gpi_irq_set_wake] hw:61 enable? 1\nNET: Registered protocol family 17\n[mstar_pm_init] resume_pbase=0x200114F5, suspend_imi_vbase=0xC4057000\nThumbEE CPU extension supported.\nRegistering SWP/SWPB emulation handler\nubi0: attaching mtd10\nubi0: scanning is finished\nubi0: attached mtd10 (name \"UBI\", size 106 MiB)\nubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\nubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\nubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\nubi0: good PEBs: 850, bad PEBs: 0, corrupted PEBs: 0\nubi0: user volume: 3, internal volumes: 1, max. volumes count: 128\nubi0: max/mean erase counter: 2/1, WL threshold: 4096, image sequence number: 0\nubi0: available PEBs: 25, total reserved PEBs: 825, PEBs reserved for bad PEB handling: 20\nubi0: background thread \"VFS: Mounted root (squashfs filesystem) readonly on device 31:8.\ndevtmpfs: mounted\nThis architecture does not have kernel memory protection.\n[DMA]: Transfer NOT Completely!\nERROR: Bus[1] in ms_i2c_xfer_write: Slave dev NAK, Addr: 0xba, Data: 0x80 0x47\nGoodix-TS 1-005d: i2c test failed attempt 1: -110\n[emac_phy_link_adjust] EMAC Link Down\n[DMA]: Transfer NOT Completely!\nERROR: Bus[1] in ms_i2c_xfer_write: Slave dev NAK, Addr: 0xba, Data: 0x80 0x47\nGoodix-TS 1-005d: i2c test failed attempt 2: -110\nGoodix-TS 1-005d: I2C communication failure: -110\nGoodix-TS 1-005d: touchscreen config failed!!!\nmount: can't find devpts in /etc/fstab\nnet.core.rmem_default = 163840\nnet.core.rmem_max = 163840\nnet.core.wmem_default = 524288\nnet.core.wmem_max = 1048576\nnet.ipv4.tcp_mem = 924  1232  1848\nnet.ipv4.tcp_rmem = 4096  87380  325120\nnet.ipv4.tcp_wmem = 4096  131072  393216\nmount: mounting none on /sys failed: Drandom: fast init done\nevice or resource busy\nmount: mounting noUBIFS (ubi0:0): background thread \"ubifs_bgt0_0\" started, PID 577\nne on /sys/kernel/debug/ failed: Device or resource busy\nUBIFS (ubi0:0): recovery needed\nUBIFS (ubi0:0): recovery completed\nUBIFS (ubi0:0): UBIFS: mounted UBI device 0, volume 0, name \"miservice\"\nUBIFS (ubi0:0): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\nUBIFS (ubi0:0): FS size: 11427840 bytes (10 MiB, 90 LEBs), journal size 1904640 bytes (1 MiB, 15 LEBs)\nUBIFS (ubi0:0): reserved for root: 0 bytes (0 KiB)\nUBIFS (ubi0:0): media format: w4/r0 (latest is w4/r0), UUID 17CB3D0B-DDBA-45AD-B591-2625FAE405BE, small LPT model\nUBIFS (ubi0:1): background thread \"ubifs_bgt0_1\" started, PID 580\nUBIFS (ubi0:1): recovery needed\nUBIFS (ubi0:1): recovery completed\nUBIFS (ubi0:1): UBIFS: mounted UBI device 0, volume 1, name \"customer\"\nUBIFS (ubi0:1): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\nUBIFS (ubi0:1): FS size: 79613952 bytes (75 MiB, 627 LEBs), journal size 9023488 bytes (8 MiB, 72 LEBs)\nUBIFS (ubi0:1): reserved for root: 0 bytes (0 KiB)\nUBIFS (ubi0:1): media format: w4/r0 (latest is w4/r0), UUID 86613E8B-DAE5-49A0-9361-DE40E76B69BE, small LPT model\nUBIFS (ubi0:2): background thread \"ubifs_bgt0_2\" started, PID 583\nUBIFS (ubi0:2): recovery needed\nUBIFS (ubi0:2): recovery completed\nUBIFS (ubi0:2): UBIFS: mounted UBI device 0, volume 2, name \"appconfigs\"\nUBIFS (ubi0:2): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\nUBIFS (ubi0:2): FS size: 3809280 bytes (3 MiB, 30 LEBs), journal size 1142785 bytes (1 MiB, 8 LEBs)\nUBIFS (ubi0:2): reserved for root: 0 bytes (0 KiB)\nUBIFS (ubi0:2): media format: w4/r0 (latest is w4/r0), UUID 6561C2CE-C61A-4F56-8E94-29512892FA00, small LPT model\nfirmwarefs/fwfs.c:1321:error: Corrupted dir pair at {0xa0000001, 0xa0000000}\nfwfs_fuse.c:594:error: Invalid or incomplete multibyte or wide character\ninsmod: can't read '/config/modules/4.9.84/nfsv3.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/mmc_core.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/kdrv_sdmmc.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/ms_notify.ko': No such file or directory\njpe driver probed\n[DRV_DIVP_PROC_Init]\nAudioProcInit 374\nmodule [sys] init\nMI_SYSCFG_SetupMmapLoader default_config_path:/config/config_tool, argv1:/config/load_mmap,argv2:/config/mmap.ini\nconfig...... cmdpath:/config/config_tool, argv0:/config/load_config\nconfig...... cmdpath:/config/config_tool, argv1:/misc/config.ini\nconfig...... cmdpath:/config/config_tool, argv2:/misc/PQConfig.ini\nconfig...... cmdpath:/config/config_tool, argv3:(null)\nmi_sys_mma_allocator_create success, heap_base_addr=20000000 length=20000\nmodule [gfx] init\nmodule [rgn] init\nmodule [fb] init\n[MI ERR ]: _MI_FB_GetLayerInfo[56]: no found fb info, please check fb ini config\nno found fb ini param\n\nmodule [ao] init\nmodule [ai] init\nmodule [pspi] init\nmodule [divp] init\nmodule [panel] init\nmodule [disp] init\nmodule [venc] init Dec 20 2021 14:59:44\ninsmod: can't read '/config/modules/4.9.84/media.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videodev.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/v4l2-common.ko': No such file or directory\nMstar_ehc_init version:20180309\nSstar-ehci-1 H.W init\nTitania3_series_start_ehc start\n[USB] config miu select [70] [e8] [ef] [ef]\n[USB] enable miu lower bound address subtraction\n[USB] init squelch level 0x2\nBC disable\ninsmod: can't read '/config/modules/4.9.84/scsi_mod.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-core.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-v4l2.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-memops.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-vmalloc.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/uvcvideo.ko': No such file or directory\n==20180309==&gt; hub_port_init 1 #0\nPlug in USB Port1\n/ #\n</code></pre> El sistema inicia sesi\u00f3n autom\u00e1ticamente sin usuario ni contrase\u00f1a.</p>"},{"location":"DongshanPi-PicoW/03-QuickStart/","title":"\u767b\u5f55\u5f00\u53d1\u677f","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/03-QuickStart/#_1","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":""},{"location":"DongshanPi-PicoW/03-QuickStart/#_2","title":"\u8fde\u63a5\u4e32\u53e3\u6a21\u5757","text":"<p>DongshanPI-PicoW\u5c5e\u4e8e\u6700\u5c0f\u5f00\u53d1\u677f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 5V\u7535\u538b\u8f93\u5165 \u5373\u53ef\u5f00\u59cb\u5de5\u4f5c,\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u4f7f\u7528 \u4e32\u53e3 \u6a21\u5757 \u5206\u522b\u8fde\u63a5<code>P42 TX</code>\u8fde\u63a5\u81f3USB\u4e32\u53e3\u6a21\u5757<code>RX\u5f15\u811a</code>\uff0c<code>P43 RX</code>\u8fde\u63a5\u81f3\u4e32\u53e3\u6a21\u5757 <code>TX\u5f15\u811a</code>\uff0c<code>P46 GND</code>\u8fde\u63a5\u81f3\u4e32\u53e3\u6a21\u5757 <code>GND</code>,\u53e6\u5916  \u53ef\u4ee5\u9009\u62e9 <code>P31 5V</code>\u8fde\u63a5\u81f3\u4e32\u53e3\u6a21\u5757 <code>5V</code>\u7535\u538b\u8f93\u51fa\uff0c\u786e\u8ba4\u597d\u8fde\u63a5\u540e\uff0c\u53ef\u4ee5\u901a\u7535\u8fde\u63a5\u81f3 \u7535\u8111USB\u63a5\u53e3\uff0c\u677f\u5b50\u4f1a\u9ed8\u8ba4\u542f\u52a8\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u5de5\u5177\u7b49 \u6253\u5f00\u4e32\u53e3 \u8fdb\u5165\u7cfb\u7edf\u3002</p> <p>\u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u786e\u4fdd\u4e32\u53e3\u6a21\u5757 5V GND\u4e0e\u5f00\u53d1\u677f\u7684P31 P46 \u8fde\u63a5\u65e0\u8bef\uff0c\u624d\u80fd\u901a\u7535\uff0c\u5426\u5219 \u4f1a\u5bfc\u81f4\u786c\u4ef6\u635f\u574f\uff0c\u6211\u4eec\u4e0d\u4e88\u5904\u7406\u3002</p> <p></p> <p>\u5982\u4e0b\u4f7f\u7528\u4e86\u4e00\u4e2aUSB\u8f6c\u4e32\u53e3\u6a21\u5757\u548c\u677f\u5b50\u7684\u8fde\u63a5\u793a\u610f\u56fe\uff0c\u53ef\u4ee5\u7528\u6765\u53c2\u8003,\u4e00\u5b9a\u8981\u6ce8\u610f\u7ebf\u5e8f\u548cusb\u8f6c\u4e32\u53e3\u6a21\u5757\u5bf9\u4e0a\uff01</p> <p></p>"},{"location":"DongshanPi-PicoW/03-QuickStart/#_3","title":"\u4f7f\u7528\u4e32\u53e3\u767b\u5f55\u7cfb\u7edf","text":""},{"location":"DongshanPi-PicoW/03-QuickStart/#1","title":"1. \u8fde\u63a5\u4e32\u53e3\u7ebf","text":"<p>\u5c06\u914d\u5957\u7684TypeC\u7ebf\u4e00\u6bb5\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\u7684\u4e32\u53e3/\u4f9b\u7535\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\u677f\u8f7d\u7684\u7ea2\u8272\u7535\u6e90\u706f\u4f1a\u4eae\u8d77\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5b89\u88c5\u4e32\u53e3\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u52a8\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u6765\u81ea\u52a8\u5b89\u88c5\u3002</p> <ul> <li>\u5bf9\u4e8eWindows\u7cfb\u7edf \u6b64\u65f6Windows\u8bbe\u5907\u7ba1\u7406\u5668 \u5728 \u7aef\u53e3(COM\u548cLPT) \u5904\u4f1a\u591a\u51fa\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u4e00\u822c\u662f\u4ee5 <code>USB-Enhanced-SERIAL CH9102</code>\u5f00\u5934\uff0c\u60a8\u9700\u8981\u7559\u610f\u4e00\u4e0b\u540e\u9762\u7684\u5177\u4f53COM\u7f16\u53f7\uff0c\u7528\u4e8e\u540e\u7eed\u8fde\u63a5\u4f7f\u7528\u3002</li> </ul> <p></p> <p>\u5982\u4e0a\u56fe\uff0cCOM\u53f7\u662f96\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8fde\u63a5\u6240\u4f7f\u7528\u7684\u4e32\u53e3\u53f7\u5c31\u662f96\u3002</p> <ul> <li>\u5bf9\u4e8eLinux\u7cfb\u7edf \u53ef\u4ee5\u67e5\u770b\u662f\u5426\u591a\u51fa\u4e00\u4e2a/dev/tty&lt;&gt; \u8bbe\u5907,\u4e00\u822c\u60c5\u51b5\u8bbe\u5907\u8282\u70b9\u4e3a /dev/ttyACM0  \u3002</li> </ul> <p></p>"},{"location":"DongshanPi-PicoW/03-QuickStart/#2","title":"2. \u6253\u5f00\u4e32\u53e3\u63a7\u5236\u53f0","text":""},{"location":"DongshanPi-PicoW/03-QuickStart/#_4","title":"\u83b7\u53d6\u4e32\u53e3\u5de5\u5177","text":"<p>\u4f7f\u7528Putty\u6216\u8005MobaXterm\u7b49\u4e32\u53e3\u5de5\u5177\u6765\u5f00\u53d1\u677f\u8bbe\u5907\u3002</p> <ul> <li>\u5176\u4e2dputty\u5de5\u5177\u53ef\u4ee5\u8bbf\u95ee\u9875\u9762  https://www.chiark.greenend.org.uk/~sgtatham/putty/  \u6765\u83b7\u53d6\u3002</li> <li>MobaXterm\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u9875\u9762 https://mobaxterm.mobatek.net/ \u83b7\u53d6 (\u63a8\u8350\u4f7f\u7528)\u3002</li> </ul>"},{"location":"DongshanPi-PicoW/03-QuickStart/#putty","title":"\u4f7f\u7528putty\u767b\u5f55\u4e32\u53e3","text":""},{"location":"DongshanPi-PicoW/03-QuickStart/#mobaxterm","title":"\u4f7f\u7528Mobaxterm\u767b\u5f55\u4e32\u53e3","text":"<p>\u6253\u5f00MobaXterm\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u201cSession\u201d\uff0c\u5728\u5f39\u51fa\u7684\u754c\u9762\u9009\u4e2d\u201cSerial\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u9009\u62e9\u7aef\u53e3\u53f7\uff08\u524d\u9762\u8bbe\u5907\u7ba1\u7406\u5668\u663e\u793a\u7684\u7aef\u53e3\u53f7COM21\uff09\u3001\u6ce2\u7279\u7387\uff08Speed 115200\uff09\u3001\u6d41\u63a7\uff08Flow Control: none\uff09,\u6700\u540e\u70b9\u51fb\u201cOK\u201d\u5373\u53ef\u3002\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6ce8\u610f\uff1a\u6d41\u63a7\uff08Flow Control\uff09\u4e00\u5b9a\u8981\u9009\u62e9none\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u5728MobaXterm\u4e2d\u5411\u4e32\u53e3\u8f93\u5165\u6570\u636e</p> <p></p>"},{"location":"DongshanPi-PicoW/03-QuickStart/#3-shell","title":"3. \u8fdb\u5165\u7cfb\u7edfshell","text":"<p>\u4f7f\u7528\u4e32\u53e3\u5de5\u5177\u6210\u529f\u6253\u5f00\u4e32\u53e3\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u4e0b Enter \u952e \u8fdb\u5165shell\uff0c\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u6309\u4e0b\u677f\u5b50\u4e0a\u7684 <code>Reset</code>\u590d\u4f4d\u952e\uff0c\u6765\u67e5\u770b\u5b8c\u6574\u7684\u7cfb\u7edf\u4fe1\u606f\u3002</p> <p><pre><code>IPL gdf99011\nD-06\nHW Reset\n00000000 00000000\nResume? N, addr 00000000\nmiupll_200MHz\nSPI 54M\n64MB\nBIST0_0001-OK\nSPI 54M\n[BBT] Found table @ 0x00020000\n\nChecksum OK\n\nIPL_CUST gdf99011\nExport ENV 1\n\n\n\nU-Boot 2015.01 (Dec 10 2021 - 09:17:46), Build: jenkins-devops--UBT--AutoRelese_To_ALKAID-141\n\nVersion: P3g5414d39\nI2C:   ready\nDRAM:\nWARNING: Caches not enabled\nSPINAND_I:  [FLASH] Found SNI in block 0.\n[FLASH] dev_id = 0xee\n[FLASH] mfr_id = 0xef, dev_id= 0xaa id_len = 0x3\n[SPINAND] RFC ues command 0x6b with 0x08 dummy clock.\n[SPINAND] Program load with command 0x32.\n[SPINAND] Random load with command 0x34.\n[FLASH] Unlock all block.\n[FLASH] Use BDMA.\n128 MiB\nMMC:   MStar SD/MMC: 0\nENV: offset = 0x480000 size = 0x40000\nENV1: offset = 0x4c0000 size = 0x40000\nIn:    serial\nOut:   serial\nErr:   serial\nNet:   No ethernet found.\n\nNAND read: device 0 offset 0x520000, size 0x500000\nTime:383961 us, speed:13654 KB/s\n 5242880 bytes read: OK\nfound the partition info of MISC\n_BootLogoSetPq 1674, pData: 23a0ce00 u32DataSize: 2964\ngpio debug MHal_GPIO_Pad_Set: pin=62\nclk=12M, u16Div=0 u32Duty=0x95f u32Period=0x95f\n[halPWMPadSet][106] (pwmId, padId) = (1, 63)\n##  Booting kernel from Legacy Image at 22000000 ...\n   Image Name:   MVX4##P3##g#######KL_LX409##[BR:\n   Image Type:   ARM Linux Kernel Image (lzma compressed)\n   Data Size:    2121028 Bytes = 2 MiB\n   Load Address: 20008000\n   Entry Point:  20008000\n   Verifying Checksum ... OK\n-usb_stop(USB_PORT0)\n-usb_stop(USB_PORT2)\n   Uncompressing Kernel Image ...\n[XZ] !!!reserved 0x21000000 length=0x 1000000 for xz!!\n   XZ: uncompressed size=0x43d000, ret=7\nOK\natags:0x20000000\n\nStarting kernel ...\n\nearly_atags_to_fdt() success\nBooting Linux on physical CPU 0x0\nLinux version 4.9.84 (ubuntu@ubuntu1804) (gcc version 9.1.0 (GCC) ) #6 SMP PREEMPT Thu Mar 16 04:59:57 EDT 2023\nCPU: ARMv7 Processor [410fc075] revision 5 (ARMv7), cr=50c5387d\nCPU: div instructions available: patching division code\nCPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache\nearly_atags_to_fdt() success\nOF: fdt:Machine model: PIONEER3 SSC021A-S01A-S\n[ERR] LX_MEM, LX_MEM2, LX_MEM3 not 1MB aligned\nLXmem is 0x3fe0000 PHYS_OFFSET is 0x20000000\nAdd mem start 0x20000000 size 0x3fe0000!!!!\n\nLX_MEM  = 0x20000000, 0x3fe0000\nLX_MEM2 = 0x0, 0x0\nLX_MEM3 = 0x0, 0x0\nEMAC_LEN= 0x0\nDRAM_LEN= 0x0\ndeal_with_reserved_mmap memblock_reserve success mmap_reserved_config[0].reserved_start=\n0x23c00000\n\ndeal_with_reserve_mma_heap memblock_reserve success mma_config[0].reserved_start=\n0x21e00000\n\ncma: Reserved 2 MiB at 0x21c00000\nMemory policy: Data cache writealloc\npercpu: Embedded 14 pages/cpu @c3f1c000 s25368 r8192 d23784 u57344\nBuilt 1 zonelists in Zone order, mobility grouping on.  Total pages: 16224\nKernel command line: ubi.mtd=UBI,0x800 root=/dev/mtdblock8 rootfstype=squashfs ro init=/linuxrc LX_MEM=0x3FE0000 mma_heap=mma_heap_name0,miu=0,sz=0x1E00000 cma=2M highres=off mmap_reserved=fb,miu=0,sz=0x300000,max_start_off=0x3C00000,max_end_off=0x3F00000 mtdparts=nand0:0x140000(CIS),0x1a0000(BOOT0),0x1a0000(BOOT1),0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\nPID hash table entries: 256 (order: -2, 1024 bytes)\nDentry cache hash table entries: 8192 (order: 3, 32768 bytes)\nInode-cache hash table entries: 4096 (order: 2, 16384 bytes)\nMemory: 24224K/65408K available (2514K kernel code, 206K rwdata, 1304K rodata, 168K init, 159K bss, 39136K reserved, 2048K cma-reserved)\nVirtual kernel memory layout:\n    vector  : 0xffff0000 - 0xffff1000   (   4 kB)\n    fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)\n    vmalloc : 0xc4000000 - 0xff800000   ( 952 MB)\n    lowmem  : 0xc0000000 - 0xc3fe0000   (  63 MB)\n    modules : 0xbf800000 - 0xc0000000   (   8 MB)\n      .text : 0xc0008000 - 0xc027ce44   (2516 kB)\n      .init : 0xc03e6000 - 0xc0410000   ( 168 kB)\n      .data : 0xc0410000 - 0xc0443bc8   ( 207 kB)\n       .bss : 0xc0445000 - 0xc046ce90   ( 160 kB)\nSLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1\nPreemptible hierarchical RCU implementation.\n        Build-time adjustment of leaf fanout to 32.\n        RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=2.\nRCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=2\nNR_IRQS:16 nr_irqs:16 16\nms_init_main_intc: np-&gt;name=ms_main_intc, parent=gic\nms_init_pm_intc: np-&gt;name=ms_pm_intc, parent=ms_main_intc\nss_init_gpi_intc: np-&gt;name=ms_gpi_intc, parent=ms_main_intc\nFind CLK_cpupll_clk, hook ms_cpuclk_ops\nFind CLK_spi_synth_pll, hook ss_pllclk_ops\narm_arch_timer: Architected cp15 timer(s) running at 6.00MHz (virt).\nclocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x1623fa770, max_idle_ns: 440795202238 ns\nsched_clock: 56 bits at 6MHz, resolution 166ns, wraps every 4398046511055ns\nSwitching to timer-based delay loop, resolution 166ns\nConsole: colour dummy device 80x30\nconsole [ttyS0] enabled\nCalibrating delay loop (skipped), value calculated using timer frequency.. 12.00 BogoMIPS (lpj=60000)\npid_max: default: 4096 minimum: 301\nMount-cache hash table entries: 1024 (order: 0, 4096 bytes)\nMountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)\nCPU: Testing write buffer coherency: ok\nCPU0: update cpu_capacity 1024\nCPU0: thread -1, cpu 0, socket 0, mpidr 80000000\nSetting up static identity map for 0x20008280 - 0x200082cc\nCPU1: update cpu_capacity 1024\nCPU1: thread -1, cpu 1, socket 0, mpidr 80000001\nBrought up 2 CPUs\nSMP: Total of 2 processors activated (24.00 BogoMIPS).\nCPU: All CPU(s) started in SVC mode.\ndevtmpfs: initialized\nVFP support v0.3: implementor 41 architecture 2 part 30 variant 7 rev 5\nclocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns\nfutex hash table entries: 16 (order: -2, 1024 bytes)\nNET: Registered protocol family 16\nDMA: preallocated 256 KiB pool for atomic coherent allocations\n\n\nVersion : MVX4##P3##g#######KL_LX409##[BR:g]#XVM\n\nGPIO: probe endhw-breakpoint: found 5 (+1 reserved) breakpoint and 4 watchpoint registers.\nhw-breakpoint: maximum watchpoint size is 8 bytes.\nSCSI subsystem initialized\nPinreg:0 bit:0 enable:0 speed:5\nPort:0 Index=1\nEnable=1\nDmaReadMode:0\nSpeed:5\nDmaEnable:0\nDmaAddrMode:0\nDmaMiuCh:0\nDmaMiuPri:0\nDmaPhyAddr:21c40000\nSTART default delay 5(us)\nSTOP default delay 5(us)\nHWI2C_MUTEX_CREATE!\nHWI2C(0): initialized\nPinreg:0 bit:0 enable:0 speed:5\nPort:1 Index=17\nEnable=1\nDmaReadMode:0\nSpeed:5\nDmaEnable:1\nDmaAddrMode:0\nDmaMiuCh:0\nDmaMiuPri:0\nDmaPhyAddr:21c41000\nSTART default delay 5(us)\nSTOP default delay 5(us)\nHWI2C_MUTEX_CREATE!\nHWI2C(1): initialized\n[DrvPWMDutyQE0] grp:0\n[DrvPWMDutyQE0] grp:0\n[DrvPWMDutyQE0] grp:0\n[DrvPWMDutyQE0] grp:0\n[NOTICE]pwm-isr(60) success. If not i6e or i6b0, pls confirm it on .dtsi\nclocksource: Switched to clocksource arch_sys_counter\nNET: Registered protocol family 2\nTCP established hash table entries: 1024 (order: 0, 4096 bytes)\nTCP bind hash table entries: 1024 (order: 2, 20480 bytes)\nTCP: Hash tables configured (established 1024 bind 1024)\nUDP hash table entries: 128 (order: 0, 6144 bytes)\nUDP-Lite hash table entries: 128 (order: 0, 6144 bytes)\nNET: Registered protocol family 1\nhw perfevents: enabled with armv7_cortex_a7 PMU driver, 5 counters available\nworkingset: timestamp_bits=30 max_order=13 bucket_order=0\nsquashfs: version 4.0 (2009/01/31) Phillip Lougher\njffs2: version 2.2. \u00a9 2001-2006 Red Hat, Inc.\nfuse init (API version 7.26)\nio scheduler noop registered\nio scheduler deadline registered (default)\nlibphy: Fixed MDIO Bus: probed\nmousedev: PS/2 mouse device common for all mice\n[MHal_GPIO_Check_PE] set gpio84 PE\ni2c /dev entries driver\n1f221000.uart0: ttyS0 at MMIO 0x0 (irq = 34, base_baud = 10800000) is a unknown\n1f221200.uart1: ttyS1 at MMIO 0x0 (irq = 35, base_baud = 10800000) is a unknown\n1f220400.uart2: ttyS2 at MMIO 0x0 (irq = 37, base_baud = 10800000) is a unknown\n1f221400.uart2: ttyS3 at MMIO 0x0 (irq = 38, base_baud = 10800000) is a unknown\n&gt;&gt; [sdmmc] ms_sdmmc_probe\nFail to get pad(131074) form padmux !\n&gt;&gt; [sdmmc] Err: Could not get SD pad group from Padmux dts!\n&gt;&gt; [sdmmc] Err: Failed to use DTS function!\n\nms_sdmmc: probe of soc:sdmmc failed with error -22\nMSYS: DMEM request: [emac0_buff]:0x00000812\nMSYS: DMEM request: [emac0_buff]:0x00000812 success, CPU phy:@0x21C44000, virt:@0xC1C44000\nlibphy: mdio: probed\nmdio_bus mdio-bus@emac0: /soc/emac0/mdio-bus/ethernet-phy@0 has invalid PHY address\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 0\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 1\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 2\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 3\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 4\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 5\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 6\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 7\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 8\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 9\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 10\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 11\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 12\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 13\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 14\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 15\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 16\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 17\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 18\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 19\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 20\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 21\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 22\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 23\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 24\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 25\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 26\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 27\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 28\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 29\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 30\nmdio_bus mdio-bus@emac0: scan phy ethernet-phy at address 31\n[emac_phy_connect][3534] connected mac emac0 to PHY at mdio-bus@emac0:00 [uid=11112222, driver=Generic PHY]\n[ms_cpufreq_init] Current clk=799999872\n[FLASH] Found SNI in block 0.\n[FLASH] dev_id = 0xee\nMSYS: DMEM request: [BDMA]:0x00000840\nMSYS: DMEM request: [BDMA]:0x00000840 success, CPU phy:@0x21C45000, virt:@0xC1C45000\n[FLASH] mfr_id = 0xef, dev_id= 0xaa id_len = 0x3\n[SPINAND] RFC ues command 0x6b with 0x08 dummy clock.\n[SPINAND] Program load with command 0x32.\n[SPINAND] Random load with command 0x34.\n[FLASH] Use BDMA.\nnand: device found, Manufacturer ID: 0xef, Chip ID: 0xaa\nnand: 128 MiB, SLC, erase size: 128 KiB, page size: 2048, OOB size: 64\n11 cmdlinepart partitions found on MTD device nand0\nCreating 11 MTD partitions on \"nand0\":\n0x000000000000-0x000000140000 : \"CIS\"\n0x000000140000-0x0000002e0000 : \"BOOT0\"\n0x0000002e0000-0x000000480000 : \"BOOT1\"\n0x000000480000-0x0000004c0000 : \"ENV\"\n0x0000004c0000-0x000000500000 : \"ENV1\"\n0x000000500000-0x000000520000 : \"KEY_CUST\"\n0x000000520000-0x000000a20000 : \"KERNEL\"\n0x000000a20000-0x000000f20000 : \"RECOVERY\"\n0x000000f20000-0x000001520000 : \"rootfs\"\n0x000001520000-0x0000015c0000 : \"MISC\"\n0x0000015c0000-0x000008000000 : \"UBI\"\n[wakeup source] HW gate_xtal:0 SourceNum:1\n[wakeup source] WakeupSource:61\n\n[ss_gpi_intc_domain_alloc] hw:61 -&gt; v:65\n[ss_gpi_irq_set_wake] hw:61 enable? 1\nNET: Registered protocol family 17\n[mstar_pm_init] resume_pbase=0x200114F5, suspend_imi_vbase=0xC4057000\nThumbEE CPU extension supported.\nRegistering SWP/SWPB emulation handler\nubi0: attaching mtd10\nubi0: scanning is finished\nubi0: attached mtd10 (name \"UBI\", size 106 MiB)\nubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\nubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\nubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\nubi0: good PEBs: 850, bad PEBs: 0, corrupted PEBs: 0\nubi0: user volume: 3, internal volumes: 1, max. volumes count: 128\nubi0: max/mean erase counter: 2/1, WL threshold: 4096, image sequence number: 0\nubi0: available PEBs: 25, total reserved PEBs: 825, PEBs reserved for bad PEB handling: 20\nubi0: background thread \"VFS: Mounted root (squashfs filesystem) readonly on device 31:8.\ndevtmpfs: mounted\nThis architecture does not have kernel memory protection.\n[DMA]: Transfer NOT Completely!\nERROR: Bus[1] in ms_i2c_xfer_write: Slave dev NAK, Addr: 0xba, Data: 0x80 0x47\nGoodix-TS 1-005d: i2c test failed attempt 1: -110\n[emac_phy_link_adjust] EMAC Link Down\n[DMA]: Transfer NOT Completely!\nERROR: Bus[1] in ms_i2c_xfer_write: Slave dev NAK, Addr: 0xba, Data: 0x80 0x47\nGoodix-TS 1-005d: i2c test failed attempt 2: -110\nGoodix-TS 1-005d: I2C communication failure: -110\nGoodix-TS 1-005d: touchscreen config failed!!!\nmount: can't find devpts in /etc/fstab\nnet.core.rmem_default = 163840\nnet.core.rmem_max = 163840\nnet.core.wmem_default = 524288\nnet.core.wmem_max = 1048576\nnet.ipv4.tcp_mem = 924  1232  1848\nnet.ipv4.tcp_rmem = 4096  87380  325120\nnet.ipv4.tcp_wmem = 4096  131072  393216\nmount: mounting none on /sys failed: Drandom: fast init done\nevice or resource busy\nmount: mounting noUBIFS (ubi0:0): background thread \"ubifs_bgt0_0\" started, PID 577\nne on /sys/kernel/debug/ failed: Device or resource busy\nUBIFS (ubi0:0): recovery needed\nUBIFS (ubi0:0): recovery completed\nUBIFS (ubi0:0): UBIFS: mounted UBI device 0, volume 0, name \"miservice\"\nUBIFS (ubi0:0): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\nUBIFS (ubi0:0): FS size: 11427840 bytes (10 MiB, 90 LEBs), journal size 1904640 bytes (1 MiB, 15 LEBs)\nUBIFS (ubi0:0): reserved for root: 0 bytes (0 KiB)\nUBIFS (ubi0:0): media format: w4/r0 (latest is w4/r0), UUID 17CB3D0B-DDBA-45AD-B591-2625FAE405BE, small LPT model\nUBIFS (ubi0:1): background thread \"ubifs_bgt0_1\" started, PID 580\nUBIFS (ubi0:1): recovery needed\nUBIFS (ubi0:1): recovery completed\nUBIFS (ubi0:1): UBIFS: mounted UBI device 0, volume 1, name \"customer\"\nUBIFS (ubi0:1): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\nUBIFS (ubi0:1): FS size: 79613952 bytes (75 MiB, 627 LEBs), journal size 9023488 bytes (8 MiB, 72 LEBs)\nUBIFS (ubi0:1): reserved for root: 0 bytes (0 KiB)\nUBIFS (ubi0:1): media format: w4/r0 (latest is w4/r0), UUID 86613E8B-DAE5-49A0-9361-DE40E76B69BE, small LPT model\nUBIFS (ubi0:2): background thread \"ubifs_bgt0_2\" started, PID 583\nUBIFS (ubi0:2): recovery needed\nUBIFS (ubi0:2): recovery completed\nUBIFS (ubi0:2): UBIFS: mounted UBI device 0, volume 2, name \"appconfigs\"\nUBIFS (ubi0:2): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\nUBIFS (ubi0:2): FS size: 3809280 bytes (3 MiB, 30 LEBs), journal size 1142785 bytes (1 MiB, 8 LEBs)\nUBIFS (ubi0:2): reserved for root: 0 bytes (0 KiB)\nUBIFS (ubi0:2): media format: w4/r0 (latest is w4/r0), UUID 6561C2CE-C61A-4F56-8E94-29512892FA00, small LPT model\nfirmwarefs/fwfs.c:1321:error: Corrupted dir pair at {0xa0000001, 0xa0000000}\nfwfs_fuse.c:594:error: Invalid or incomplete multibyte or wide character\ninsmod: can't read '/config/modules/4.9.84/nfsv3.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/mmc_core.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/kdrv_sdmmc.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/ms_notify.ko': No such file or directory\njpe driver probed\n[DRV_DIVP_PROC_Init]\nAudioProcInit 374\nmodule [sys] init\nMI_SYSCFG_SetupMmapLoader default_config_path:/config/config_tool, argv1:/config/load_mmap,argv2:/config/mmap.ini\nconfig...... cmdpath:/config/config_tool, argv0:/config/load_config\nconfig...... cmdpath:/config/config_tool, argv1:/misc/config.ini\nconfig...... cmdpath:/config/config_tool, argv2:/misc/PQConfig.ini\nconfig...... cmdpath:/config/config_tool, argv3:(null)\nmi_sys_mma_allocator_create success, heap_base_addr=20000000 length=20000\nmodule [gfx] init\nmodule [rgn] init\nmodule [fb] init\n[MI ERR ]: _MI_FB_GetLayerInfo[56]: no found fb info, please check fb ini config\nno found fb ini param\n\nmodule [ao] init\nmodule [ai] init\nmodule [pspi] init\nmodule [divp] init\nmodule [panel] init\nmodule [disp] init\nmodule [venc] init Dec 20 2021 14:59:44\ninsmod: can't read '/config/modules/4.9.84/media.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videodev.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/v4l2-common.ko': No such file or directory\nMstar_ehc_init version:20180309\nSstar-ehci-1 H.W init\nTitania3_series_start_ehc start\n[USB] config miu select [70] [e8] [ef] [ef]\n[USB] enable miu lower bound address subtraction\n[USB] init squelch level 0x2\nBC disable\ninsmod: can't read '/config/modules/4.9.84/scsi_mod.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-core.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-v4l2.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-memops.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/videobuf2-vmalloc.ko': No such file or directory\ninsmod: can't read '/config/modules/4.9.84/uvcvideo.ko': No such file or directory\n==20180309==&gt; hub_port_init 1 #0\nPlug in USB Port1\n/ #\n</code></pre> \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002 \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002 \u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u81ea\u5df1\u767b\u5f55 \u6ca1\u6709\u7528\u6237\u540d \u6ca1\u6709\u5bc6\u7801\u3002</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv.ES/","title":"06 ConfigHostEnv.ES","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv.ES/#instalacion-y-configuracion-del-entorno-de-desarrollo","title":"Instalaci\u00f3n y configuraci\u00f3n del entorno de desarrollo","text":""},{"location":"DongshanPi-PicoW/06-ConfigHostEnv.ES/#obtener-el-sistema-de-la-maquina-virtual","title":"Obtener el sistema de la m\u00e1quina virtual","text":""},{"location":"DongshanPi-PicoW/06-ConfigHostEnv.ES/#descarga-de-la-herramienta-de-maquina-virtual-vmware","title":"Descarga de la herramienta de m\u00e1quina virtual VMware","text":"<p>Abre el navegador y visita el sitio web https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html. Haz clic en \"DESCARGAR AHORA\" como se muestra en la imagen a continuaci\u00f3n, para descargar e instalar la versi\u00f3n de Windows de VMware Workstation.</p> <p></p> <p>Una vez que se complete la descarga, simplemente sigue los pasos de la instalaci\u00f3n usando la configuraci\u00f3n predeterminada.</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv.ES/#obtener-la-imagen-del-sistema-ubuntu","title":"Obtener la imagen del sistema Ubuntu","text":"<p>Visita https://www.linuxvmimages.com/images/ubuntu-1804/ usando el navegador y haz clic en \"VMware Image\" como se muestra en la imagen a continuaci\u00f3n.</p> <p></p> <p>La descarga puede tardar entre 10 y 30 minutos, dependiendo de la velocidad de la conexi\u00f3n a Internet.</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv.ES/#ejecutar-el-sistema-de-la-maquina-virtual","title":"Ejecutar el sistema de la m\u00e1quina virtual","text":"<ol> <li>Descomprime el archivo comprimido de la imagen del sistema de la m\u00e1quina virtual. Despu\u00e9s de la descompresi\u00f3n, ver\u00e1s dos archivos. Usaremos el archivo de configuraci\u00f3n con la extensi\u00f3n \".vmx\".</li> </ol> <ol> <li> <p>Abre el software VMware Workstation instalado y haz clic en \"Archivo\" en la esquina superior izquierda y luego en \"Abrir\". Busca el archivo \"Ubuntu_18.04.6_VM_LinuxVMImages.COM.vmx\" y se abrir\u00e1 una nueva ventana de di\u00e1logo de la m\u00e1quina virtual.</p> </li> <li> <p>La imagen de abajo es la interfaz de configuraci\u00f3n de la m\u00e1quina virtual. Haz clic en el recuadro rojo 2 para editar la configuraci\u00f3n de la m\u00e1quina virtual y ajusta el tama\u00f1o de la memoria y el n\u00famero de procesadores. Se recomienda tener al menos 4GB de memoria y 4 procesadores. Una vez que hayas terminado de ajustar la configuraci\u00f3n, haz clic en \"Ejecutar esta m\u00e1quina virtual\" para ejecutarla.</p> </li> </ol> <p></p> <p>La primera vez que abras la m\u00e1quina virtual, aparecer\u00e1 un cuadro de di\u00e1logo que pregunta si quieres copiar la m\u00e1quina virtual. Haz clic en \"He copiado\" para continuar iniciando el sistema de la m\u00e1quina virtual.</p> <p>Despu\u00e9s de unos segundos, el sistema se iniciar\u00e1 autom\u00e1ticamente. Haz clic en \"Ubuntu\" para acceder a la pantalla de inicio de sesi\u00f3n. Ingresa la contrase\u00f1a \"ubuntu\" para iniciar sesi\u00f3n en el sistema Ubuntu.</p> <p>Nota: </p> <p>El nombre de usuario y la contrase\u00f1a predeterminados de Ubuntu son \"ubuntu ubuntu\".</p> <p>El nombre de usuario y la contrase\u00f1a predeterminados de Ubuntu son \"ubuntu ubuntu\".</p> <p>El nombre de usuario y la contrase\u00f1a predeterminados de Ubuntu son \"ubuntu ubuntu\".</p> <p>Nota: Si tu ordenador con Windows ya tiene acceso a Internet, la red se compartir\u00e1 autom\u00e1ticamente con Ubuntu despu\u00e9s de iniciarlo, permitiendo la conexi\u00f3n a Internet.</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv.ES/#configurar-el-entorno-de-desarrollo","title":"Configurar el entorno de desarrollo","text":"<ul> <li>Instalar los paquetes de software necesarios. Haga clic en la interfaz de Ubuntu con el mouse y presione ctrl + alt + t al mismo tiempo en el teclado para invocar r\u00e1pidamente la interfaz de terminal. Despu\u00e9s de que aparezca la ventana de terminal, ejecute el siguiente comando para instalar las dependencias necesarias:</li> </ul> <pre><code>sudo apt-get install -y sed make binutils build-essential gcc g++ bash patch gzip bzip2 perl tar cpio unzip rsync file bc wget python cvs git mercurial rsync subversion android-tools-mkbootimg vim libssl-dev android-tools-fastboot\n</code></pre> <p>Si encuentra que su m\u00e1quina virtual de Ubuntu no puede copiar y pegar comandos desde Windows en la primera vez que inicia, es necesario ingresar el siguiente comando para instalar una herramienta que comparte el portapapeles entre la m\u00e1quina virtual y Windows:</p> <pre><code>sudo apt install open-vm-tools-desktop \n</code></pre> <p></p> <p>Despu\u00e9s de la instalaci\u00f3n, haga clic en el bot\u00f3n de energ\u00eda en la esquina superior derecha para reiniciar el sistema Ubuntu o ingrese el comando sudo reboot para reiniciar directamente.</p> <p>Ahora puede pegar archivos desde Windows en Ubuntu o copiar archivos desde Ubuntu a Windows.</p> <p>Despu\u00e9s de completar este paso, puede continuar y obtener el c\u00f3digo fuente para comenzar el desarrollo de la placa de desarrollo RISC-V Dongshan Nezha STU.</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv/","title":"Ubuntu\u73af\u5883\u642d\u5efa","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv/#_1","title":"\u5b89\u88c5\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":""},{"location":"DongshanPi-PicoW/06-ConfigHostEnv/#_2","title":"\u83b7\u53d6\u865a\u62df\u673a\u7cfb\u7edf","text":""},{"location":"DongshanPi-PicoW/06-ConfigHostEnv/#vmware","title":"\u4e0b\u8f7dvmware\u865a\u62df\u673a\u5de5\u5177","text":"<p>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u7f51\u5740    https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html   \u53c2\u8003\u4e0b\u56fe\u7bad\u5934\u6240\u793a\uff0c\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5 Windows\u7248\u672c\u7684VMware Workstation \uff0c\u70b9\u51fb DOWNLOAD NOW  \u5373\u53ef\u5f00\u59cb\u4e0b\u8f7d\u3002</p> <p></p> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u5168\u90e8\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u4e00\u6b65\u6b65\u5b89\u88c5\u5373\u53ef\u3002</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv/#ubuntu","title":"\u83b7\u53d6Ubuntu\u7cfb\u7edf\u955c\u50cf","text":"<ul> <li>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00  https://www.linuxvmimages.com/images/ubuntu-1804/     \u627e\u5230\u5982\u4e0b\u7bad\u5934\u6240\u793a\u4f4d\u7f6e\uff0c\u70b9\u51fb VMware Image \u4e0b\u8f7d\u3002</li> </ul> <p>\u4e0b\u8f7d\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u6301\u7eed 10 \u5230 30 \u5206\u949f\uff0c\u5177\u4f53\u8981\u4f9d\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv/#_3","title":"\u8fd0\u884c\u865a\u62df\u673a\u7cfb\u7edf","text":"<ol> <li>\u89e3\u538b\u7f29 \u865a\u62df\u673a\u7cfb\u7edf\u955c\u50cf\u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u5982\u4e0b\u4e24\u4e2a\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 \u540e\u7f00\u540d\u4e3a .vmx \u8fd9\u4e2a \u914d\u7f6e\u6587\u4ef6\u3002</li> </ol> <ol> <li>\u6253\u5f00\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 vmware workstation \u8f6f\u4ef6 \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684 \u6587\u4ef6 \u2192 \u6253\u5f00 \u627e\u5230\u4e0a\u9762\u7684 Ubuntu_18.04.6_VM_LinuxVMImages.COM.vmx  \u6587\u4ef6\uff0c\u4e4b\u540e\u4f1a\u5f39\u51fa\u65b0\u7684\u865a\u62df\u673a\u5bf9\u8bdd\u6846\u9875\u9762\u3002</li> </ol> <ol> <li>\u5982\u4e0b\u56fe\u6240\u793a\u4e3a  \u4e3a\u6211\u4eec\u5df2\u7ecf\u865a\u62df\u673a\u7684\u914d\u7f6e\u754c\u9762\uff0c\u90a3\u9762\u6211\u4eec\u53ef\u4ee5 \u70b9\u51fb \u7ea2\u6846 2 \u7f16\u8f91\u865a\u62df\u673a\u8bbe\u7f6e \u91cc\u9762 \u53bb\u8c03\u6b63 \u6211\u4eec\u865a\u62df\u673a\u7684 \u5185\u5b58 \u5927\u5c0f \u548c\u5904\u7406\u5668\u4e2a\u6570\uff0c\u5efa\u8bae \u6700\u597d \u5185\u5b58\u4e3a 4GB \u53ca\u4ee5\u4e0a\uff0c\u5904\u7406\u5668\u81f3\u5c114 \u4e2a\u3002 \u8c03\u6574\u597d\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5 \u70b9\u51fb \u5f00\u542f\u6b64\u865a\u62df\u673a \u6765\u8fd0\u884c\u6b64\u865a\u62df\u673a\u4e86</li> </ol> <p>\u7b2c\u4e00\u6b21\u6253\u5f00\u4f1a\u63d0\u793a  \u4e00\u4e2a \u865a\u62df\u673a\u5df2\u7ecf\u590d\u5236\u7684 \u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u8fd9\u65f6\uff0c\u53ea\u9700\u8981 \u70b9\u51fb  \u6211\u5df2\u590d\u5236\u865a\u62df\u673a  \u5c31\u53ef\u4ee5\u7ee7\u7eed\u542f\u52a8\u865a\u62df\u673a\u7cfb\u7edf\u4e86\u3002</p> <p></p> <p>\u7b49\u5f85\u6570\u79d2\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u542f\u52a8\u4e86\uff0c\u542f\u52a8\u4ee5\u540e \u9f20\u6807\u70b9\u51fb   Ubuntu  \u5b57\u6837\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u767b\u5f55\u5bf9\u8bdd\u6846\uff0c\u8f93\u5165  \u5bc6\u7801 ubuntu \u5373\u53ef\u767b\u5f55\u8fdb\u5165ubuntu\u7cfb\u7edf\u5185\u3002</p> <p>\u6ce8\u610f\uff1a </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>ubuntu\u9ed8\u8ba4\u9700\u8981\u8054\u7f51\uff0c\u5982\u679c\u4f60\u7684 Windows\u7535\u8111\u5df2\u7ecf\u53ef\u4ee5\u8bbf\u95eeInternet \u4e92\u8054\u7f51\uff0cubuntu\u7cfb\u7edf\u540e\u5c31\u4f1a\u81ea\u52a8\u5171\u4eab Windows\u7535\u8111\u7684\u7f51\u7edc \u8fdb\u884c\u8fde\u63a5internet \u7f51\u7edc\u3002</p>"},{"location":"DongshanPi-PicoW/06-ConfigHostEnv/#_4","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li>\u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\u5305, \u9f20\u6807\u70b9\u51fb\u8fdb\u5165 ubuntu\u754c\u9762\u5185\uff0c\u952e\u76d8\u540c\u65f6 \u6309\u4e0b ctrl + alt + t \u4e09\u4e2a\u6309\u952e\u4f1a\u5feb\u901f\u5524\u8d77\uff0c\u7ec8\u7aef\u754c\u9762\uff0c\u5524\u8d77\u6210\u529f\u540e\uff0c\u5728\u7ec8\u7aef\u91cc\u9762\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305\u3002</li> </ul> <pre><code>sudo apt-get install -y  sed make binutils build-essential  gcc g++ bash patch gzip bzip2 perl  tar cpio unzip rsync file  bc wget python  cvs git mercurial rsync  subversion android-tools-mkbootimg vim  libssl-dev  android-tools-fastboot\n</code></pre> <p>\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684ubuntu\u865a\u62df\u673a \u7b2c\u4e00\u6b21\u542f\u52a8 \u65e0\u6cd5 \u901a\u8fc7 windows\u4e0b\u590d\u5236 \u547d\u4ee4 \u7c98\u8d34\u5230 ubuntu\u5185\uff0c\u5219\u9700\u8981\u5148\u624b\u6572 \u6267\u884c\u5982\u4e0b\u547d\u4ee4 \u5b89\u88c5\u4e00\u4e2a \u7528\u4e8e \u865a\u62df\u673a\u548c windows\u5171\u4eab\u526a\u5207\u677f\u7684\u5de5\u5177\u5305\u3002</p> <pre><code>sudo apt install open-vm-tools-desktop \n</code></pre> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u7535\u6e90\u6309\u94ae\uff0c\u91cd\u542fubuntu\u7cfb\u7edf\uff0c\u6216\u8005 \u76f4\u63a5\u8f93\u5165 sudo reboot \u547d\u4ee4\u8fdb\u884c\u91cd\u542f\u3002</p> <p>\u8fd9\u65f6\u5c31\u53ef\u4ee5 \u901a\u8fc7windows\u7aef\u5411ubuntu\u5185\u7c98\u8d34\u6587\u4ef6\uff0c\u6216\u8005\u62f7\u8d1d\u62f7\u51fa\u6587\u4ef6\u4e86\u3002</p> <p></p> <p>\u505a\u5b8c\u8fd9\u4e00\u6b65\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\uff0c\u83b7\u53d6\u6e90\u7801 \u5f00\u59cbRISC-V \u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u7684\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002</p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/","title":"07 IKAYAKISDK DevelopmentGuide.ES","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#compilacion-del-sistema-utilizando-ikayaki-sdk","title":"Compilaci\u00f3n del sistema utilizando IKAYAKI-SDK","text":""},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#1-introduccion-a-la-arquitectura-de-ikayaki-sdk","title":"1. Introducci\u00f3n a la arquitectura de IKAYAKI-SDK","text":""},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#1-descripcion-de-los-modulos","title":"1. Descripci\u00f3n de los m\u00f3dulos","text":"Abreviatura Nombre completo Responsabilidad SYS System Implementaci\u00f3n de la inicializaci\u00f3n del sistema MI, la gesti\u00f3n del b\u00fafer de memoria y la gesti\u00f3n del flujo de datos entre los diferentes m\u00f3dulos VDEC Video Decoder Decodificador de v\u00eddeo H264/H265/JPEG DIVP Deinterlace&amp;Video Post Process Engine El motor DIVP tiene dos funciones principales: \u2460 convertir el formato de los datos decodificados \u2461 redimensionar los datos decodificados VDISP Virtual Display Montaje de software DISP Display Engine El motor DISP realiza el montaje de hardware de la imagen de salida de las unidades de procesamiento VDEC/DIVP y la se\u00f1al de audio de salida AO, y la codifica en una se\u00f1al de salida HDMI/VGA/CVBS VENC Video Encoder Codificador de v\u00eddeo H264/H265/MotionJpeg AI Audio Input Interface Unidad de captura de entrada de audio I2S AO Audio Output Interface Salida de audio GFX Graphics Engine El motor gr\u00e1fico proporciona soporte b\u00e1sico de aceleraci\u00f3n de hardware para el dibujo en 2D, reduciendo la carga de la CPU FB FrameBuffer Pantalla de UI HDMI High Definition Multimedia Interface Salida est\u00e1ndar HDMI/VGA"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#2-arquitectura-de-software","title":"2. Arquitectura de software","text":"<ul> <li>Las funciones de implementaci\u00f3n se dividen de arriba hacia abajo en la capa de API de MI, la capa de implementaci\u00f3n de MI, la capa de abstracci\u00f3n de hardware Hal, la capa de controlador Driver y la capa de hardware del chip.</li> <li>El c\u00f3digo de funcionalidad del SDK se implementa en la capa del kernel para reducir la eficiencia de implementaci\u00f3n de la funci\u00f3n l\u00f3gica al evitar la programaci\u00f3n del kernel a modo de usuario.</li> <li>Para los clientes de la capa superior, se proporciona una interfaz de usuario de la API de MI. Las aplicaciones de la capa de usuario pueden llamar directamente a la interfaz de MI para acceder a la funcionalidad correspondiente de MI.</li> </ul>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#3-estructura-de-directorios-del-sdk","title":"3. Estructura de directorios del SDK","text":"Directorio Nombre del m\u00f3dulo Funci\u00f3n project board Ruta de almacenamiento de informaci\u00f3n de PCB project configs Ruta de almacenamiento de archivos de configuraci\u00f3n predefinidos project image Biblioteca de materiales y lugar de almacenamiento de archivos de imagen para generar archivos de imagen project kbuild Entorno de compilaci\u00f3n de kernel project release Piscina objetivo que almacena archivos de encabezado, archivos de biblioteca, m\u00f3dulos del kernel y bibliotecas de terceros para uso externo SDK Verify/feature Carpeta de verificaci\u00f3n que almacena archivos de prueba de unidad y caracter\u00edsticas de m\u00f3dulos SDK Verify/demo Demostraci\u00f3n de prueba de funcionalidad general"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#4-gestion-de-memoria","title":"4. Gesti\u00f3n de memoria","text":"<p>Consulte Introducci\u00f3n a la distribuci\u00f3n de memoria para obtener m\u00e1s detalles.</p> <ul> <li>Memoria reservada a trav\u00e9s de mmap.ini</li> <li>Soporta gesti\u00f3n de memoria mma en el m\u00f3dulo, con cada m\u00f3dulo asignando un tama\u00f1o reservado en mma.</li> </ul> <p></p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#5-conceptos-basicos","title":"5. Conceptos b\u00e1sicos","text":"<ul> <li>Flujo de datos: cada m\u00f3dulo MI se puede considerar una unidad de procesamiento de datos puros, y el flujo de datos de entrada y salida se coordina internamente en MI SYS. El flujo de datos de entrada representa los datos de entrada de la unidad de datos, y el flujo de datos de salida representa los datos procesados por la unidad.</li> <li>Flujo de control: el proceso de control de los par\u00e1metros de procesamiento de datos de cada m\u00f3dulo MI por parte de la aplicaci\u00f3n, como configurar los par\u00e1metros de decodificaci\u00f3n de MI_VDEC, iniciar y detener el canal de MI_VDEC, y establecer la resoluci\u00f3n y el formato de salida del puerto de MI_VDEC, etc.</li> <li>Canal: para los m\u00f3dulos MI que requieren procesar o producir un flujo, un canal representa el contexto de multiplexaci\u00f3n por divisi\u00f3n de tiempo de un flujo en un m\u00f3dulo MI y los ajustes de flujo de control relacionados. Para m\u00f3dulos reutilizables como MI_VDEC, MI_DIVP y MI_DISP, pueden admitir varios canales.</li> <li>Puerto: el puerto se divide en dos tipos, puerto de entrada y puerto de salida. El puerto de entrada es la posici\u00f3n del flujo de entrada del canal, mientras que el puerto de salida es la posici\u00f3n del flujo de salida del canal. Un canal puede tener m\u00faltiples puertos de entrada y m\u00faltiples puertos de salida.</li> </ul>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#2-obtener-el-proyecto-sdk","title":"2. Obtener el proyecto SDK","text":""},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#obtener-el-codigo","title":"Obtener el c\u00f3digo","text":"<p>Abra el enlace https://dongshanpi.cowtransfer.com/s/5c3c05deef7247 con un navegador y descargue la carpeta completa IKAYAKI_SDK. Despu\u00e9s de descargar, ver\u00e1 que contiene los siguientes 6 archivos de paquetes comprimidos:</p> <p><pre><code>arm-sigmastar-linux-uclibcgnueabihf-9.1.0.tar.xz\ngcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\nboot-IKAYAKI_DLM00V015.tar.gz    \nproject-IKAYAKI_DLM00V015.tar.gz\nkernel-IKAYAKI_DLM00V015.tar.gz  \nsdk-IKAYAKI_DLM00V015.tar.gz\n</code></pre> Utilice Filezila, Samba o arrastre los archivos para copiarlos a la carpeta de inicio del sistema Ubuntu.</p> <p>Antes de copiar, puede crear un directorio para la placa usando el siguiente comando de ejemplo despu\u00e9s de mkdir DongshanPI-PicoW, y luego cree otro directorio llamado IKAYAKI_SDK dentro de \u00e9l.</p> <pre><code>book@100ask.org:~$ mkdir DongshanPI-PicoW\nbook@100ask.org:~$ cd DongshanPI-PicoW/\nbook@100ask.org:~/DongshanPI-PicoW$ mkdir IKAYAKI_SDK\nbook@100ask.org:~/DongshanPI-PicoW$ cd IKAYAKI_SDK/\nbook@100ask.org:~/DongshanPI-PicoW/IKAYAKI_SDK$\n</code></pre> <p>Por \u00faltimo, copie los 6 archivos comprimidos descargados en la carpeta IKAYAKI_SDK que acabamos de crear. Una vez que se haya completado la copia, se mostrar\u00e1 como se muestra a continuaci\u00f3n:</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ ls -lh\ntotal 1.3G\n-rwxr--r-- 1 book book  40M Sep  9  2022 arm-sigmastar-linux-uclibcgnueabihf-9.1.0.tar.xz\n-rwxr--r-- 1 book book  16M Sep  9  2022 boot-IKAYAKI_DLM00V015.tar.gz\n-rwxr--r-- 1 book book 341M Sep  9  2022 gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\n-rwxr--r-- 1 book book 158M Sep  9  2022 kernel-IKAYAKI_DLM00V015.tar.gz\n-rwxr--r-- 1 book book 452M Sep  9  2022 project-IKAYAKI_DLM00V015.tar.gz\n-rwxr--r-- 1 book book 310M Sep  9  2022 sdk-IKAYAKI_DLM00V015.tar.gz\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#descomprimir-el-codigo-fuente","title":"Descomprimir el c\u00f3digo fuente","text":"<p>A continuaci\u00f3n, necesitamos utilizar el comando tar para descomprimir en orden.</p> <ul> <li>Descomprimir la cadena de herramientas glibc</li> </ul> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\n</code></pre> <ul> <li> <p>Descomprimir el cargador de arranque <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  boot-IKAYAKI_DLM00V015.tar.gz\n</code></pre></p> </li> <li> <p>Descomprimir el kernel <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  kernel-IKAYAKI_DLM00V015.tar.gz\n</code></pre></p> </li> <li> <p>Descomprimir el kit de desarrollo de software <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  project-IKAYAKI_DLM00V015.tar.gz\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  sdk-IKAYAKI_DLM00V015.tar.gz\n</code></pre></p> </li> </ul> <p>Despu\u00e9s de descomprimir, se encontrar\u00e1 que los directorios de boot, kernel, project y sdk no tienen la marca -IKAYAKI_DLM00V015 en su nombre. Por favor, preste atenci\u00f3n a esto.</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ ls -lh\ntotal 1.3G\ndr-xr-xr-x  8 book book 4.0K Sep 16  2020 arm-sigmastar-linux-uclibcgnueabihf-9.1.0\n-rwxr--r--  1 book book  40M Sep  9  2022 arm-sigmastar-linux-uclibcgnueabihf-9.1.0.tar.xz\ndrwxr-xr-x 21 book book 4.0K Dec 20  2021 boot\n-rwxr--r--  1 book book  16M Sep  9  2022 boot-IKAYAKI_DLM00V015.tar.gz\ndrwxr-xr-x  8 book book 4.0K Jul 24  2020 gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf\n-rwxr--r--  1 book book 341M Sep  9  2022 gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\ndrwxr-xr-x 25 book book 4.0K Dec 20  2021 kernel\n-rwxr--r--  1 book book 158M Sep  9  2022 kernel-IKAYAKI_DLM00V015.tar.gz\ndrwxr-xr-x 10 book book 4.0K Dec 20  2021 project\n-rwxr--r--  1 book book 452M Sep  9  2022 project-IKAYAKI_DLM00V015.tar.gz\ndrwxr-xr-x  4 book book 4.0K Dec 20  2021 sdk\n-rwxr--r--  1 book book 310M Sep  9  2022 sdk-IKAYAKI_DLM00V015.tar.gz\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#configuracion-de-la-herramienta-de-cadena","title":"Configuraci\u00f3n de la herramienta de cadena","text":"<p>En el paso anterior descomprimimos la herramienta de cadena cruzada de compilaci\u00f3n glibc, ahora necesitamos configurar las variables de entorno. Primero, ingresamos a la ruta de la herramienta de cadena de compilaci\u00f3n cruzada <code>gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf</code>, luego ingresamos a la ruta bin y usamos el comando pwd para mostrar la ruta completa actual, <code>/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin</code>. Luego, configuramos los par\u00e1metros de la variable de entorno en el archivo ~/.bashrc.</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ cd gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf$ cd bin/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin$ ls\narm-linux-gnueabihf-addr2line      arm-linux-gnueabihf-ld.bfd                      arm-linux-gnueabihf-sigmastar-9.1.0-gcov-dump\narm-linux-gnueabihf-ar             arm-linux-gnueabihf-ld.gold                     arm-linux-gnueabihf-sigmastar-9.1.0-gcov-tool\narm-linux-gnueabihf-as             arm-linux-gnueabihf-nm                          arm-linux-gnueabihf-sigmastar-9.1.0-gdb\narm-linux-gnueabihf-c++            arm-linux-gnueabihf-objcopy                     arm-linux-gnueabihf-sigmastar-9.1.0-gdb-add-index\narm-linux-gnueabihf-c++filt        arm-linux-gnueabihf-objdump                     arm-linux-gnueabihf-sigmastar-9.1.0-gfortran\narm-linux-gnueabihf-cpp            arm-linux-gnueabihf-ranlib                      arm-linux-gnueabihf-sigmastar-9.1.0-gprof\narm-linux-gnueabihf-dwp            arm-linux-gnueabihf-readelf                     arm-linux-gnueabihf-sigmastar-9.1.0-ld\narm-linux-gnueabihf-elfedit        arm-linux-gnueabihf-sigmastar-9.1.0-addr2line   arm-linux-gnueabihf-sigmastar-9.1.0-ld.bfd\narm-linux-gnueabihf-g++            arm-linux-gnueabihf-sigmastar-9.1.0-ar          arm-linux-gnueabihf-sigmastar-9.1.0-ld.gold\narm-linux-gnueabihf-gcc            arm-linux-gnueabihf-sigmastar-9.1.0-as          arm-linux-gnueabihf-sigmastar-9.1.0-nm\narm-linux-gnueabihf-gcc-9.1.0      arm-linux-gnueabihf-sigmastar-9.1.0-c++         arm-linux-gnueabihf-sigmastar-9.1.0-objcopy\narm-linux-gnueabihf-gcc-ar         arm-linux-gnueabihf-sigmastar-9.1.0-c++filt     arm-linux-gnueabihf-sigmastar-9.1.0-objdump\narm-linux-gnueabihf-gcc-nm         arm-linux-gnueabihf-sigmastar-9.1.0-cpp         arm-linux-gnueabihf-sigmastar-9.1.0-ranlib\narm-linux-gnueabihf-gcc-ranlib     arm-linux-gnueabihf-sigmastar-9.1.0-dwp         arm-linux-gnueabihf-sigmastar-9.1.0-readelf\narm-linux-gnueabihf-gcov           arm-linux-gnueabihf-sigmastar-9.1.0-elfedit     arm-linux-gnueabihf-sigmastar-9.1.0-size\narm-linux-gnueabihf-gcov-dump      arm-linux-gnueabihf-sigmastar-9.1.0-g++         arm-linux-gnueabihf-sigmastar-9.1.0-strings\narm-linux-gnueabihf-gcov-tool      arm-linux-gnueabihf-sigmastar-9.1.0-gcc         arm-linux-gnueabihf-sigmastar-9.1.0-strip\narm-linux-gnueabihf-gdb            arm-linux-gnueabihf-sigmastar-9.1.0-gcc-9.1.0   arm-linux-gnueabihf-size\narm-linux-gnueabihf-gdb-add-index  arm-linux-gnueabihf-sigmastar-9.1.0-gcc-ar      arm-linux-gnueabihf-strings\narm-linux-gnueabihf-gfortran       arm-linux-gnueabihf-sigmastar-9.1.0-gcc-nm      arm-linux-gnueabihf-strip\narm-linux-gnueabihf-gprof          arm-linux-gnueabihf-sigmastar-9.1.0-gcc-ranlib\narm-linux-gnueabihf-ld             arm-linux-gnueabihf-sigmastar-9.1.0-gcov\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin$ pwd\n/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin$\n</code></pre> <ul> <li>Configuraci\u00f3n de variables de entorno temporales</li> </ul> <p>Este m\u00e9todo solo es v\u00e1lido en la terminal actual. Si se abre una nueva terminal, es necesario volver a configurar y ejecutar estas configuraciones.</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\nexport PATH=$PATH:/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\n</code></pre> <pre><code>book@virtual-machine:~$ export ARCH=arm\nbook@virtual-machine:~$ export CROSS_COMPILE=arm-linux-gnueabihf-\nbook@virtual-machine:~$ export PATH=$PATH:/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\n</code></pre> <ul> <li>Configuraci\u00f3n de variables de entorno permanente</li> </ul> <p>Abra el archivo <code>~/.bashrc</code> con un editor de texto como <code>vim</code>, <code>gedit</code>, <code>nano</code>, etc., y agregue las siguientes tres l\u00edneas de configuraci\u00f3n de entorno al final del archivo para que se apliquen de manera permanente.</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\nexport PATH=$PATH:/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#modificar-el-shell-predeterminado","title":"Modificar el shell predeterminado","text":"<p>Si el shell predeterminado es sh, es necesario cambiarlo a bash.</p> <pre><code>book@virtual-machine:~$ sudo rm /bin/sh\nbook@virtual-machine:~$ sudo ln \u2013s /bin/bash /bin/sh\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#3-pasos-para-compilar-el-paquete-de-desarrollo-del-sdk","title":"3. Pasos para compilar el paquete de desarrollo del SDK","text":"<p>A continuaci\u00f3n se mencionan los pasos para compilar \"boot\", \"kernel\" y \"SDK\". El \"boot\" ya se ha compilado y se encuentra en la ruta del proyecto de forma predeterminada. Por lo tanto, al comprobar la validez de los pasos, se puede omitir \"compilar boot\" y \"compilar kernel\" y empezar a compilar todo el \"image\" desde \"compilar SDK\" (la compilaci\u00f3n del kernel ya est\u00e1 integrada en la compilaci\u00f3n del SDK y se compilar\u00e1 autom\u00e1ticamente). Entonces se puede quemar y verificar.</p> <p>Nota: Los fabricantes de chips diferentes tienen diferentes marcos y formas de desarrollo. Por favor, no se enfoquen en este problema, s\u00f3lo sigan las instrucciones del documento.</p> <p>Nota: Los fabricantes de chips diferentes tienen diferentes marcos y formas de desarrollo. Por favor, no se enfoquen en este problema, s\u00f3lo sigan las instrucciones del documento.</p> <p>Nota: Los fabricantes de chips diferentes tienen diferentes marcos y formas de desarrollo. Por favor, no se enfoquen en este problema, s\u00f3lo sigan las instrucciones del documento.</p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#compilacion-del-cargador-de-arranque","title":"Compilaci\u00f3n del cargador de arranque","text":"<ol> <li>Verificar si las variables de entorno son correctas</li> </ol> <p>En la terminal, introduzca \"arm-linux-gnueabihf-gcc -v\" para comprobar si est\u00e1 correcto. Si se muestra la informaci\u00f3n de la versi\u00f3n de GCC, est\u00e1 correcto. Si no es as\u00ed, vuelva al paso anterior para configurarlo.</p> <pre><code>book@virtual-machine:~$ arm-linux-gnueabihf-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=arm-linux-gnueabihf-gcc\nCOLLECT_LTO_WRAPPER=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin/../libexec/gcc/arm-linux-gnueabihf/9.1.0/lto-wrapper\nTarget: arm-linux-gnueabihf\nConfigured with: '/home/meng/toolchain/build/snapshots/gcc.git~gcc-9_1_0-release/configure' SHELL=/bin/bash --with-mpc=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-mpfr=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gmp=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gnu-as --with-gnu-ld --disable-libmudflap --enable-lto --enable-shared --without-included-gettext --enable-nls --with-system-zlib --disable-sjlj-exceptions --enable-gnu-unique-object --enable-linker-build-id --disable-libstdcxx-pch --enable-c99 --enable-clocale=gnu --enable-libstdcxx-debug --enable-long-long --with-cloog=no --with-ppl=no --with-isl=no --disable-multilib --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb --with-arch=armv7-a --enable-threads=posix --enable-multiarch --enable-libstdcxx-time=yes --enable-gnu-indirect-function --with-build-sysroot=/home/meng/toolchain/build/sysroots/arm-linux-gnueabihf --with-sysroot=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu/arm-linux-gnueabihf/libc --enable-checking=yes --disable-bootstrap --enable-languages=c,c++,fortran,lto --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=arm-linux-gnueabihf --prefix=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu\nThread model: posix\ngcc version 9.1.0 (GCC)\n</code></pre> <p>Despu\u00e9s de eso, configure nuevamente las dos variables de entorno ARCH y CROSS_COMPILE en la terminal, y una vez completada la configuraci\u00f3n, puede continuar con las siguientes operaciones de desarrollo.</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\n</code></pre> <ol> <li>Entrar en el directorio bootloader</li> </ol> <p>A continuaci\u00f3n, ingresa al directorio <code>boot</code>, que es el directorio de c\u00f3digo fuente del bootloader. Una vez dentro, podr\u00e1s compilar la imagen del bootloader aqu\u00ed.</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ cd boot/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ ls\napi     config.mk      doc       fs       lib             MAKEALL           mz           README                tatus\narch    configs        drivers   include  Licenses        Makefile          net          release_to_alkaid.sh  test\nboard   create_img.sh  dts       Kbuild   list_config.sh  mkimage           pad_file.py  scripts               tools\ncommon  disk           examples  Kconfig  MAINTAINERS     ms_gen_mvxv_h.py  post         snapshot.commit\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$\n</code></pre> <ol> <li>Compilar bootloader</li> </ol> <p>Antes de comenzar a compilar, debemos asegurarnos de que el nombre del archivo de configuraci\u00f3n sea el correcto, como se muestra a continuaci\u00f3n. El archivo de configuraci\u00f3n de imagen predeterminado para DongshanPI-PicoW se llama pioneer3_spinand_defconfig.</p> Tipo de Flash Otros Defconfig SPI-NAND B\u00e1sico pioneer3_spinand_defconfig <p>A continuaci\u00f3n, use \"make pioneer3_spinand_defconfig\" para especificar el archivo de configuraci\u00f3n y comenzar la compilaci\u00f3n. Despu\u00e9s de completar la configuraci\u00f3n, ingrese el comando \"make\" para comenzar la compilaci\u00f3n. Los siguientes son los pasos de operaci\u00f3n, tenga en cuenta que solo despu\u00e9s del s\u00edmbolo \"$\" es el comando.</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ make  pioneer3_spinand_defconfig\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  SHIPPED scripts/kconfig/zconf.tab.c\n  SHIPPED scripts/kconfig/zconf.lex.c\n  SHIPPED scripts/kconfig/zconf.hash.c\n  HOSTCC  scripts/kconfig/zconf.tab.o\n  HOSTLD  scripts/kconfig/conf\n#\n# configuration written to .config\n#\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ make -j8\n......\n\n{standard input}: Assembler messages:\n{standard input}:1404: Warning: setting incorrect section attributes for .rodata\n  CC      net/net.o\n  CC      fs/fat/fat_write.o\n  CC      fs/firmwarefs/fwfs_util.o\n  CC      fs/firmwarefs/fwfs.o\n  LD      common/built-in.o\n  CC      net/ping.o\n  CC      lib/xz/xz_dec_lzma2.o\n  CC      fs/fat/file.o\n  CC      fs/firmwarefs/fwfs_tftl.o\n  CC      fs/firmwarefs/firmwarefs.o\n  CC      net/tftp.o\n  CC      lib/zlib/zlib.o\n  CC      lib/crc7.o\n  CC      lib/crc8.o\n  CC      lib/crc16.o\n  CC      lib/gunzip.o\n  LD      net/built-in.o\n  CC      lib/initcall.o\n  CC      lib/lmb.o\n  CC      lib/ldiv.o\n  CC      lib/net_utils.o\n  CC      lib/qsort.o\n  CC      lib/strmhz.o\n  CC      lib/rbtree.o\n  CC      lib/list_sort.o\n  CC      lib/hashtable.o\n  LD      lib/xz/built-in.o\n  CC      lib/errno.o\n  CC      lib/display_options.o\n  CC      lib/crc32.o\n  CC      lib/ctype.o\n  CC      lib/div64.o\n  CC      lib/hang.o\n  CC      lib/linux_compat.o\n  CC      lib/linux_string.o\n  CC      lib/string.o\n  CC      lib/time.o\n  CC      lib/vsprintf.o\n  CC      lib/uminiz.o\n  LD      fs/fat/built-in.o\n  LD      lib/zlib/built-in.o\n  LD      lib/built-in.o\n  LD      fs/firmwarefs/built-in.o\n  LD      fs/built-in.o\n  CC      examples/standalone/stubs.o\n  CC      examples/standalone/hello_world.o\n  LD      examples/standalone/libstubs.o\n  LD      examples/standalone/hello_world\n  OBJCOPY examples/standalone/hello_world.srec\n  OBJCOPY examples/standalone/hello_world.bin\n  LD      u-boot\n  OBJCOPY u-boot.srec\n  OBJCOPY u-boot.bin\nMode: c, Level: 4\nInput File: \"u-boot.bin\"\nOutput File: \"u-boot.bin.mz\"\nInput file size: 731100\nTotal input bytes: 731100\nTotal output bytes: 343142\nSuccess.\nxz: u-boot.bin.xz: File already has `.xz' suffix, skipping\n\nu-boot_spinand.mz.img.bin\nImage Name:   MVX4##P3##g#######CM_UBT1501#XVM\nCreated:      Wed Apr 12 09:47:31 2023\nImage Type:   ARM U-Boot Kernel Image (mz compressed)\nData Size:    343142 Bytes = 335.10 kB = 0.33 MB\nLoad Address: 23d00000\nEntry Point:  23e00000\n\n\nu-boot_spinand.xz.img.bin\nImage Name:   MVX4##P3##g#######CM_UBT1501#XVM\nCreated:      Wed Apr 12 09:47:31 2023\nImage Type:   ARM U-Boot Kernel Image (lzma compressed)\nData Size:    255572 Bytes = 249.58 kB = 0.24 MB\nLoad Address: 23d00000\nEntry Point:  23e00000\n\n\nu-boot_spinand.img.bin\nImage Name:   MVX4##P3##g#######CM_UBT1501#XVM\nCreated:      Wed Apr 12 09:47:31 2023\nImage Type:   ARM U-Boot Kernel Image (uncompressed)\nData Size:    731100 Bytes = 713.96 kB = 0.70 MB\nLoad Address: 23d00000\nEntry Point:  23e00000\n\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$\n</code></pre> <p>La imagen compilada es <code>u-boot_spinand.xz.img.bin</code>, que es el archivo de imagen final que se puede utilizar para la grabaci\u00f3n.</p> <p>En general, no se puede escribir solo la imagen de U-boot, por lo que es mejor seguir los siguientes pasos para copiarla al directorio del proyecto, crear una imagen completa y usar una herramienta de grabaci\u00f3n.</p> <ol> <li>Copia y empaquetado</li> </ol> <p>Reemplace <code>u-boot_spinand.xz.img.bin</code> compilado en <code>project/board/p3/boot/spinand/uboot/u-boot_spinand.xz.img.bin</code>. Luego, vuelva a compilar el proyecto para generar una imagen del sistema completa.</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ cp u-boot_spinand.xz.img.bin ../project/board/p3/boot/spinand/uboot/\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#compilacion-del-kernel","title":"Compilaci\u00f3n del kernel","text":"<p>El SDK compilar\u00e1 el kernel por defecto, a diferencia de SSD201/SSD202. Por lo tanto, se recomienda que despu\u00e9s de modificar el kernel, se compile directamente en el directorio del proyecto. De esta manera, se compilar\u00e1 el contenido del kernel por defecto y no ser\u00e1 necesario realizar una liberaci\u00f3n manual en la ruta del proyecto.</p> <ol> <li>Verifique si las variables de entorno est\u00e1n configuradas correctamente</li> </ol> <p>En la terminal, ingrese \"arm-linux-gnueabihf-gcc -v\" para verificar si est\u00e1n configuradas correctamente. Si est\u00e1 todo bien, se imprimir\u00e1 la informaci\u00f3n de la versi\u00f3n de gcc, como se muestra a continuaci\u00f3n. Si no es as\u00ed, regrese al paso anterior para realizar la configuraci\u00f3n.</p> <pre><code>book@virtual-machine:~$ arm-linux-gnueabihf-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=arm-linux-gnueabihf-gcc\nCOLLECT_LTO_WRAPPER=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin/../libexec/gcc/arm-linux-gnueabihf/9.1.0/lto-wrapper\nTarget: arm-linux-gnueabihf\nConfigured with: '/home/meng/toolchain/build/snapshots/gcc.git~gcc-9_1_0-release/configure' SHELL=/bin/bash --with-mpc=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-mpfr=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gmp=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gnu-as --with-gnu-ld --disable-libmudflap --enable-lto --enable-shared --without-included-gettext --enable-nls --with-system-zlib --disable-sjlj-exceptions --enable-gnu-unique-object --enable-linker-build-id --disable-libstdcxx-pch --enable-c99 --enable-clocale=gnu --enable-libstdcxx-debug --enable-long-long --with-cloog=no --with-ppl=no --with-isl=no --disable-multilib --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb --with-arch=armv7-a --enable-threads=posix --enable-multiarch --enable-libstdcxx-time=yes --enable-gnu-indirect-function --with-build-sysroot=/home/meng/toolchain/build/sysroots/arm-linux-gnueabihf --with-sysroot=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu/arm-linux-gnueabihf/libc --enable-checking=yes --disable-bootstrap --enable-languages=c,c++,fortran,lto --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=arm-linux-gnueabihf --prefix=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu\nThread model: posix\ngcc version 9.1.0 (GCC)\n</code></pre> <p>Luego, configure nuevamente las variables de entorno ARCH y CROSS_COMPILE en la terminal. Despu\u00e9s de configurarlas, puede continuar con las siguientes operaciones de desarrollo.</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\n</code></pre> <ol> <li>Ingrese al directorio del kernel de Linux</li> </ol> <p>A continuaci\u00f3n, ingrese al directorio \"boot\", que es el directorio del c\u00f3digo fuente del bootloader. Despu\u00e9s de ingresar al directorio, puede compilar la imagen del bootloader aqu\u00ed.</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ cd kernel/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$ ls\narch     CREDITS        firmware  ipc      lib             Makefile        ms_pack_modules.sh           REPORTING-BUGS  sound\nblock    crypto         fs        Kbuild   list_config.sh  mm              net                          samples         tools\ncerts    Documentation  include   Kconfig  MAINTAINERS     modules         README                       scripts         usr\nCOPYING  drivers        init      kernel   makefile        Module.symvers  release_kernel_to_alkaid.sh  security        virt\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$\n</code></pre> <ol> <li>Compile el kernel de Linux</li> </ol> <p>Antes de comenzar a compilar, debemos confirmar el nombre del archivo de configuraci\u00f3n. Para el DongshanPI-PicoW, el nombre del archivo de configuraci\u00f3n de imagen predeterminado es \"pioneer3_ssc021a_s01a_spinand_demo_defconfig\", como se muestra a continuaci\u00f3n.</p> Chip Packaging Memory Flash Type Toolchain Other Defconfig SSD210 QFN68 64M SPI-NAND glibc Sin sensor make pioneer3_ssc021a_s01a_spinand_demo_defconfig <p>A continuaci\u00f3n, use \"make pioneer3_ssc021a_s01a_spinand_demo_defconfig\" para especificar el archivo de configuraci\u00f3n y comenzar a compilar. Despu\u00e9s de completar la configuraci\u00f3n, ingrese el comando \"make\" para comenzar a compilar. Los pasos operativos son los siguientes, preste atenci\u00f3n a que el comando debe seguir el s\u00edmbolo \"$\".</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$ make pioneer3_ssc021a_s01a_spinand_demo_defconfig\nExtract CHIP NAME (pioneer3) to '.sstar_chip.txt'\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  HOSTCC  scripts/kconfig/zconf.tab.o\n  HOSTLD  scripts/kconfig/conf\n#\n# configuration written to .config\n#\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$ make -j8\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\n.....\nchangelist g\n  BRANCHID   g\n  CHK     include/generated/uapi/linux/version.h\n  MS_PLATFORM_ID: P3\n  CHK     include/generated/utsrelease.h\n  CHK     include/generated/timeconst.h\n  CHK     include/generated/bounds.h\n  CHK     include/generated/asm-offsets.h\n  CALL    scripts/checksyscalls.sh\n  CHK     include/generated/compile.h\n  CC      arch/arm/mach-sstar/ms_chip.o\n  LD      arch/arm/mach-sstar/built-in.o\n  LD      vmlinux.o\n  MODPOST vmlinux.o\nWARNING: modpost: Found 5 section mismatch(es).\nTo see full details build your kernel with:\n'make CONFIG_DEBUG_SECTION_MISMATCH=y'\n  GEN     .version\n  CHK     include/generated/compile.h\n  UPD     include/generated/compile.h\n  CC      init/version.o\n  LD      init/built-in.o\n  KSYM    .tmp_kallsyms1.o\n  KSYM    .tmp_kallsyms2.o\n  LD      vmlinux\n  SORTEX  vmlinux\n  SYSMAP  System.map\n  OBJCOPY arch/arm/boot/Image\n  Building modules, stage 2.\n  Kernel: arch/arm/boot/Image is ready\n  MODPOST 35 modules\n  DTC     arch/arm/boot/dts/pioneer3-ssc021a-s01a-demo.dtb\n  DTC     arch/arm/boot/dts/pioneer3-fpga.dtb\n  XZKERN  arch/arm/boot/compressed/piggy_data\n\n\n  Packing modules to '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel/modules'\n\n\n  AS      arch/arm/boot/compressed/piggy.o\n  LD      arch/arm/boot/compressed/vmlinux\n  OBJCOPY arch/arm/boot/zImage\n#update builtin DTB\n  IMAGE   arch/arm/boot/Image\n  BNDTB arch/arm/boot/dts/pioneer3-ssc021a-s01a-demo.dtb\noffset:0x004103B0\n  size:0x00009545\n\n#update Image-fpga DTB\n  IMAGE   arch/arm/boot/Image-fpga\n  BNDTB   pioneer3-fpga.dtb\noffset:0x004103B0\n  size:0x00008904\n\n  The configuration of GPIO &amp; PADMUX is correct!\n#build uImage\nImage Name:   MVX4##P3##g#######KL_LX409##[BR:\nCreated:      Wed Apr 12 10:07:07 2023\nImage Type:   ARM Linux Kernel Image (uncompressed)\nData Size:    4444160 Bytes = 4340.00 kB = 4.24 MB\nLoad Address: 20008000\nEntry Point:  20008000\n\nCompress Kernel Image\nImage Name:   MVX4##P3##g#######KL_LX409##[BR:\nCreated:      Wed Apr 12 10:07:10 2023\nImage Type:   ARM Linux Kernel Image (lzma compressed)\nData Size:    2120676 Bytes = 2070.97 kB = 2.02 MB\nLoad Address: 20008000\nEntry Point:  20008000\nMode: c, Level: 4\nInput File: \"arch/arm/boot/Image\"\nOutput File: \"arch/arm/boot/Image.mz\"\nInput file size: 4444160\nTotal input bytes: 4444160\nTotal output bytes: 2577043\nSuccess.\n\nImage Name:   MVX4##P3##g#######KL_LX409##[BR:\nCreated:      Wed Apr 12 10:07:10 2023\nImage Type:   ARM Linux Kernel Image (mz compressed)\nData Size:    2577043 Bytes = 2516.64 kB = 2.46 MB\nLoad Address: 20008000\nEntry Point:  20008000\n\n\n  Kernel: arch/arm/boot/zImage is ready\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$\n</code></pre> <p>El imagen compilado se encuentra en <code>arch/arm/boot/uImage.xz</code>, este es el imagen de kernel final que se puede utilizar para arrancar. El archivo de dispositivo es <code>arch/arm/boot/dts/pioneer3-ssc021a-s01a-demo.dtb</code>.</p> <p>Si hay nuevos m\u00f3dulos de kernel a\u00f1adidos, se deben agregar los m\u00f3dulos correspondientes a <code>kernel_mod_list/kernel_mod_list_late</code> (los ko en kernel_mod_list_late se cargan despu\u00e9s del m\u00f3dulo mi). Ruta de modificaci\u00f3n: <code>project/kbuild/customize/$(KERNEL_VERSION)/$(CHIP)/$(PRODUCT)/kernel_mod_list</code>.</p> <p>Nota: Si se produce un error de empaquetamiento dtb durante la compilaci\u00f3n del kernel, consulte https://github.com/DongshanPI/Sigmastar-Linux/commit/dfbfa30b5dd564a05812d5ecd967a53e51749304 para modificar el c\u00f3digo fuente correspondiente. Este problema se debe a problemas de incompatibilidad del SDK.</p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide.ES/#compilando-sdk","title":"Compilando SDK","text":"<p>Por defecto, al compilar el SDK, se compila primero el kernel. La primera vez se compila todo con el comando <code>make clean;make image -j8</code>, posteriormente, si no es necesario compilar el kernel, se puede utilizar <code>make image-fast</code> en lugar de <code>make image</code>.</p> <ol> <li>Verifique si las variables de entorno son correctas</li> </ol> <p>En la terminal, escriba <code>arm-linux-gnueabihf-gcc -v</code> para verificar si es correcto. Si es correcto, se imprimir\u00e1 informaci\u00f3n de versi\u00f3n de gcc, etc., como se muestra a continuaci\u00f3n. Si no, vuelva al paso anterior de configuraci\u00f3n.</p> <pre><code>book@virtual-machine:~$ arm-linux-gnueabihf-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=arm-linux-gnueabihf-gcc\nCOLLECT_LTO_WRAPPER=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin/../libexec/gcc/arm-linux-gnueabihf/9.1.0/lto-wrapper\nTarget: arm-linux-gnueabihf\nConfigured with: '/home/meng/toolchain/build/snapshots/gcc.git~gcc-9_1_0-release/configure' SHELL=/bin/bash --with-mpc=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-mpfr=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gmp=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gnu-as --with-gnu-ld --disable-libmudflap --enable-lto --enable-shared --without-included-gettext --enable-nls --with-system-zlib --disable-sjlj-exceptions --enable-gnu-unique-object --enable-linker-build-id --disable-libstdcxx-pch --enable-c99 --enable-clocale=gnu --enable-libstdcxx-debug --enable-long-long --with-cloog=no --with-ppl=no --with-isl=no --disable-multilib --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb --with-arch=armv7-a --enable-threads=posix --enable-multiarch --enable-libstdcxx-time=yes --enable-gnu-indirect-function --with-build-sysroot=/home/meng/toolchain/build/sysroots/arm-linux-gnueabihf --with-sysroot=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu/arm-linux-gnueabihf/libc --enable-checking=yes --disable-bootstrap --enable-languages=c,c++,fortran,lto --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=arm-linux-gnueabihf --prefix=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu\nThread model: posix\ngcc version 9.1.0 (GCC)\n</code></pre> <p>Despu\u00e9s, configure nuevamente las variables de entorno ARCH y CROSS_COMPILE en la terminal. Una vez configuradas, se puede continuar con las operaciones de desarrollo posteriores.</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\n</code></pre> <ol> <li>Compilaci\u00f3n con archivo de configuraci\u00f3n especificado</li> </ol> <p>Ingrese al directorio del proyecto: <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ ls\nboard                                                      include                         make_sd_upgrade_sigmastar.sh   scripts\nchange_config_into_defconfig.sh                            kbuild                          make_usb_factory_sigmastar.sh  setup_config.sh\nconfigs                                                    Kconfig                         make_usb_upgrade_sigmastar.sh  setup_defconfig.sh\ndispcam_p3_nor.glibc-9.1.0-ramfs.s01a.64.qfn128_defconfig  make_emmc_upgrade_sigmastar.sh  parser_IPL.sh                  split_partion.sh\nimage                                                      makefile                        release                        tools\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre> Ejecute el comando <code>make dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig</code> para comenzar la configuraci\u00f3n.</p> Chip Empaquetado Memoria Tipo de flash Herramienta de compilaci\u00f3n Otros Archivo de configuraci\u00f3n SSD210 QFN68 64M SPI-NAND glibc Sin sensor make dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig <p>Todo el proceso de configuraci\u00f3n es bastante r\u00e1pido. <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ make dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\nmake -f /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/scripts/Makefile.build obj=scripts/basic\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\n  gcc -Wp,-MD,scripts/basic/.fixdep.d -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89     -o scripts/basic/fixdep scripts/basic/fixdep.c\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmake -f /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/scripts/Makefile.build obj=scripts/kconfig dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\n  gcc -Wp,-MD,scripts/kconfig/.conf.o.d -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89   -D_GNU_SOURCE -D_DEFAULT_SOURCE -I/usr/include/ncursesw -DCURSES_LOC=\"&lt;ncurses.h&gt;\" -DNCURSES_WIDECHAR=1 -DLOCALE   -c -o scripts/kconfig/conf.o scripts/kconfig/conf.c\n  gcc -Wp,-MD,scripts/kconfig/.zconf.tab.o.d -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89   -D_GNU_SOURCE -D_DEFAULT_SOURCE -I/usr/include/ncursesw -DCURSES_LOC=\"&lt;ncurses.h&gt;\" -DNCURSES_WIDECHAR=1 -DLOCALE  -Iscripts/kconfig -c -o scripts/kconfig/zconf.tab.o scripts/kconfig/zconf.tab.c\n  gcc  -o scripts/kconfig/conf scripts/kconfig/conf.o scripts/kconfig/zconf.tab.o\n#scripts/kconfig/conf  --defconfig=arch//configs/dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig Kconfig\nscripts/kconfig/conf  --defconfig=configs/defconfigs/dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig Kconfig\n#\n# configuration written to .config\n#\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmake silentoldconfig\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\nmake -f /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/scripts/Makefile.build obj=scripts/kconfig silentoldconfig\nmake[2]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmkdir -p include/config include/generated\ntest -e include/generated/autoksyms.h || \\\n    touch   include/generated/autoksyms.h\nscripts/kconfig/conf  --silentoldconfig Kconfig\nmake[2]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nPROJ_ROOT = /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project\nCONFIG_NAME = config_module_list.mk\nKBUILD_MK = kbuild/kbuild.mk\nSOURCE_MK = ../sdk/sdk.mk\nKERNEL_MEMADR = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM phyaddr)\nKERNEL_MEMLEN = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM size)\nKERNEL_MEMADR2 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM2 phyaddr)\nKERNEL_MEMLEN2 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM2 size)\nKERNEL_MEMADR3 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM3 phyaddr)\nKERNEL_MEMLEN3 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM3 size)\nLOGO_ADDR = Not support chip\nP3 = y\nCHIP = p3\nDISP = y\nPRODUCT = disp\nNO_WIFI = y\nSIGMA_WIFI = no_wifi\nBOARD = 020A\nBOARD_NAME = SSC021A-S01B\nTOOLCHAIN_GLIBC = y\nTOOLCHAIN = glibc\nTOOLCHAIN_VERSION_9.1.0 = y\nTOOLCHAIN_VERSION = 9.1.0\nTOOLCHAIN_REL_ARM-LINUX-GNUEABIHF-SIGMASTAR-9.1.0 = y\nTOOLCHAIN_REL = arm-linux-gnueabihf-sigmastar-9.1.0\nBUSYBOX = busybox-1.20.2-arm-linux-gnueabihf-glibc-sigmastar-9.1.0-dynamic\nKERNEL_VERSION_4.9.84 = y\nKERNEL_VERSION = 4.9.84\nKERNEL_CONFIG = pioneer3_ssc021a_s01a_spinand_demo_defconfig\nKERNEL_BOOT_ENV = LX_MEM=0x3FE0000 mma_heap=mma_heap_name0,miu=0,sz=0x1E00000 cma=2M highres=off $(KERNEL_RESERVED_ENV)\nEXBOOTARGS =\nIMAGE_CONFIG = spinand.ubifs.partition.dualenv.dispcam.config\nFLASH_SIZE_NONE = y\nFLASH_SIZE =\nMMAP = MMAP_P3_64.h\nIQ0 = gc1054/gc1054_iqfile.bin\nIQ1 = gc1054/gc1054_iqfile.bin\nIQ2 = gc1054/gc1054_iqfile.bin\nIQ3 = gc1054/gc1054_iqfile.bin\nIQ_API0 = gc1054/gc1054_api.bin\nIQ_API1 = gc1054/gc1054_api.bin\nSENSOR_LIST =\nSENSOR0 =\nSENSOR0_OPT =\nSENSOR1 =\nSENSOR1_OPT =\nSENSOR2 =\nSENSOR2_OPT =\nmi_dbg = y\nMI_DBG = 1\nSUPPORT_SMART_DISPLAY_VDEC = 0\nsupport_msos_mpool_add_pa2varange = y\nSUPPORT_MsOS_MPool_Add_PA2VARange = 1\nsupport_disp_align_up_offset32 = y\nSUPPORT_DISP_ALIGN_UP_OFFSET32 = 1\nSUPPORT_HDMI_VGA_DIRECT_MODE = 0\nSUPPORT_DIVP_USE_GE_SCALING_UP = 0\nSUPPORT_VIF_USE_GE_FILL_BUF = 0\nsupport_stub_device_for_test_sys = y\nSUPPORT_STUB_DEVICE_FOR_TEST_SYS = 1\nSUPPORT_VDEC_MULTI_RES = 0\nSUPPORT_DIVP_P2_MODE = 0\nFB_VIDEO = 0\nCONFIG_MI_ENABLE_VB_POOL = 0\nconfig_mi_enable_meta_pool = y\nCONFIG_MI_ENABLE_META_POOL = 1\nconfig_mi_enable_sys_cfg = y\nCONFIG_MI_ENABLE_SYS_CFG = 1\nCONFIG_MI_ENABLE_SHRINKABLE_POOL = 0\nconfig_mi_enable_ringheap_pool = y\nCONFIG_MI_ENABLE_RINGHEAP_POOL = 1\nis_demo_board = y\nIS_DEMO_BOARD = 3\nconfig_mi_venc_enable_jpeg = y\nCONFIG_MI_VENC_ENABLE_JPEG = 1\nconfig_mi_venc_enable_h26x = y\nCONFIG_MI_VENC_ENABLE_H26X = 1\nFPGA = 0\nBENCH = no\nMHAL =\nMERGE_BOOT =\nBOOTLOGO_FILE =\nLOGO_ADDR =\nBOOTLOGO_BUFSIZE =\nUPGRADE_FILE =\nDISP_OUT_NAME = SAT070CP50\nFBDEV =\nWIFI_MODULE =\nSPEECH_VENDOR =\nALINK =\nDUAL_OS = off\nFAST_DEMO = off\nSENSOR_TYPE0 =\nSENSOR_TYPE1 =\nLINUX_MEM_SIZE =\nRTOS_BIN =\nRTOS_LOAD_ADDR =\nMMA_BASE =\nMMA_SIZE =\nverify_ai = disable\nverify_ao = disable\nverify_cipher = disable\nverify_disp = disable\nverify_divp = disable\nverify_dla = disable\nverify_fb = disable\nverify_gfx = disable\nverify_hdmi = disable\nverify_ipu = disable\nverify_jpd = disable\nverify_shadow = disable\nverify_sys = disable\nverify_uvc_uac = disable\nverify_uac = disable\nverify_vdec = disable\nverify_vdisp = disable\nverify_venc = disable\nverify_vif = disable\nverify_vpe = disable\nverify_warp = disable\nverify_wlan = disable\nverify_mdb = disable\nverify_mi_demo = disable\nverify_mixer = disable\nverify_py_ipu = disable\nverify_zk_bootup = disable\nverify_zk_mini = disable\nverify_zk_full = disable\nverify_zk_mini_nosensor = disable\nverify_zk_mini_fastboot = disable\nverify_zk_full_fastboot = disable\nverify_zk_mini_nosensor_fastboot = disable\nverify_qfn68_sensor_panel = disable\nverify_barcode = disable\nverify_disp_pic_fastboot = disable\nverify_usbcamera_fastboot = disable\nverify_usbcamera = disable\nverify_usbcam_fastboot = disable\nverify_barcodeYuyan = disable\nverify_jpeg2disp = disable\nINTERFACE_AI = y\ninterface_ai = enable\ninterface_alsa = disable\nINTERFACE_AO = y\ninterface_ao = enable\ninterface_bar = disable\ninterface_cipher = disable\nINTERFACE_COMMON = y\ninterface_common = enable\ninterface_cus3a = disable\nINTERFACE_DISP = y\ninterface_disp = enable\nINTERFACE_DIVP = y\ninterface_divp = enable\nINTERFACE_PSPI = y\ninterface_pspi = enable\ninterface_foo = disable\nINTERFACE_GFX = y\ninterface_gfx = enable\ninterface_gyro = disable\ninterface_hdmi = disable\ninterface_ipu = disable\ninterface_iqserver = disable\ninterface_isp = disable\ninterface_ispalgo = disable\ninterface_jpd = disable\ninterface_ldc = disable\ninterface_mipitx = disable\nINTERFACE_PANEL = y\ninterface_panel = enable\nINTERFACE_RGN = y\ninterface_rgn = enable\ninterface_sed = disable\ninterface_sensor = disable\ninterface_shadow = disable\nINTERFACE_SYS = y\ninterface_sys = enable\ninterface_vdec = disable\ninterface_vdf = disable\ninterface_vdisp = disable\nINTERFACE_VENC = y\ninterface_venc = enable\ninterface_vif = disable\ninterface_vpe = disable\ninterface_warp = disable\nINTERFACE_WLAN = y\ninterface_wlan = enable\nINTERFACE_FB = y\ninterface_fb = enable\nmisc_fbdev = disable\nMISC_CONFIG_TOOL = y\nmisc_config_tool = enable\nMHAL_AIO = y\nmhal_aio = enable\nMHAL_CMDQ_SERVICE = y\nmhal_cmdq_service = enable\nmhal_csi = disable\nMHAL_DISP = y\nmhal_disp = enable\nMHAL_DIVP = y\nmhal_divp = enable\nmhal_earlyinit = disable\nMHAL_GE = y\nmhal_ge = enable\nmhal_hdmitx = disable\nMHAL_IMI_HEAP = y\nmhal_imi_heap = enable\nMHAL_INIT = y\nmhal_init = enable\nmhal_ipu = disable\nmhal_isp = disable\nmhal_ispalgo = disable\nmhal_ispmid = disable\nmhal_ispscl = disable\nmhal_jpd = disable\nmhal_ldc = disable\nmhal_mipitx = disable\nmhal_mload = disable\nMHAL_NEON = y\nmhal_neon = enable\nMHAL_PANEL = y\nmhal_panel = enable\nMHAL_RGN = y\nmhal_rgn = enable\nmhal_sensorif = disable\nMHAL_VCODEC = y\nmhal_vcodec = enable\nmhal_vif = disable\nmhal_vpe = disable\nARCH=arm\nCROSS_COMPILE=arm-linux-gnueabihf-sigmastar-9.1.0-\nCHIP_ALIAS = ikayaki\nCHIP_FULL_NAME = pioneer3\nPREFIX =$(TOOLCHAIN_REL)-\nAS = $(PREFIX)as\nCC = $(PREFIX)gcc\nCXX = $(PREFIX)g++\nCPP = $(PREFIX)cpp\nAR = $(PREFIX)ar\nLD = $(PREFIX)ld\nSTRIP = $(PREFIX)strip\nexport ARCH CROSS_COMPILE\nKERNEL_RESERVED_ENV = mmap_reserved=fb,miu=0,sz=0x300000,max_start_off=0x3C00000,max_end_off=0x3F00000\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre></p> <ol> <li>Compilaci\u00f3n de la imagen final</li> </ol> <p>Despu\u00e9s de configurar con \u00e9xito, puede comenzar a compilar ejecutando el comando <code>make image</code> en el directorio del proyecto. Espere a que la compilaci\u00f3n finalice y se generar\u00e1 una imagen completa para grabar.</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ make image\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/modules /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/arch /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/drivers /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/include /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/scripts /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/Makefile /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/Module.symvers /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/.sstar_chip.txt /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/.config /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/tools/usr /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/customize/4.9.84/p3/disp /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/customize\nmake headfile_link\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\n'/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/release/include/mi_isp_general.h' -&gt; '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/release/include/isp/mi_isp_general.h'\n......\nBrief USAGE:\n   /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/scri\n                                        pt/../../build/mkfwfs  {-c\n                                        &lt;pack_dir&gt;|-u &lt;dest_dir&gt;|-l} [-d\n                                        &lt;0-5&gt;] [-a] [-m &lt;number&gt;] [-C\n                                        &lt;number&gt;] [-D &lt;number&gt;] [-P\n                                        &lt;number&gt;] [-e &lt;number&gt;] [-y\n                                        &lt;number&gt;] [-X &lt;number&gt;] [-x\n                                        &lt;number&gt;] [-w &lt;number&gt;] [-r\n                                        &lt;number&gt;] [-B &lt;number&gt;] [-b\n                                        &lt;number&gt;] [-p &lt;number&gt;] [-s\n                                        &lt;number&gt;] [--] [--version] [-h]\n                                        &lt;image_file&gt;\n\nFor complete USAGE and HELP type:\n   /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/script/../../build/mkfwfs --help\n\nimage size 605253\n'/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/partition/flash.sni' -&gt; '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni'\n/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/pnigenerator -c 1024 -s 0x20000 -a \"0x140000(CIS),0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\" -b \"0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\" -t \"0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\" -o /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/partinfo.pni      \\\n                 &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/partition_layout.txt\n[[boot_nofsimage]]\nmake boot_images\nmake[4]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\ncat /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/partition_layout.txt\nBOOT0: 0x140000(CIS),0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\nBOOT1: 0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\nSYS: 0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\nFLASH HAS USED 0x8000000KB\nChkSum       : 8081\nMagic        : SSTARSEMICIS0001\nChecksum ok!!\nIDX:         StartBlk:           BlkCnt:     Trunk/BkTrunk:     Active:     BBM:      Name:\n  0:    0,(0000000000)   10,(0X00140000)                0/1           1      OFF        CIS\n  1:   10,(0X00140000)    3,(0X00060000)                0/1           1      OFF        IPL\n  2:   13,(0X001A0000)    3,(0X00060000)                0/1           1      OFF   IPL_CUST\n  3:   16,(0X00200000)    7,(0X000E0000)                0/1           1      OFF      UBOOT\n  4:   23,(0X002E0000)    3,(0X00060000)                1/0           0      OFF        IPL\n  5:   26,(0X00340000)    3,(0X00060000)                1/0           0      OFF   IPL_CUST\n  6:   29,(0X003A0000)    7,(0X000E0000)                1/0           0      OFF      UBOOT\n  7:   36,(0X00480000)    2,(0X00040000)                0/0           1      OFF        ENV\n  8:   38,(0X004C0000)    2,(0X00040000)                0/0           1      OFF       ENV1\n  9:   40,(0X00500000)    1,(0X00020000)                0/0           1      OFF   KEY_CUST\n 10:   41,(0X00520000)   40,(0X00500000)                0/0           1      OFF     KERNEL\n 11:   81,(0X00A20000)   40,(0X00500000)                0/0           1      OFF   RECOVERY\n 12:  121,(0X00F20000)   48,(0X00600000)                0/0           1      OFF     rootfs\n 13:  169,(0X01520000)    5,(0X000A0000)                0/0           1      OFF       MISC\n 14:  174,(0X015C0000)  850,(0X06A40000)                0/0           1      OFF        UBI\nif [ \"spinand\" = \"spinand\" ]; then      \\\n                flash_page_offset=$[0x23]; flash_page_size=8; printf \"%x: %02x\" ${flash_page_offset} ${flash_page_size} | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni;     \\\n        loop=$[$(stat -c \"%s\" /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni)/512-1]; for i in `seq 0 ${loop}`;do blk_pb0_off=$[${i}*512+0x2F]; blk_pb1_off=$[${i}*512+0x30]; printf \"%x: %02x\" ${blk_pb0_off} 10 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni; printf \"%x: %02x\" ${blk_pb1_off} 23 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni; done;    \\\n        loop=$[$(stat -c \"%s\" /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni)/512-1]; for i in `seq 0 ${loop}`;do blk_pb0_off=$[${i}*512+0x2F]; blk_pb1_off=$[${i}*512+0x30]; printf \"%x: %02x\" ${blk_pb0_off} 10 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni; printf \"%x: %02x\" ${blk_pb1_off} 23 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni; done;     \\\nfi;\n[================================================================/                                                                    ] 24/49  48%make ipl_mkboot ipl_cust_mkboot uboot_mkboot\nmake[5]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\n[====================================================================================================================================/] 49/49 100%\n\nExportable Squashfs 4.0 filesystem, xz compressed, data block size 131072\n        compressed data, compressed metadata, compressed fragments, compressed xattrs\n        duplicates are removed\nFilesystem size 1800.93 Kbytes (1.76 Mbytes)\n        47.58% of uncompressed filesystem size (3784.79 Kbytes)\nInode table size 1492 bytes (1.46 Kbytes)\n        9.64% of uncompressed inode table size (15477 bytes)\nDirectory table size 3458 bytes (3.38 Kbytes)\n        57.20% of uncompressed directory table size (6045 bytes)\nNumber of duplicate files found 0\nNumber of inodes 414\nNumber of files 25\nNumber of fragments 5\nNumber of symbolic links  366\nNumber of device nodes 0\nNumber of fifo nodes 0\nNumber of socket nodes 0\nNumber of directories 23\nNumber of ids (unique uids + gids) 1\nNumber of uids 1\n        root (0)\nNumber of gids 1\n        root (0)\ndd if=/dev/zero bs=131072 count=1 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot;\ndd if=/dev/zero bs=131072 count=1 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot;\ndd if=/dev/zero bs=393216 count=1 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot;\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000785679 s, 167 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.00157433 s, 83.3 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/ipl/IPL_CUST.bin of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot bs=131072 count=1 conv=notrunc seek=0;\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/ipl/IPL.bin of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot bs=131072 count=1 conv=notrunc seek=0;\n1+0 records in\n1+0 records out\n393216 bytes (393 kB, 384 KiB) copied, 0.00284586 s, 138 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/uboot/u-boot_dualenv_spinand.xz.img.bin of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot bs=393216 count=1 conv=notrunc seek=0;\n0+1 records in\n0+1 records out\n31760 bytes (32 kB, 31 KiB) copied, 0.000403474 s, 78.7 MB/s\nif [ \"3\" != \"\" ]; then \\\n        for((Row=1;Row&lt;3;Row++));do \\\n                dd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot bs=131072 count=1 conv=notrunc seek=${Row}; \\\n        done; \\\nfi;\n0+1 records in\n0+1 records out\n29200 bytes (29 kB, 29 KiB) copied, 0.000393671 s, 74.2 MB/s\nif [ \"3\" != \"\" ]; then \\\n        for((Row=1;Row&lt;3;Row++));do \\\n                dd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot bs=131072 count=1 conv=notrunc seek=${Row}; \\\n        done; \\\nfi;\n0+1 records in\n0+1 records out\n271312 bytes (271 kB, 265 KiB) copied, 0.000833338 s, 326 MB/s\nif [ \"1\" != \"\" ]; then \\\n        for((Row=1;Row&lt;1;Row++));do \\\n                dd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot bs=393216 count=1 conv=notrunc seek=${Row}; \\\n        done; \\\nfi;\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000951708 s, 138 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000823161 s, 159 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000792032 s, 165 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000828601 s, 158 MB/s\nmake[5]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\ncat /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot.bin\nrm -rfv /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot\nremoved '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot'\nremoved '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot'\nremoved '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot'\nmake[4]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\ndd if=/dev/zero bs=2048 count=2 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin\n2+0 records in\n2+0 records out\n4096 bytes (4.1 kB, 4.0 KiB) copied, 7.7572e-05 s, 52.8 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin bs=2048 count=1 conv=notrunc seek=0\n1+0 records in\n1+0 records out\n2048 bytes (2.0 kB, 2.0 KiB) copied, 0.000287638 s, 7.1 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/partinfo.pni of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin bs=2048 count=1 conv=notrunc seek=1\n0+1 records in\n0+1 records out\n2008 bytes (2.0 kB, 2.0 KiB) copied, 0.000260181 s, 7.7 MB/s\ncat /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin\nmake[3]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake scripts\nmake[3]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmkdir -p /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts\nmake set_partition\nmake[4]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake[4]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake cis_spinand__script boot_spinand__script kernel_spinand__script rootfs_spinand_squashfs_script misc_spinand_fwfs_script miservice_spinand_ubifs_script customer_spinand_ubifs_script appconfigs_spinand_ubifs_script spinand_config_script\nmake[4]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\n#@echo -e ubi create rootfs 0x600000\\\\n ubi create misc 0xa0000\\\\n ubi create miservice 0xC00000\\\\n ubi create customer 0x5000000\\\\n ubi create appconfigs 0x4C0000\\\\n &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[ipl.es\n#@echo -e ubi create rootfs 0x600000\\\\n ubi create misc 0xa0000\\\\n ubi create miservice 0xC00000\\\\n ubi create customer 0x5000000\\\\n ubi create appconfigs 0x4C0000\\\\n &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[ipl.es\n#@echo ubi create appconfigs 0x4C0000 &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[appconfigs.es\n#@echo ubi create miservice 0xC00000 &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[miservice.es\n#@echo -e ubi create rootfs 0x600000\\\\n ubi create misc 0xa0000\\\\n ubi create miservice 0xC00000\\\\n ubi create customer 0x5000000\\\\n ubi create appconfigs 0x4C0000\\\\n &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[ipl.es\n#@echo ubi create customer 0x5000000 &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[customer.es\nif [ -a ../parser_IPL.sh ] ; \\\nthen \\\n        sh ../parser_IPL.sh /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/ipl/IPL.bin /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts ;\\\nfi;\nkernel-image done!!!\n../parser_IPL.sh: line 1: warning: command substitution: ignored null byte in input\nmake[4]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake[3]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake[2]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\n./split_partion.sh\nsplit customer image\ncustomer.es is not over size,do nothing!!\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre> <p>Soluci\u00f3n a errores de empaquetado: <pre><code>vim image/makefiletools/script/fwfs_pack.py\nModificar l\u00ednea 120, reemplazando `str(image_size)` por `str(int(image_size))`\n</code></pre></p> <ol> <li>Copiar y grabar la imagen Despu\u00e9s de la compilaci\u00f3n, la imagen se encuentra en el directorio <code>project/image/output/images</code>. Copie todos los archivos de imagen a la carpeta de imagen del sistema predeterminada y reemplace los archivos anteriores. Luego, reinicie la placa de desarrollo en modo de grabaci\u00f3n para actualizar el sistema con la imagen m\u00e1s reciente que acaba de compilar. <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ ls image/output/images/\nappconfigs.ubifs     auto_update.txt  boot.bin  customer.ubifs  misc.fwfs        partition_layout.txt  scripts      usb_updater_boot.bin\nauto_update_bin.txt  boot             cis.bin   kernel          miservice.ubifs  rootfs.sqfs           scripts_bin  usb_updater_ipl.bin\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre></li> </ol>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/","title":"IKAYAKI-SDK\u4f7f\u7528","text":"<p>[ \u4e2d\u6587 | [Espa\u00f1ol] ]</p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#ikayaki-sdk","title":"\u4f7f\u7528IKAYAKI-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#1-ikayaki-sdk","title":"1. IKAYAKI-SDK\u67b6\u6784\u7b80\u4ecb","text":""},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#1","title":"1. \u6a21\u5757\u4ecb\u7ecd","text":"\u7b80\u79f0 \u5168\u79f0 \u804c\u8d23 SYS System \u5b9e\u73b0 MI \u7cfb\u7edf\u521d\u59cb\u5316\u3001\u5185\u5b58\u7f13\u51b2\u6c60\u7ba1\u7406\u3001\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u6570\u636e\u6d41\u7684\u7ba1\u7406 VDEC Video Decoder H264/H265/JPEG \u89c6\u9891\u89e3\u7801\u5668 DIVP Deinterlace&amp;Video Post Process Engine DIVP Engine\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u529f\u80fd \u2460\u5bf9\u89e3\u7801\u540e\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u8f6c\u6362 \u2461\u89e3\u7801\u540e\u6570\u636e\u8fdb\u884c\u7f29\u653e VDISP Vitrual Display \u8f6f\u4ef6\u62fc\u56fe DISP Display Engine DISP\u5bf9VDEC/DIVP \u5904\u7406\u5355\u5143\u8f93\u51fa\u7684\u56fe\u50cf\u505a\u786c\u4ef6\u62fc\u56fe\uff0c\u5e76\u8fde\u540cAO\u8f93\u51fa\u97f3\u9891\u4fe1\u53f7\u4e00\u8d77\u7f16\u7801\u6210HDMI/VGA/CVBS \u8f93\u51fa\u4fe1\u53f7\u7684\u5355\u5143 VENC Video Encoder H264/H265/MotionJpeg\u7f16\u7801\u5668 AI Audio Input Interface I2S audio input\u91c7\u96c6\u5355\u5143 AO Audio Output Interface \u97f3\u9891\u8f93\u51fa GFX Graphics Engine Graphic Engine \u63d0\u4f9b\u5bf92D\u753b\u56fe\u7684\u57fa\u672c\u786c\u4ef6\u52a0\u901f\u652f\u63f4\uff0c\u964d\u4f4eCPU\u7684\u8d1f\u8377 FB FrameBuffer UI\u663e\u793a HDMI High Definition Multimedia Interface HDMI/VGA\u6807\u51c6\u8f93\u51fa"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#2","title":"2. \u8f6f\u4ef6\u67b6\u6784","text":"<ul> <li>\u529f\u80fd\u5b9e\u73b0\u51fd\u6570\u4ece\u4e0a\u5230\u4e0b\uff0c\u5206\u4e3aMI API\u5c42\uff0cMI\u5b9e\u73b0\u5c42\uff0cHal\u786c\u4ef6\u62bd\u8c61\u5c42\uff0cDriver\u5c42\u548c\u82af\u7247\u786c\u4ef6\u5c42\u3002</li> <li>SDK\u529f\u80fd\u4ee3\u7801\u5728Kernel\u5c42\u5b9e\u73b0\uff0c\u51cf\u5c11\u4ecekernel\u5230User mode\u6765\u56de\u8c03\u5ea6\uff0c\u63d0\u9ad8\u903b\u8f91\u51fd\u6570\u5b9e\u73b0\u7684\u6548\u7387\u3002</li> <li>\u5bf9\u4e0a\u5c42\u5ba2\u6237\u63d0\u4f9bMI API\u7684User Mode\u63a5\u53e3\uff0c\u7528\u6237\u5c42APP\u76f4\u63a5\u8c03\u7528MI\u63a5\u53e3\uff0c\u5373\u53ef\u8c03\u7528\u5230\u5bf9\u5e94\u7684MI\u529f\u80fd\u3002</li> </ul>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#3-sdk","title":"3. SDK\u76ee\u5f55\u7ed3\u6784","text":"\u76ee\u5f55 \u6a21\u5757\u540d \u529f\u80fd project board PCB\u677f\u4fe1\u606f\u5b58\u653e\u8def\u5f84 project configs \u9884\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u8def\u5f84 project image \u4ea7\u751f\u955c\u50cf\u6587\u4ef6\u7684\u6750\u6599\u5e93\u548c\u955c\u50cf\u6587\u4ef6\u5b58\u653e\u5904 project kbuild kernel\u7f16\u8bd1\u73af\u5883 project release \u76ee\u6807\u6c60\uff0c\u5b58\u653e\u5bf9\u5916\u5934\u6587\u4ef6\uff0c\u5e93\u6587\u4ef6\u548c\u5185\u6838\u6a21\u5757\u4ee5\u53ca\u7b2c\u4e09\u65b9\u5e93 SDK Verify/feature \u9a8c\u8bc1\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5b58\u653e\u6a21\u5757\u5355\u5143\u6d4b\u8bd5\u548c\u7279\u6027\u6d4b\u8bd5\u6587\u4ef6 SDK Verify/demo \u6574\u4f53\u529f\u80fd\u6d4b\u8bd5demo"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#4","title":"4. \u5185\u5b58\u7ba1\u7406","text":"<p>\u8be6\u7ec6\u53c2\u8003Memory Layout\u4ecb\u7ecd\u3002</p> <ul> <li>\u901a\u8fc7mmap.ini\u9884\u7559\u7684\u5185\u5b58</li> <li>\u652f\u6301mma\u7ba1\u7406module\u5185\u5b58\uff0c\u5404\u4e2amodule\u4ecemma\u9884\u7559\u7684size\u4e2d\u5206\u914d</li> </ul> <p></p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#5","title":"5. \u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u6570\u636e\u6d41\uff1a\u5404\u4e2aMI Module \u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u7eaf\u6570\u636e\u5904\u7406\u5355\u5143\uff0c\u6570\u636e\u6d41\u63a8\u9001\u7531MI SYS\u5185\u90e8\u7edf\u4e00\u8c03\u5ea6\u3002\u8f93\u5165\u6570\u636e\u6d41\u8868\u793a\u8be5\u6570\u636e\u5355\u5143\u7684input\u6570\u636e\uff0c\u8f93\u51fa\u6570\u636e\u6d41\u8868\u793a\u8be5\u5904\u7406\u5355\u5143\u5904\u7406\u8fc7\u7684output\u6570\u636e\u3002</li> <li>\u63a7\u5236\u6d41\uff1aAPP \u5bf9\u5404\u4e2aMI Module \u6570\u636e\u5904\u7406\u8fc7\u7a0b\u8fdb\u884c\u53c2\u6570\u63a7\u5236\u7684\u8fc7\u7a0b\uff0c\u6bd4\u5982\u8bbe\u7f6eMI_VDEC\u89e3\u7801\u53c2\u6570\uff0c\u542f\u52a8\u505c\u6b62MI_VDEC \u901a\u9053\uff0c\u8bbe\u7f6eMI_VDEC\u901a\u9053\u8f93\u51fa\u7aef\u53e3\u4e4b\u5206\u8fa8\u7387\u53caformat\u7b49</li> <li>Channel\uff08\u901a\u9053\uff09<ul> <li>\u5bf9\u4e8e\u9700\u8981\u5904\u7406\u6216\u8005\u8f93\u51fastream\u7684MI\u6a21\u7ec4\uff0c\u4e00\u4e2achannel\u4ee3\u8868\u8be5MI \u6a21\u7ec4\u5904\u7406\u6216\u8005\u8f93\u51fa\u4e00\u8defstream\u7684\u5206\u65f6\u590d\u7528\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u53ca\u76f8\u5173\u63a7\u5236\u6d41\u8bbe\u5b9a</li> <li>\u5bf9\u4e8e\u53ef\u5206\u65f6\u590d\u7528\u4e4b\u6a21\u7ec4\u5982MI_VDEC, MI_DIVP, MI_DISP\uff0c\u53ef\u652f\u63f4\u591a\u4e2achannel</li> </ul> </li> <li>Port\uff08\u7aef\u53e3\uff09<ul> <li>Port\u5206\u4e3a2\u79cd\uff0cinput port\u548coutput port\u3002input port\u4e3achannel\u8f93\u5165\u6570\u636e\u6d41\u7684\u4f4d\u7f6e\uff0c\u800coutput port\u5219\u662fchannel\u8f93\u51fa\u6570\u636e\u6d41\u7684\u4f4d\u7f6e\u3002</li> <li>\u4e00\u4e2achannel\u53ef\u4ee5\u6709\u591a\u4e2ainput port\u53ca\u591a\u4e2aoutput port.</li> </ul> </li> </ul>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#2-sdk","title":"2. \u83b7\u53d6SDK\u5de5\u7a0b","text":""},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#_1","title":"\u4ee3\u7801\u83b7\u53d6","text":"<p>\u200b   \u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u94fe\u63a5  https://dongshanpi.cowtransfer.com/s/5c3c05deef7247 \u4e0b\u8f7d\u6574\u4e2a\u6587\u4ef6\u5939 IKAYAKI_SDK \uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u5305\u542b\u4e86\u5982\u4e0b 6\u4e2a \u538b\u7f29\u5305\u6587\u4ef6\u3002</p> <p><pre><code>arm-sigmastar-linux-uclibcgnueabihf-9.1.0.tar.xz\ngcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\nboot-IKAYAKI_DLM00V015.tar.gz    \nproject-IKAYAKI_DLM00V015.tar.gz\nkernel-IKAYAKI_DLM00V015.tar.gz  \nsdk-IKAYAKI_DLM00V015.tar.gz\n</code></pre> \u4f7f\u7528Filezila \u6216\u8005samba \u6216\u62d6\u62fd\u7b49\u65b9\u5f0f\u628a\u8fd9\u4e9b\u6587\u4ef6\u62f7\u8d1d\u5230 Ubuntu\u7cfb\u7edf\u5bb6\u76ee\u5f55\u4e0b\u3002</p> <p>\u62f7\u8d1d\u4e4b\u524d \u53ef\u4ee5\u5148 \u4f7f\u7528 mkdir DongshanPI-PicoW \u521b\u5efa\u4e00\u4e2a\u677f\u5b50\u7684\u76ee\u5f55\uff0c\u4e4b\u540e\u518d\u6b21\u521b\u5efa\u4e00\u4e2a  IKAYAKI_SDK  \u6587\u4ef6\u5939,\u5982\u4e0b\u547d\u4ee4\u4e2d $ \u7b26\u53f7\u540e\u7684\u64cd\u4f5c\u793a\u4f8b\u3002</p> <pre><code>book@100ask.org:~$ mkdir DongshanPI-PicoW\nbook@100ask.org:~$ cd DongshanPI-PicoW/\nbook@100ask.org:~/DongshanPI-PicoW$ mkdir IKAYAKI_SDK\nbook@100ask.org:~/DongshanPI-PicoW$ cd IKAYAKI_SDK/\nbook@100ask.org:~/DongshanPI-PicoW/IKAYAKI_SDK$\n</code></pre> <p>\u6700\u540e \u6211\u4eec\u5c06\u4e0b\u8f7d\u597d\u7684 6\u4e2a\u538b\u7f29\u5305\u6587\u4ef6 \u62f7\u8d1d\u81f3 \u521b\u5efa\u597d\u7684 IKAYAKI_SDK \u6587\u4ef6\u5939\u3002\u62f7\u8d1d\u5b8c\u6210\u540e\u5982\u4e0b\u6240\u793a</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ ls -lh\ntotal 1.3G\n-rwxr--r-- 1 book book  40M Sep  9  2022 arm-sigmastar-linux-uclibcgnueabihf-9.1.0.tar.xz\n-rwxr--r-- 1 book book  16M Sep  9  2022 boot-IKAYAKI_DLM00V015.tar.gz\n-rwxr--r-- 1 book book 341M Sep  9  2022 gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\n-rwxr--r-- 1 book book 158M Sep  9  2022 kernel-IKAYAKI_DLM00V015.tar.gz\n-rwxr--r-- 1 book book 452M Sep  9  2022 project-IKAYAKI_DLM00V015.tar.gz\n-rwxr--r-- 1 book book 310M Sep  9  2022 sdk-IKAYAKI_DLM00V015.tar.gz\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#_2","title":"\u89e3\u538b\u6e90\u7801","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u4f7f\u7528 tar \u547d\u4ee4\u8fdb\u884c\u4f9d\u6b21\u89e3\u538b\u7f29\u64cd\u4f5c\u3002</p> <ul> <li>\u89e3\u538bglibc\u5de5\u5177\u94fe</li> </ul> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\n</code></pre> <ul> <li> <p>\u89e3\u538bbootloader <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  boot-IKAYAKI_DLM00V015.tar.gz\n</code></pre></p> </li> <li> <p>\u89e3\u538bkernel <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  kernel-IKAYAKI_DLM00V015.tar.gz\n</code></pre></p> </li> <li> <p>\u89e3\u538bsdk <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  project-IKAYAKI_DLM00V015.tar.gz\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ tar -xvf  sdk-IKAYAKI_DLM00V015.tar.gz\n</code></pre></p> </li> </ul> <p>\u89e3\u538b\u540e\u7684\u6240\u6709\u76ee\u5f55,\u8fd9\u91cc\u4f1a\u53d1\u73b0 boot kernel project sdk \u76ee\u5f55\u90fd\u6ca1\u6709\u4e86 \u540e\u9762\u7684 -IKAYAKI_DLM00V015 \u5b57\u6837\uff0c\u8fd9\u91cc\u8bf7\u7559\u610f\u3002</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ ls -lh\ntotal 1.3G\ndr-xr-xr-x  8 book book 4.0K Sep 16  2020 arm-sigmastar-linux-uclibcgnueabihf-9.1.0\n-rwxr--r--  1 book book  40M Sep  9  2022 arm-sigmastar-linux-uclibcgnueabihf-9.1.0.tar.xz\ndrwxr-xr-x 21 book book 4.0K Dec 20  2021 boot\n-rwxr--r--  1 book book  16M Sep  9  2022 boot-IKAYAKI_DLM00V015.tar.gz\ndrwxr-xr-x  8 book book 4.0K Jul 24  2020 gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf\n-rwxr--r--  1 book book 341M Sep  9  2022 gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf.tar.xz\ndrwxr-xr-x 25 book book 4.0K Dec 20  2021 kernel\n-rwxr--r--  1 book book 158M Sep  9  2022 kernel-IKAYAKI_DLM00V015.tar.gz\ndrwxr-xr-x 10 book book 4.0K Dec 20  2021 project\n-rwxr--r--  1 book book 452M Sep  9  2022 project-IKAYAKI_DLM00V015.tar.gz\ndrwxr-xr-x  4 book book 4.0K Dec 20  2021 sdk\n-rwxr--r--  1 book book 310M Sep  9  2022 sdk-IKAYAKI_DLM00V015.tar.gz\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#_3","title":"\u8bbe\u7f6e\u5de5\u5177\u94fe","text":"<p>\u5728\u4e0a\u4e00\u6b65\u9aa4\u6211\u4eec\u89e3\u538b\u4e86 glibc\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u8bbe\u7f6e\u4e00\u4e0b\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u9996\u5148\u8fdb\u5165\u5230 <code>gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf</code>\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u8def\u5f84\uff0c\u4e4b\u540e\u7ee7\u7eed\u8fdb\u5165\u5230 bin\u8def\u5f84\uff0c\u4f7f\u7528pwd\u547d\u4ee4\u663e\u793a\u5f53\u524d\u7684\u5b8c\u6574\u8def\u5f84\uff0c<code>/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin</code>\u4e4b\u540e \u901a\u8fc7\u8bbe\u7f6e ~/.bashrc \u6765\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u53c2\u6570</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ cd gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf$ cd bin/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin$ ls\narm-linux-gnueabihf-addr2line      arm-linux-gnueabihf-ld.bfd                      arm-linux-gnueabihf-sigmastar-9.1.0-gcov-dump\narm-linux-gnueabihf-ar             arm-linux-gnueabihf-ld.gold                     arm-linux-gnueabihf-sigmastar-9.1.0-gcov-tool\narm-linux-gnueabihf-as             arm-linux-gnueabihf-nm                          arm-linux-gnueabihf-sigmastar-9.1.0-gdb\narm-linux-gnueabihf-c++            arm-linux-gnueabihf-objcopy                     arm-linux-gnueabihf-sigmastar-9.1.0-gdb-add-index\narm-linux-gnueabihf-c++filt        arm-linux-gnueabihf-objdump                     arm-linux-gnueabihf-sigmastar-9.1.0-gfortran\narm-linux-gnueabihf-cpp            arm-linux-gnueabihf-ranlib                      arm-linux-gnueabihf-sigmastar-9.1.0-gprof\narm-linux-gnueabihf-dwp            arm-linux-gnueabihf-readelf                     arm-linux-gnueabihf-sigmastar-9.1.0-ld\narm-linux-gnueabihf-elfedit        arm-linux-gnueabihf-sigmastar-9.1.0-addr2line   arm-linux-gnueabihf-sigmastar-9.1.0-ld.bfd\narm-linux-gnueabihf-g++            arm-linux-gnueabihf-sigmastar-9.1.0-ar          arm-linux-gnueabihf-sigmastar-9.1.0-ld.gold\narm-linux-gnueabihf-gcc            arm-linux-gnueabihf-sigmastar-9.1.0-as          arm-linux-gnueabihf-sigmastar-9.1.0-nm\narm-linux-gnueabihf-gcc-9.1.0      arm-linux-gnueabihf-sigmastar-9.1.0-c++         arm-linux-gnueabihf-sigmastar-9.1.0-objcopy\narm-linux-gnueabihf-gcc-ar         arm-linux-gnueabihf-sigmastar-9.1.0-c++filt     arm-linux-gnueabihf-sigmastar-9.1.0-objdump\narm-linux-gnueabihf-gcc-nm         arm-linux-gnueabihf-sigmastar-9.1.0-cpp         arm-linux-gnueabihf-sigmastar-9.1.0-ranlib\narm-linux-gnueabihf-gcc-ranlib     arm-linux-gnueabihf-sigmastar-9.1.0-dwp         arm-linux-gnueabihf-sigmastar-9.1.0-readelf\narm-linux-gnueabihf-gcov           arm-linux-gnueabihf-sigmastar-9.1.0-elfedit     arm-linux-gnueabihf-sigmastar-9.1.0-size\narm-linux-gnueabihf-gcov-dump      arm-linux-gnueabihf-sigmastar-9.1.0-g++         arm-linux-gnueabihf-sigmastar-9.1.0-strings\narm-linux-gnueabihf-gcov-tool      arm-linux-gnueabihf-sigmastar-9.1.0-gcc         arm-linux-gnueabihf-sigmastar-9.1.0-strip\narm-linux-gnueabihf-gdb            arm-linux-gnueabihf-sigmastar-9.1.0-gcc-9.1.0   arm-linux-gnueabihf-size\narm-linux-gnueabihf-gdb-add-index  arm-linux-gnueabihf-sigmastar-9.1.0-gcc-ar      arm-linux-gnueabihf-strings\narm-linux-gnueabihf-gfortran       arm-linux-gnueabihf-sigmastar-9.1.0-gcc-nm      arm-linux-gnueabihf-strip\narm-linux-gnueabihf-gprof          arm-linux-gnueabihf-sigmastar-9.1.0-gcc-ranlib\narm-linux-gnueabihf-ld             arm-linux-gnueabihf-sigmastar-9.1.0-gcov\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin$ pwd\n/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin$\n</code></pre> <ul> <li>\u8bbe\u7f6e\u4e34\u65f6\u73af\u5883\u53d8\u91cf</li> </ul> <p>\u200b   \u6b64\u65b9\u5f0f\u53ea\u5728\u5f53\u524d\u7ec8\u7aef\u4e0b\u6709\u6548\uff0c\u5982\u679c\u91cd\u65b0\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\uff0c\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u6267\u884c\u8fd9\u4e9b\u914d\u7f6e</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\nexport PATH=$PATH:/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\n</code></pre> <pre><code>book@virtual-machine:~$ export ARCH=arm\nbook@virtual-machine:~$ export CROSS_COMPILE=arm-linux-gnueabihf-\nbook@virtual-machine:~$ export PATH=$PATH:/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\n</code></pre> <ul> <li>\u8bbe\u7f6e\u6c38\u4e45\u73af\u5883\u53d8\u91cf</li> </ul> <p>\u4f7f\u7528vim gedit nano\u7b49\u6587\u672c\u7f16\u8f91\u5668\u5de5\u5177 \u6253\u5f00 ~/.bashrc \u5728\u6700\u5e95\u90e8\u6dfb\u52a0 \u5982\u4e0b\u4e09\u884c\u73af\u5883\u914d\u7f6e\uff0c\u5373\u53ef\u6c38\u4e45\u751f\u6548\u3002</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\nexport PATH=$PATH:/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#sh","title":"\u4fee\u6539\u9ed8\u8ba4sh","text":"<p>\u5982\u679c\u9ed8\u8ba4\u662fsh\uff0c\u9700\u8981\u5c06sh\u6539\u6210 bash \u3002</p> <pre><code>book@virtual-machine:~$ sudo rm /bin/sh\nbook@virtual-machine:~$ sudo ln \u2013s /bin/bash /bin/sh\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#3-sdk_1","title":"3. SDK\u5f00\u53d1\u5305\u7f16\u8bd1\u6b65\u9aa4","text":"<p>\u5982\u4e0b\u5206\u522b\u63d0\u5230\u4e86\u201c\u7f16\u8bd1boot\u201d\uff0c\u201c\u7f16\u8bd1kernel\u201d\uff0c\u201c\u7f16\u8bd1sdk\u201d\uff0cboot\u5df2\u7ecf\u9ed8\u8ba4\u7f16\u8bd1\u597d\u653e\u5230project\u8def\u5f84\uff0c\u56e0\u6b64\u521a\u5f00\u59cb\u9a8c\u8bc1\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u201c\u7f16\u8bd1boot\u201d\u548c\u201c\u7f16\u8bd1kernel\u201d\uff0c\u76f4\u63a5\u4ece\u201c\u7f16\u8bd1sdk\u201d\uff08kernel\u7684\u7f16\u8bd1\u5df2\u7ecf\u96c6\u6210\u5230\u7f16\u8bd1sdk\u91cc\u9762\uff0c\u9ed8\u8ba4\u4f1a\u7f16\u8bd1kernel\uff09\u5f00\u59cb\u7f16\u8bd1\u51fa\u6765\u6574\u4e2aimage\uff0c\u5c31\u53ef\u4ee5\u70e7\u5199\u3001\u9a8c\u8bc1\u4e86\u3002</p> <p>\u6ce8\u610f\uff1a\u4e0d\u540c\u7684\u82af\u7247\u539f\u5382\u90fd\u6709\u4e0d\u540c\u7684\u5f00\u53d1\u6846\u67b6\u548c\u65b9\u5f0f\uff0c\u8bf7\u4f7f\u7528\u7684\u540c\u5b66\u4e0d\u8981\u7ea0\u7ed3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6309\u7167\u6587\u6863\u64cd\u4f5c\u5c31\u53ef\u4ee5\u3002 \u6ce8\u610f\uff1a\u4e0d\u540c\u7684\u82af\u7247\u539f\u5382\u90fd\u6709\u4e0d\u540c\u7684\u5f00\u53d1\u6846\u67b6\u548c\u65b9\u5f0f\uff0c\u8bf7\u4f7f\u7528\u7684\u540c\u5b66\u4e0d\u8981\u7ea0\u7ed3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6309\u7167\u6587\u6863\u64cd\u4f5c\u5c31\u53ef\u4ee5\u3002 \u6ce8\u610f\uff1a\u4e0d\u540c\u7684\u82af\u7247\u539f\u5382\u90fd\u6709\u4e0d\u540c\u7684\u5f00\u53d1\u6846\u67b6\u548c\u65b9\u5f0f\uff0c\u8bf7\u4f7f\u7528\u7684\u540c\u5b66\u4e0d\u8981\u7ea0\u7ed3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6309\u7167\u6587\u6863\u64cd\u4f5c\u5c31\u53ef\u4ee5\u3002</p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#bootloader","title":"\u7f16\u8bd1bootloader","text":"<ol> <li>\u68c0\u67e5\u73af\u5883\u53d8\u91cf\u662f\u5426\u6b63\u786e</li> </ol> <p>\u5728\u7ec8\u7aef\u4e0b\u8f93\u5165  arm-linux-gnueabihf-gcc -v\u6765\u9a8c\u8bc1\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u6b63\u5e38 \u4f1a \u6253\u5370\u51fa gcc\u7684\u7248\u672c\u4fe1\u606f\u7b49,\u5982\u4e0b\u6240\u793a\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u56de\u5230\u4e0a\u4e00\u6b65\u914d\u7f6e\u3002</p> <pre><code>book@virtual-machine:~$ arm-linux-gnueabihf-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=arm-linux-gnueabihf-gcc\nCOLLECT_LTO_WRAPPER=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin/../libexec/gcc/arm-linux-gnueabihf/9.1.0/lto-wrapper\nTarget: arm-linux-gnueabihf\nConfigured with: '/home/meng/toolchain/build/snapshots/gcc.git~gcc-9_1_0-release/configure' SHELL=/bin/bash --with-mpc=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-mpfr=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gmp=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gnu-as --with-gnu-ld --disable-libmudflap --enable-lto --enable-shared --without-included-gettext --enable-nls --with-system-zlib --disable-sjlj-exceptions --enable-gnu-unique-object --enable-linker-build-id --disable-libstdcxx-pch --enable-c99 --enable-clocale=gnu --enable-libstdcxx-debug --enable-long-long --with-cloog=no --with-ppl=no --with-isl=no --disable-multilib --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb --with-arch=armv7-a --enable-threads=posix --enable-multiarch --enable-libstdcxx-time=yes --enable-gnu-indirect-function --with-build-sysroot=/home/meng/toolchain/build/sysroots/arm-linux-gnueabihf --with-sysroot=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu/arm-linux-gnueabihf/libc --enable-checking=yes --disable-bootstrap --enable-languages=c,c++,fortran,lto --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=arm-linux-gnueabihf --prefix=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu\nThread model: posix\ngcc version 9.1.0 (GCC)\n</code></pre> <p>\u4e4b\u540e\u518d\u91cd\u65b0\u5728\u7ec8\u7aef\u914d\u7f6e\u4e00\u4e0b ARCH CROSS_COMPILE \u4e24\u4e2a\u73af\u5883\u53d8\u91cf,\u8bbe\u7f6e\u5b8c\u6210\u540e \u5c31\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u540e\u7eed\u7684\u5f00\u53d1\u64cd\u4f5c\u4e86</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\n</code></pre> <ol> <li>\u8fdb\u5165bootloader\u76ee\u5f55</li> </ol> <p>\u63a5\u4e0b\u6765\u8fdb\u5165\u5230 boot \u76ee\u5f55\u5185\uff0c\u8fd9\u4e2a\u5c31\u662fbootloader\u6e90\u7801\u76ee\u5f55\uff0c\u8fdb\u5165\u76ee\u5f55\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8fd9\u91cc\u9762\u7f16\u8bd1 bootloader \u955c\u50cf\u4e86</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ cd boot/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ ls\napi     config.mk      doc       fs       lib             MAKEALL           mz           README                tatus\narch    configs        drivers   include  Licenses        Makefile          net          release_to_alkaid.sh  test\nboard   create_img.sh  dts       Kbuild   list_config.sh  mkimage           pad_file.py  scripts               tools\ncommon  disk           examples  Kconfig  MAINTAINERS     ms_gen_mvxv_h.py  post         snapshot.commit\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$\n</code></pre> <ol> <li>\u7f16\u8bd1bootloader</li> </ol> <p>\u5728\u5f00\u59cb\u7f16\u8bd1\u4e4b\u524d \u6211\u4eec\u8981\u5148\u786e\u8ba4 \u914d\u7f6e\u6587\u4ef6\u540d\u79f0\uff0c\u5982\u4e0b\u6240\u793a DongshanPI-PicoW \u9ed8\u8ba4\u7684\u955c\u50cf\u914d\u7f6e \u6587\u4ef6\u540d\u79f0 \u4e3a pioneer3_spinand_defconfig </p> Flash Type Other Defconfig SPI-NAND \u57fa\u672c pioneer3_spinand_defconfig <p>\u63a5\u4e0b\u6765 \u4f7f\u7528 make  pioneer3_spinand_defconfig  \u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u5e76\u5f00\u59cb\u7f16\u8bd1\uff0c\u914d\u7f6e\u5b8c\u6210\u540e \u8f93\u5165 make \u547d\u4ee4\u5373\u53ef\u5f00\u59cb\u7f16\u8bd1\uff0c\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\uff0c\u8bf7\u7559\u610f $ \u7b26\u53f7\u540e\u9762\u624d\u662f\u547d\u4ee4\u3002</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ make  pioneer3_spinand_defconfig\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  SHIPPED scripts/kconfig/zconf.tab.c\n  SHIPPED scripts/kconfig/zconf.lex.c\n  SHIPPED scripts/kconfig/zconf.hash.c\n  HOSTCC  scripts/kconfig/zconf.tab.o\n  HOSTLD  scripts/kconfig/conf\n#\n# configuration written to .config\n#\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ make -j8\n......\n\n{standard input}: Assembler messages:\n{standard input}:1404: Warning: setting incorrect section attributes for .rodata\n  CC      net/net.o\n  CC      fs/fat/fat_write.o\n  CC      fs/firmwarefs/fwfs_util.o\n  CC      fs/firmwarefs/fwfs.o\n  LD      common/built-in.o\n  CC      net/ping.o\n  CC      lib/xz/xz_dec_lzma2.o\n  CC      fs/fat/file.o\n  CC      fs/firmwarefs/fwfs_tftl.o\n  CC      fs/firmwarefs/firmwarefs.o\n  CC      net/tftp.o\n  CC      lib/zlib/zlib.o\n  CC      lib/crc7.o\n  CC      lib/crc8.o\n  CC      lib/crc16.o\n  CC      lib/gunzip.o\n  LD      net/built-in.o\n  CC      lib/initcall.o\n  CC      lib/lmb.o\n  CC      lib/ldiv.o\n  CC      lib/net_utils.o\n  CC      lib/qsort.o\n  CC      lib/strmhz.o\n  CC      lib/rbtree.o\n  CC      lib/list_sort.o\n  CC      lib/hashtable.o\n  LD      lib/xz/built-in.o\n  CC      lib/errno.o\n  CC      lib/display_options.o\n  CC      lib/crc32.o\n  CC      lib/ctype.o\n  CC      lib/div64.o\n  CC      lib/hang.o\n  CC      lib/linux_compat.o\n  CC      lib/linux_string.o\n  CC      lib/string.o\n  CC      lib/time.o\n  CC      lib/vsprintf.o\n  CC      lib/uminiz.o\n  LD      fs/fat/built-in.o\n  LD      lib/zlib/built-in.o\n  LD      lib/built-in.o\n  LD      fs/firmwarefs/built-in.o\n  LD      fs/built-in.o\n  CC      examples/standalone/stubs.o\n  CC      examples/standalone/hello_world.o\n  LD      examples/standalone/libstubs.o\n  LD      examples/standalone/hello_world\n  OBJCOPY examples/standalone/hello_world.srec\n  OBJCOPY examples/standalone/hello_world.bin\n  LD      u-boot\n  OBJCOPY u-boot.srec\n  OBJCOPY u-boot.bin\nMode: c, Level: 4\nInput File: \"u-boot.bin\"\nOutput File: \"u-boot.bin.mz\"\nInput file size: 731100\nTotal input bytes: 731100\nTotal output bytes: 343142\nSuccess.\nxz: u-boot.bin.xz: File already has `.xz' suffix, skipping\n\nu-boot_spinand.mz.img.bin\nImage Name:   MVX4##P3##g#######CM_UBT1501#XVM\nCreated:      Wed Apr 12 09:47:31 2023\nImage Type:   ARM U-Boot Kernel Image (mz compressed)\nData Size:    343142 Bytes = 335.10 kB = 0.33 MB\nLoad Address: 23d00000\nEntry Point:  23e00000\n\n\nu-boot_spinand.xz.img.bin\nImage Name:   MVX4##P3##g#######CM_UBT1501#XVM\nCreated:      Wed Apr 12 09:47:31 2023\nImage Type:   ARM U-Boot Kernel Image (lzma compressed)\nData Size:    255572 Bytes = 249.58 kB = 0.24 MB\nLoad Address: 23d00000\nEntry Point:  23e00000\n\n\nu-boot_spinand.img.bin\nImage Name:   MVX4##P3##g#######CM_UBT1501#XVM\nCreated:      Wed Apr 12 09:47:31 2023\nImage Type:   ARM U-Boot Kernel Image (uncompressed)\nData Size:    731100 Bytes = 713.96 kB = 0.70 MB\nLoad Address: 23d00000\nEntry Point:  23e00000\n\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$\n</code></pre> <p>\u7f16\u8bd1\u5b8c\u6210\u7684\u955c\u50cf \u662f <code>u-boot_spinand.xz.img.bin</code> \u8fd9\u4e2a\u662f\u6700\u7ec8\u53ef\u4ee5\u7528\u6765\u70e7\u5f55\u7684\u955c\u50cf\u6587\u4ef6\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6cd5\u5355\u72ec\u53ea\u70e7\u5199\u4e00\u4e2a u-boot\u955c\u50cf\uff0c\u6240\u4ee5\u6700\u597d\u662f \u53c2\u8003\u4e0b\u9762\u6b65\u9aa4 \u62f7\u8d1d\u5230 project \u76ee\u5f55\uff0c\u505a\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u955c\u50cf \u4f7f\u7528\u70e7\u5199\u5de5\u5177\u70e7\u5199\u3002</p> <ol> <li>\u62f7\u8d1d\u6253\u5305\u4f7f\u7528</li> </ol> <p>\u628a\u7f16\u8bd1\u51fa\u6765\u7684  <code>u-boot_spinand.xz.img.bin</code>\uff0c\u66ff\u6362\u5230<code>project/board/p3/boot/spinand/uboot/u-boot_spinand.xz.img.bin</code>\uff0c\u91cd\u65b0\u7f16\u8bd1project\u5373\u53ef\u751f\u4ea7\u4e00\u4e2a\u5b8c\u6574\u7cfb\u7edf\u955c\u50cf</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/boot$ cp u-boot_spinand.xz.img.bin ../project/board/p3/boot/spinand/uboot/\n</code></pre>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#kernel","title":"\u7f16\u8bd1kernel","text":"<p>\u7f16\u8bd1SDK\u4f1a\u9ed8\u8ba4\u7f16\u8bd1kernel\uff0c\u548cSSD201/SSD202\u4e0d\u540c\u3002\u56e0\u6b64\u5efa\u8bae\u4fee\u6539\u76f8\u5173kernel\u4e4b\u540e\uff0c\u76f4\u63a5\u5728project\u4e0b\u7f16\u8bd1\uff0c\u4f1a\u9ed8\u8ba4\u7f16\u8bd1kernel\u7684\u5185\u5bb9\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u624b\u52a8release\u5230project\u4e0b\u7684\u8def\u5f84\u3002</p> <ol> <li>\u68c0\u67e5\u73af\u5883\u53d8\u91cf\u662f\u5426\u6b63\u786e</li> </ol> <p>\u5728\u7ec8\u7aef\u4e0b\u8f93\u5165  arm-linux-gnueabihf-gcc -v\u6765\u9a8c\u8bc1\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u6b63\u5e38 \u4f1a \u6253\u5370\u51fa gcc\u7684\u7248\u672c\u4fe1\u606f\u7b49,\u5982\u4e0b\u6240\u793a\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u56de\u5230\u4e0a\u4e00\u6b65\u914d\u7f6e\u3002</p> <pre><code>book@virtual-machine:~$ arm-linux-gnueabihf-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=arm-linux-gnueabihf-gcc\nCOLLECT_LTO_WRAPPER=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin/../libexec/gcc/arm-linux-gnueabihf/9.1.0/lto-wrapper\nTarget: arm-linux-gnueabihf\nConfigured with: '/home/meng/toolchain/build/snapshots/gcc.git~gcc-9_1_0-release/configure' SHELL=/bin/bash --with-mpc=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-mpfr=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gmp=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gnu-as --with-gnu-ld --disable-libmudflap --enable-lto --enable-shared --without-included-gettext --enable-nls --with-system-zlib --disable-sjlj-exceptions --enable-gnu-unique-object --enable-linker-build-id --disable-libstdcxx-pch --enable-c99 --enable-clocale=gnu --enable-libstdcxx-debug --enable-long-long --with-cloog=no --with-ppl=no --with-isl=no --disable-multilib --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb --with-arch=armv7-a --enable-threads=posix --enable-multiarch --enable-libstdcxx-time=yes --enable-gnu-indirect-function --with-build-sysroot=/home/meng/toolchain/build/sysroots/arm-linux-gnueabihf --with-sysroot=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu/arm-linux-gnueabihf/libc --enable-checking=yes --disable-bootstrap --enable-languages=c,c++,fortran,lto --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=arm-linux-gnueabihf --prefix=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu\nThread model: posix\ngcc version 9.1.0 (GCC)\n</code></pre> <p>\u4e4b\u540e\u518d\u91cd\u65b0\u5728\u7ec8\u7aef\u914d\u7f6e\u4e00\u4e0b ARCH CROSS_COMPILE \u4e24\u4e2a\u73af\u5883\u53d8\u91cf,\u8bbe\u7f6e\u5b8c\u6210\u540e \u5c31\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u540e\u7eed\u7684\u5f00\u53d1\u64cd\u4f5c\u4e86</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\n</code></pre> <ol> <li>\u8fdb\u5165Linux Kernel\u76ee\u5f55</li> </ol> <p>\u63a5\u4e0b\u6765\u8fdb\u5165\u5230 boot \u76ee\u5f55\u5185\uff0c\u8fd9\u4e2a\u5c31\u662fbootloader\u6e90\u7801\u76ee\u5f55\uff0c\u8fdb\u5165\u76ee\u5f55\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8fd9\u91cc\u9762\u7f16\u8bd1 bootloader \u955c\u50cf\u4e86</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK$ cd kernel/\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$ ls\narch     CREDITS        firmware  ipc      lib             Makefile        ms_pack_modules.sh           REPORTING-BUGS  sound\nblock    crypto         fs        Kbuild   list_config.sh  mm              net                          samples         tools\ncerts    Documentation  include   Kconfig  MAINTAINERS     modules         README                       scripts         usr\nCOPYING  drivers        init      kernel   makefile        Module.symvers  release_kernel_to_alkaid.sh  security        virt\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$\n</code></pre> <ol> <li>\u7f16\u8bd1LinuxKernel</li> </ol> <p>\u5728\u5f00\u59cb\u7f16\u8bd1\u4e4b\u524d \u6211\u4eec\u8981\u5148\u786e\u8ba4 \u914d\u7f6e\u6587\u4ef6\u540d\u79f0\uff0c\u5982\u4e0b\u6240\u793a DongshanPI-PicoW \u9ed8\u8ba4\u7684\u955c\u50cf\u914d\u7f6e \u6587\u4ef6\u540d\u79f0 \u4e3a pioneer3_ssc021a_s01a_spinand_demo_defconfig </p> Chip Packaging Memory Flash Type Toolchain Other Defconfig SSD210 QFN68 64M SPI-NAND glibc \u4e0d\u5e26sensor make pioneer3_ssc021a_s01a_spinand_demo_defconfig <p>\u63a5\u4e0b\u6765 \u4f7f\u7528 make  pioneer3_ssc021a_s01a_spinand_demo_defconfig  \u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u5e76\u5f00\u59cb\u7f16\u8bd1\uff0c\u914d\u7f6e\u5b8c\u6210\u540e \u8f93\u5165 make \u547d\u4ee4\u5373\u53ef\u5f00\u59cb\u7f16\u8bd1\uff0c\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\uff0c\u8bf7\u7559\u610f $ \u7b26\u53f7\u540e\u9762\u624d\u662f\u547d\u4ee4\u3002</p> <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$ make pioneer3_ssc021a_s01a_spinand_demo_defconfig\nExtract CHIP NAME (pioneer3) to '.sstar_chip.txt'\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  HOSTCC  scripts/kconfig/zconf.tab.o\n  HOSTLD  scripts/kconfig/conf\n#\n# configuration written to .config\n#\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$ make -j8\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\n.....\nchangelist g\n  BRANCHID   g\n  CHK     include/generated/uapi/linux/version.h\n  MS_PLATFORM_ID: P3\n  CHK     include/generated/utsrelease.h\n  CHK     include/generated/timeconst.h\n  CHK     include/generated/bounds.h\n  CHK     include/generated/asm-offsets.h\n  CALL    scripts/checksyscalls.sh\n  CHK     include/generated/compile.h\n  CC      arch/arm/mach-sstar/ms_chip.o\n  LD      arch/arm/mach-sstar/built-in.o\n  LD      vmlinux.o\n  MODPOST vmlinux.o\nWARNING: modpost: Found 5 section mismatch(es).\nTo see full details build your kernel with:\n'make CONFIG_DEBUG_SECTION_MISMATCH=y'\n  GEN     .version\n  CHK     include/generated/compile.h\n  UPD     include/generated/compile.h\n  CC      init/version.o\n  LD      init/built-in.o\n  KSYM    .tmp_kallsyms1.o\n  KSYM    .tmp_kallsyms2.o\n  LD      vmlinux\n  SORTEX  vmlinux\n  SYSMAP  System.map\n  OBJCOPY arch/arm/boot/Image\n  Building modules, stage 2.\n  Kernel: arch/arm/boot/Image is ready\n  MODPOST 35 modules\n  DTC     arch/arm/boot/dts/pioneer3-ssc021a-s01a-demo.dtb\n  DTC     arch/arm/boot/dts/pioneer3-fpga.dtb\n  XZKERN  arch/arm/boot/compressed/piggy_data\n\n\n  Packing modules to '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel/modules'\n\n\n  AS      arch/arm/boot/compressed/piggy.o\n  LD      arch/arm/boot/compressed/vmlinux\n  OBJCOPY arch/arm/boot/zImage\n#update builtin DTB\n  IMAGE   arch/arm/boot/Image\n  BNDTB arch/arm/boot/dts/pioneer3-ssc021a-s01a-demo.dtb\noffset:0x004103B0\n  size:0x00009545\n\n#update Image-fpga DTB\n  IMAGE   arch/arm/boot/Image-fpga\n  BNDTB   pioneer3-fpga.dtb\noffset:0x004103B0\n  size:0x00008904\n\n  The configuration of GPIO &amp; PADMUX is correct!\n#build uImage\nImage Name:   MVX4##P3##g#######KL_LX409##[BR:\nCreated:      Wed Apr 12 10:07:07 2023\nImage Type:   ARM Linux Kernel Image (uncompressed)\nData Size:    4444160 Bytes = 4340.00 kB = 4.24 MB\nLoad Address: 20008000\nEntry Point:  20008000\n\nCompress Kernel Image\nImage Name:   MVX4##P3##g#######KL_LX409##[BR:\nCreated:      Wed Apr 12 10:07:10 2023\nImage Type:   ARM Linux Kernel Image (lzma compressed)\nData Size:    2120676 Bytes = 2070.97 kB = 2.02 MB\nLoad Address: 20008000\nEntry Point:  20008000\nMode: c, Level: 4\nInput File: \"arch/arm/boot/Image\"\nOutput File: \"arch/arm/boot/Image.mz\"\nInput file size: 4444160\nTotal input bytes: 4444160\nTotal output bytes: 2577043\nSuccess.\n\nImage Name:   MVX4##P3##g#######KL_LX409##[BR:\nCreated:      Wed Apr 12 10:07:10 2023\nImage Type:   ARM Linux Kernel Image (mz compressed)\nData Size:    2577043 Bytes = 2516.64 kB = 2.46 MB\nLoad Address: 20008000\nEntry Point:  20008000\n\n\n  Kernel: arch/arm/boot/zImage is ready\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/kernel'\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/kernel$\n</code></pre> <p>\u7f16\u8bd1\u5b8c\u6210\u7684\u955c\u50cf \u662f <code>arch/arm/boot/uImage.xz</code> \u8fd9\u4e2a\u662f\u6700\u7ec8\u53ef\u4ee5\u7528\u6765\u542f\u52a8\u7684\u5185\u6838\u955c\u50cf\u3002 \u8fd9\u4e2a\u662f\u8bbe\u5907\u6811\u6587\u4ef6 arch/arm/boot/dts/pioneer3-ssc021a-s01a-demo.dtb</p> <p>\u5982\u679ckernel \u6709\u65b0\u589ekernel modules\u9700\u8981\u5c06\u76f8\u5e94\u7684module\u6dfb\u52a0\u5230<code>kernel_mod_list/kernel_mod_list_late</code>\uff08kernel_mod_list_late\u91cc\u7684ko\u4f1a\u5728mi module\u4e4b\u540e\u88c5\u8f7d\uff09 \u4fee\u6539\u8def\u5f84\uff1a<code>project/kbuild/customize/$(KERNEL_VERSION)/$(CHIP)/$(PRODUCT)/kernel_mod_list</code></p> <p>\u6ce8\u610f\uff1a \u5982\u679c\u7f16\u8bd1kernel\u65f6\u63d0\u793a dtb\u6253\u5305\u9519\u8bef\uff0c\u5219\u9700\u8981\u53c2\u8003 https://github.com/DongshanPI/Sigmastar-Linux/commit/dfbfa30b5dd564a05812d5ecd967a53e51749304 \u4fee\u6539\u5bf9\u5e94\u7684\u6e90\u7801\uff0c\u8fd9\u4e2a\u95ee\u9898\u662fSDK\u4e0d\u517c\u5bb9\u95ee\u9898\u5bfc\u81f4\u3002</p>"},{"location":"DongshanPi-PicoW/07-IKAYAKISDK_DevelopmentGuide/#sdk","title":"\u7f16\u8bd1SDK","text":"<p>\u9ed8\u8ba4\u7f16\u8bd1sdk\u65f6\uff0c\u4f1a\u5148<code>build kernel</code>\uff0c\u7b2c\u4e00\u6b21\u7f16\u8bd1\u901a\u8fc7<code>make clean;make image -j8</code>\u547d\u4ee4\u5168\u90e8\u7f16\u8bd1\uff0c\u540e\u7eed\u5982\u679c\u4e0d\u9700\u8981<code>build kernel</code>\u53ef\u4ee5\u7528<code>make image-fast</code>\u4ee3\u66ff<code>make image</code>\u3002</p> <ol> <li>\u68c0\u67e5\u73af\u5883\u53d8\u91cf\u662f\u5426\u6b63\u786e</li> </ol> <p>\u5728\u7ec8\u7aef\u4e0b\u8f93\u5165  arm-linux-gnueabihf-gcc -v\u6765\u9a8c\u8bc1\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u6b63\u5e38 \u4f1a \u6253\u5370\u51fa gcc\u7684\u7248\u672c\u4fe1\u606f\u7b49,\u5982\u4e0b\u6240\u793a\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u56de\u5230\u4e0a\u4e00\u6b65\u914d\u7f6e\u3002</p> <pre><code>book@virtual-machine:~$ arm-linux-gnueabihf-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=arm-linux-gnueabihf-gcc\nCOLLECT_LTO_WRAPPER=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/gcc-sigmastar-9.1.0-2020.07-x86_64_arm-linux-gnueabihf/bin/../libexec/gcc/arm-linux-gnueabihf/9.1.0/lto-wrapper\nTarget: arm-linux-gnueabihf\nConfigured with: '/home/meng/toolchain/build/snapshots/gcc.git~gcc-9_1_0-release/configure' SHELL=/bin/bash --with-mpc=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-mpfr=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gmp=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu --with-gnu-as --with-gnu-ld --disable-libmudflap --enable-lto --enable-shared --without-included-gettext --enable-nls --with-system-zlib --disable-sjlj-exceptions --enable-gnu-unique-object --enable-linker-build-id --disable-libstdcxx-pch --enable-c99 --enable-clocale=gnu --enable-libstdcxx-debug --enable-long-long --with-cloog=no --with-ppl=no --with-isl=no --disable-multilib --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb --with-arch=armv7-a --enable-threads=posix --enable-multiarch --enable-libstdcxx-time=yes --enable-gnu-indirect-function --with-build-sysroot=/home/meng/toolchain/build/sysroots/arm-linux-gnueabihf --with-sysroot=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu/arm-linux-gnueabihf/libc --enable-checking=yes --disable-bootstrap --enable-languages=c,c++,fortran,lto --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=arm-linux-gnueabihf --prefix=/home/meng/toolchain/build/builds/destdir/x86_64-unknown-linux-gnu\nThread model: posix\ngcc version 9.1.0 (GCC)\n</code></pre> <p>\u4e4b\u540e\u518d\u91cd\u65b0\u5728\u7ec8\u7aef\u914d\u7f6e\u4e00\u4e0b ARCH CROSS_COMPILE \u4e24\u4e2a\u73af\u5883\u53d8\u91cf,\u8bbe\u7f6e\u5b8c\u6210\u540e \u5c31\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u540e\u7eed\u7684\u5f00\u53d1\u64cd\u4f5c\u4e86</p> <pre><code>export ARCH=arm\nexport CROSS_COMPILE=arm-linux-gnueabihf-\n</code></pre> <ol> <li>\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u7f16\u8bd1</li> </ol> <p>\u8fdb\u5165\u5230 project \u76ee\u5f55\u4e0b <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ ls\nboard                                                      include                         make_sd_upgrade_sigmastar.sh   scripts\nchange_config_into_defconfig.sh                            kbuild                          make_usb_factory_sigmastar.sh  setup_config.sh\nconfigs                                                    Kconfig                         make_usb_upgrade_sigmastar.sh  setup_defconfig.sh\ndispcam_p3_nor.glibc-9.1.0-ramfs.s01a.64.qfn128_defconfig  make_emmc_upgrade_sigmastar.sh  parser_IPL.sh                  split_partion.sh\nimage                                                      makefile                        release                        tools\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre> \u6267\u884c make dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig \u547d\u4ee4\u6765\u5f00\u59cb\u914d\u7f6e</p> Chip Packaging Memory Flash Type Toolchain Other Defconfig SSD210 QFN68 64M SPI-NAND glibc \u4e0d\u5e26sensor make dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig <p>\u6574\u4e2a\u914d\u7f6e\u8fc7\u7a0b\u6bd4\u8f83\u5feb\u3002 <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ make dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\nmake -f /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/scripts/Makefile.build obj=scripts/basic\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\n  gcc -Wp,-MD,scripts/basic/.fixdep.d -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89     -o scripts/basic/fixdep scripts/basic/fixdep.c\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmake -f /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/scripts/Makefile.build obj=scripts/kconfig dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\n  gcc -Wp,-MD,scripts/kconfig/.conf.o.d -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89   -D_GNU_SOURCE -D_DEFAULT_SOURCE -I/usr/include/ncursesw -DCURSES_LOC=\"&lt;ncurses.h&gt;\" -DNCURSES_WIDECHAR=1 -DLOCALE   -c -o scripts/kconfig/conf.o scripts/kconfig/conf.c\n  gcc -Wp,-MD,scripts/kconfig/.zconf.tab.o.d -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89   -D_GNU_SOURCE -D_DEFAULT_SOURCE -I/usr/include/ncursesw -DCURSES_LOC=\"&lt;ncurses.h&gt;\" -DNCURSES_WIDECHAR=1 -DLOCALE  -Iscripts/kconfig -c -o scripts/kconfig/zconf.tab.o scripts/kconfig/zconf.tab.c\n  gcc  -o scripts/kconfig/conf scripts/kconfig/conf.o scripts/kconfig/zconf.tab.o\n#scripts/kconfig/conf  --defconfig=arch//configs/dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig Kconfig\nscripts/kconfig/conf  --defconfig=configs/defconfigs/dispcam_p3_spinand.glibc-9.1.0-s01a.64.qfn68.demo_defconfig Kconfig\n#\n# configuration written to .config\n#\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmake silentoldconfig\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\ncat: /home/causer/swnas/workspace/ALL--ALKAID--ReleaseBuild/alkaid/release/release_1220/sourcecode/project/../kernel/Makefile: No such file or directory\nmake -f /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/scripts/Makefile.build obj=scripts/kconfig silentoldconfig\nmake[2]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmkdir -p include/config include/generated\ntest -e include/generated/autoksyms.h || \\\n    touch   include/generated/autoksyms.h\nscripts/kconfig/conf  --silentoldconfig Kconfig\nmake[2]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nPROJ_ROOT = /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project\nCONFIG_NAME = config_module_list.mk\nKBUILD_MK = kbuild/kbuild.mk\nSOURCE_MK = ../sdk/sdk.mk\nKERNEL_MEMADR = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM phyaddr)\nKERNEL_MEMLEN = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM size)\nKERNEL_MEMADR2 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM2 phyaddr)\nKERNEL_MEMLEN2 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM2 size)\nKERNEL_MEMADR3 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM3 phyaddr)\nKERNEL_MEMLEN3 = $(shell /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/mmapparser /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/$(CHIP)/mmap/$(MMAP) $(CHIP) E_LX_MEM3 size)\nLOGO_ADDR = Not support chip\nP3 = y\nCHIP = p3\nDISP = y\nPRODUCT = disp\nNO_WIFI = y\nSIGMA_WIFI = no_wifi\nBOARD = 020A\nBOARD_NAME = SSC021A-S01B\nTOOLCHAIN_GLIBC = y\nTOOLCHAIN = glibc\nTOOLCHAIN_VERSION_9.1.0 = y\nTOOLCHAIN_VERSION = 9.1.0\nTOOLCHAIN_REL_ARM-LINUX-GNUEABIHF-SIGMASTAR-9.1.0 = y\nTOOLCHAIN_REL = arm-linux-gnueabihf-sigmastar-9.1.0\nBUSYBOX = busybox-1.20.2-arm-linux-gnueabihf-glibc-sigmastar-9.1.0-dynamic\nKERNEL_VERSION_4.9.84 = y\nKERNEL_VERSION = 4.9.84\nKERNEL_CONFIG = pioneer3_ssc021a_s01a_spinand_demo_defconfig\nKERNEL_BOOT_ENV = LX_MEM=0x3FE0000 mma_heap=mma_heap_name0,miu=0,sz=0x1E00000 cma=2M highres=off $(KERNEL_RESERVED_ENV)\nEXBOOTARGS =\nIMAGE_CONFIG = spinand.ubifs.partition.dualenv.dispcam.config\nFLASH_SIZE_NONE = y\nFLASH_SIZE =\nMMAP = MMAP_P3_64.h\nIQ0 = gc1054/gc1054_iqfile.bin\nIQ1 = gc1054/gc1054_iqfile.bin\nIQ2 = gc1054/gc1054_iqfile.bin\nIQ3 = gc1054/gc1054_iqfile.bin\nIQ_API0 = gc1054/gc1054_api.bin\nIQ_API1 = gc1054/gc1054_api.bin\nSENSOR_LIST =\nSENSOR0 =\nSENSOR0_OPT =\nSENSOR1 =\nSENSOR1_OPT =\nSENSOR2 =\nSENSOR2_OPT =\nmi_dbg = y\nMI_DBG = 1\nSUPPORT_SMART_DISPLAY_VDEC = 0\nsupport_msos_mpool_add_pa2varange = y\nSUPPORT_MsOS_MPool_Add_PA2VARange = 1\nsupport_disp_align_up_offset32 = y\nSUPPORT_DISP_ALIGN_UP_OFFSET32 = 1\nSUPPORT_HDMI_VGA_DIRECT_MODE = 0\nSUPPORT_DIVP_USE_GE_SCALING_UP = 0\nSUPPORT_VIF_USE_GE_FILL_BUF = 0\nsupport_stub_device_for_test_sys = y\nSUPPORT_STUB_DEVICE_FOR_TEST_SYS = 1\nSUPPORT_VDEC_MULTI_RES = 0\nSUPPORT_DIVP_P2_MODE = 0\nFB_VIDEO = 0\nCONFIG_MI_ENABLE_VB_POOL = 0\nconfig_mi_enable_meta_pool = y\nCONFIG_MI_ENABLE_META_POOL = 1\nconfig_mi_enable_sys_cfg = y\nCONFIG_MI_ENABLE_SYS_CFG = 1\nCONFIG_MI_ENABLE_SHRINKABLE_POOL = 0\nconfig_mi_enable_ringheap_pool = y\nCONFIG_MI_ENABLE_RINGHEAP_POOL = 1\nis_demo_board = y\nIS_DEMO_BOARD = 3\nconfig_mi_venc_enable_jpeg = y\nCONFIG_MI_VENC_ENABLE_JPEG = 1\nconfig_mi_venc_enable_h26x = y\nCONFIG_MI_VENC_ENABLE_H26X = 1\nFPGA = 0\nBENCH = no\nMHAL =\nMERGE_BOOT =\nBOOTLOGO_FILE =\nLOGO_ADDR =\nBOOTLOGO_BUFSIZE =\nUPGRADE_FILE =\nDISP_OUT_NAME = SAT070CP50\nFBDEV =\nWIFI_MODULE =\nSPEECH_VENDOR =\nALINK =\nDUAL_OS = off\nFAST_DEMO = off\nSENSOR_TYPE0 =\nSENSOR_TYPE1 =\nLINUX_MEM_SIZE =\nRTOS_BIN =\nRTOS_LOAD_ADDR =\nMMA_BASE =\nMMA_SIZE =\nverify_ai = disable\nverify_ao = disable\nverify_cipher = disable\nverify_disp = disable\nverify_divp = disable\nverify_dla = disable\nverify_fb = disable\nverify_gfx = disable\nverify_hdmi = disable\nverify_ipu = disable\nverify_jpd = disable\nverify_shadow = disable\nverify_sys = disable\nverify_uvc_uac = disable\nverify_uac = disable\nverify_vdec = disable\nverify_vdisp = disable\nverify_venc = disable\nverify_vif = disable\nverify_vpe = disable\nverify_warp = disable\nverify_wlan = disable\nverify_mdb = disable\nverify_mi_demo = disable\nverify_mixer = disable\nverify_py_ipu = disable\nverify_zk_bootup = disable\nverify_zk_mini = disable\nverify_zk_full = disable\nverify_zk_mini_nosensor = disable\nverify_zk_mini_fastboot = disable\nverify_zk_full_fastboot = disable\nverify_zk_mini_nosensor_fastboot = disable\nverify_qfn68_sensor_panel = disable\nverify_barcode = disable\nverify_disp_pic_fastboot = disable\nverify_usbcamera_fastboot = disable\nverify_usbcamera = disable\nverify_usbcam_fastboot = disable\nverify_barcodeYuyan = disable\nverify_jpeg2disp = disable\nINTERFACE_AI = y\ninterface_ai = enable\ninterface_alsa = disable\nINTERFACE_AO = y\ninterface_ao = enable\ninterface_bar = disable\ninterface_cipher = disable\nINTERFACE_COMMON = y\ninterface_common = enable\ninterface_cus3a = disable\nINTERFACE_DISP = y\ninterface_disp = enable\nINTERFACE_DIVP = y\ninterface_divp = enable\nINTERFACE_PSPI = y\ninterface_pspi = enable\ninterface_foo = disable\nINTERFACE_GFX = y\ninterface_gfx = enable\ninterface_gyro = disable\ninterface_hdmi = disable\ninterface_ipu = disable\ninterface_iqserver = disable\ninterface_isp = disable\ninterface_ispalgo = disable\ninterface_jpd = disable\ninterface_ldc = disable\ninterface_mipitx = disable\nINTERFACE_PANEL = y\ninterface_panel = enable\nINTERFACE_RGN = y\ninterface_rgn = enable\ninterface_sed = disable\ninterface_sensor = disable\ninterface_shadow = disable\nINTERFACE_SYS = y\ninterface_sys = enable\ninterface_vdec = disable\ninterface_vdf = disable\ninterface_vdisp = disable\nINTERFACE_VENC = y\ninterface_venc = enable\ninterface_vif = disable\ninterface_vpe = disable\ninterface_warp = disable\nINTERFACE_WLAN = y\ninterface_wlan = enable\nINTERFACE_FB = y\ninterface_fb = enable\nmisc_fbdev = disable\nMISC_CONFIG_TOOL = y\nmisc_config_tool = enable\nMHAL_AIO = y\nmhal_aio = enable\nMHAL_CMDQ_SERVICE = y\nmhal_cmdq_service = enable\nmhal_csi = disable\nMHAL_DISP = y\nmhal_disp = enable\nMHAL_DIVP = y\nmhal_divp = enable\nmhal_earlyinit = disable\nMHAL_GE = y\nmhal_ge = enable\nmhal_hdmitx = disable\nMHAL_IMI_HEAP = y\nmhal_imi_heap = enable\nMHAL_INIT = y\nmhal_init = enable\nmhal_ipu = disable\nmhal_isp = disable\nmhal_ispalgo = disable\nmhal_ispmid = disable\nmhal_ispscl = disable\nmhal_jpd = disable\nmhal_ldc = disable\nmhal_mipitx = disable\nmhal_mload = disable\nMHAL_NEON = y\nmhal_neon = enable\nMHAL_PANEL = y\nmhal_panel = enable\nMHAL_RGN = y\nmhal_rgn = enable\nmhal_sensorif = disable\nMHAL_VCODEC = y\nmhal_vcodec = enable\nmhal_vif = disable\nmhal_vpe = disable\nARCH=arm\nCROSS_COMPILE=arm-linux-gnueabihf-sigmastar-9.1.0-\nCHIP_ALIAS = ikayaki\nCHIP_FULL_NAME = pioneer3\nPREFIX =$(TOOLCHAIN_REL)-\nAS = $(PREFIX)as\nCC = $(PREFIX)gcc\nCXX = $(PREFIX)g++\nCPP = $(PREFIX)cpp\nAR = $(PREFIX)ar\nLD = $(PREFIX)ld\nSTRIP = $(PREFIX)strip\nexport ARCH CROSS_COMPILE\nKERNEL_RESERVED_ENV = mmap_reserved=fb,miu=0,sz=0x300000,max_start_off=0x3C00000,max_end_off=0x3F00000\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre></p> <ol> <li>\u7f16\u8bd1\u6700\u7ec8\u955c\u50cf \u914d\u7f6e\u6210\u529f\u4ee5\u540e\uff0c\u5728 project \u76ee\u5f55\u4e0b\u6267\u884c make image\u547d\u4ee4\u53ef\u4ee5\u5f00\u59cb\u7f16\u8bd1\u64cd\u4f5c\u3002 \u7b49\u5f85\u7f16\u8bd1\u5b8c\u6210\uff0c\u5c31\u4f1a\u751f\u6210\u5b8c\u6574\u7684\u53ef\u70e7\u5f55\u955c\u50cf\u3002 <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ make image\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/modules /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/arch /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/drivers /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/include /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/scripts /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/Makefile /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/Module.symvers /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/.sstar_chip.txt /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/../kernel/.config /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/tools/usr /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/\nln -sf /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/customize/4.9.84/p3/disp /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/kbuild/4.9.84/customize\nmake headfile_link\nmake[1]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\n'/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/release/include/mi_isp_general.h' -&gt; '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/release/include/isp/mi_isp_general.h'\n......\nBrief USAGE:\n   /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/scri\n                                        pt/../../build/mkfwfs  {-c\n                                        &lt;pack_dir&gt;|-u &lt;dest_dir&gt;|-l} [-d\n                                        &lt;0-5&gt;] [-a] [-m &lt;number&gt;] [-C\n                                        &lt;number&gt;] [-D &lt;number&gt;] [-P\n                                        &lt;number&gt;] [-e &lt;number&gt;] [-y\n                                        &lt;number&gt;] [-X &lt;number&gt;] [-x\n                                        &lt;number&gt;] [-w &lt;number&gt;] [-r\n                                        &lt;number&gt;] [-B &lt;number&gt;] [-b\n                                        &lt;number&gt;] [-p &lt;number&gt;] [-s\n                                        &lt;number&gt;] [--] [--version] [-h]\n                                        &lt;image_file&gt;\n\nFor complete USAGE and HELP type:\n   /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/script/../../build/mkfwfs --help\n\nimage size 605253\n'/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/partition/flash.sni' -&gt; '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni'\n/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/makefiletools/bin/pnigenerator -c 1024 -s 0x20000 -a \"0x140000(CIS),0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\" -b \"0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\" -t \"0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\" -o /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/partinfo.pni      \\\n                 &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/partition_layout.txt\n[[boot_nofsimage]]\nmake boot_images\nmake[4]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\ncat /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/partition_layout.txt\nBOOT0: 0x140000(CIS),0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\nBOOT1: 0x60000(IPL),0x60000(IPL_CUST),0xe0000(UBOOT)\nSYS: 0x40000(ENV),0x40000(ENV1),0x20000(KEY_CUST),0x500000(KERNEL),0x500000(RECOVERY),0x600000(rootfs),0xa0000(MISC),-(UBI)\nFLASH HAS USED 0x8000000KB\nChkSum       : 8081\nMagic        : SSTARSEMICIS0001\nChecksum ok!!\nIDX:         StartBlk:           BlkCnt:     Trunk/BkTrunk:     Active:     BBM:      Name:\n  0:    0,(0000000000)   10,(0X00140000)                0/1           1      OFF        CIS\n  1:   10,(0X00140000)    3,(0X00060000)                0/1           1      OFF        IPL\n  2:   13,(0X001A0000)    3,(0X00060000)                0/1           1      OFF   IPL_CUST\n  3:   16,(0X00200000)    7,(0X000E0000)                0/1           1      OFF      UBOOT\n  4:   23,(0X002E0000)    3,(0X00060000)                1/0           0      OFF        IPL\n  5:   26,(0X00340000)    3,(0X00060000)                1/0           0      OFF   IPL_CUST\n  6:   29,(0X003A0000)    7,(0X000E0000)                1/0           0      OFF      UBOOT\n  7:   36,(0X00480000)    2,(0X00040000)                0/0           1      OFF        ENV\n  8:   38,(0X004C0000)    2,(0X00040000)                0/0           1      OFF       ENV1\n  9:   40,(0X00500000)    1,(0X00020000)                0/0           1      OFF   KEY_CUST\n 10:   41,(0X00520000)   40,(0X00500000)                0/0           1      OFF     KERNEL\n 11:   81,(0X00A20000)   40,(0X00500000)                0/0           1      OFF   RECOVERY\n 12:  121,(0X00F20000)   48,(0X00600000)                0/0           1      OFF     rootfs\n 13:  169,(0X01520000)    5,(0X000A0000)                0/0           1      OFF       MISC\n 14:  174,(0X015C0000)  850,(0X06A40000)                0/0           1      OFF        UBI\nif [ \"spinand\" = \"spinand\" ]; then      \\\n                flash_page_offset=$[0x23]; flash_page_size=8; printf \"%x: %02x\" ${flash_page_offset} ${flash_page_size} | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni;     \\\n        loop=$[$(stat -c \"%s\" /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni)/512-1]; for i in `seq 0 ${loop}`;do blk_pb0_off=$[${i}*512+0x2F]; blk_pb1_off=$[${i}*512+0x30]; printf \"%x: %02x\" ${blk_pb0_off} 10 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni; printf \"%x: %02x\" ${blk_pb1_off} 23 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni; done;    \\\n        loop=$[$(stat -c \"%s\" /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni)/512-1]; for i in `seq 0 ${loop}`;do blk_pb0_off=$[${i}*512+0x2F]; blk_pb1_off=$[${i}*512+0x30]; printf \"%x: %02x\" ${blk_pb0_off} 10 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni; printf \"%x: %02x\" ${blk_pb1_off} 23 | xxd -r - /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni; done;     \\\nfi;\n[================================================================/                                                                    ] 24/49  48%make ipl_mkboot ipl_cust_mkboot uboot_mkboot\nmake[5]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\n[====================================================================================================================================/] 49/49 100%\n\nExportable Squashfs 4.0 filesystem, xz compressed, data block size 131072\n        compressed data, compressed metadata, compressed fragments, compressed xattrs\n        duplicates are removed\nFilesystem size 1800.93 Kbytes (1.76 Mbytes)\n        47.58% of uncompressed filesystem size (3784.79 Kbytes)\nInode table size 1492 bytes (1.46 Kbytes)\n        9.64% of uncompressed inode table size (15477 bytes)\nDirectory table size 3458 bytes (3.38 Kbytes)\n        57.20% of uncompressed directory table size (6045 bytes)\nNumber of duplicate files found 0\nNumber of inodes 414\nNumber of files 25\nNumber of fragments 5\nNumber of symbolic links  366\nNumber of device nodes 0\nNumber of fifo nodes 0\nNumber of socket nodes 0\nNumber of directories 23\nNumber of ids (unique uids + gids) 1\nNumber of uids 1\n        root (0)\nNumber of gids 1\n        root (0)\ndd if=/dev/zero bs=131072 count=1 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot;\ndd if=/dev/zero bs=131072 count=1 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot;\ndd if=/dev/zero bs=393216 count=1 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot;\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000785679 s, 167 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.00157433 s, 83.3 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/ipl/IPL_CUST.bin of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot bs=131072 count=1 conv=notrunc seek=0;\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/ipl/IPL.bin of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot bs=131072 count=1 conv=notrunc seek=0;\n1+0 records in\n1+0 records out\n393216 bytes (393 kB, 384 KiB) copied, 0.00284586 s, 138 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/uboot/u-boot_dualenv_spinand.xz.img.bin of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot bs=393216 count=1 conv=notrunc seek=0;\n0+1 records in\n0+1 records out\n31760 bytes (32 kB, 31 KiB) copied, 0.000403474 s, 78.7 MB/s\nif [ \"3\" != \"\" ]; then \\\n        for((Row=1;Row&lt;3;Row++));do \\\n                dd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot bs=131072 count=1 conv=notrunc seek=${Row}; \\\n        done; \\\nfi;\n0+1 records in\n0+1 records out\n29200 bytes (29 kB, 29 KiB) copied, 0.000393671 s, 74.2 MB/s\nif [ \"3\" != \"\" ]; then \\\n        for((Row=1;Row&lt;3;Row++));do \\\n                dd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot bs=131072 count=1 conv=notrunc seek=${Row}; \\\n        done; \\\nfi;\n0+1 records in\n0+1 records out\n271312 bytes (271 kB, 265 KiB) copied, 0.000833338 s, 326 MB/s\nif [ \"1\" != \"\" ]; then \\\n        for((Row=1;Row&lt;1;Row++));do \\\n                dd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot bs=393216 count=1 conv=notrunc seek=${Row}; \\\n        done; \\\nfi;\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000951708 s, 138 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000823161 s, 159 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000792032 s, 165 MB/s\n1+0 records in\n1+0 records out\n131072 bytes (131 kB, 128 KiB) copied, 0.000828601 s, 158 MB/s\nmake[5]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\ncat /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot.bin\nrm -rfv /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot\nremoved '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_mkboot'\nremoved '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/ipl_cust_mkboot'\nremoved '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/uboot_mkboot'\nmake[4]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\ndd if=/dev/zero bs=2048 count=2 | tr '\\000' '\\377' &gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin\n2+0 records in\n2+0 records out\n4096 bytes (4.1 kB, 4.0 KiB) copied, 7.7572e-05 s, 52.8 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash.sni of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin bs=2048 count=1 conv=notrunc seek=0\n1+0 records in\n1+0 records out\n2048 bytes (2.0 kB, 2.0 KiB) copied, 0.000287638 s, 7.1 MB/s\ndd if=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/partinfo.pni of=/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin bs=2048 count=1 conv=notrunc seek=1\n0+1 records in\n0+1 records out\n2008 bytes (2.0 kB, 2.0 KiB) copied, 0.000260181 s, 7.7 MB/s\ncat /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/boot/flash_list.sni &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/cis.bin\nmake[3]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake scripts\nmake[3]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmkdir -p /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts\nmake set_partition\nmake[4]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake[4]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake cis_spinand__script boot_spinand__script kernel_spinand__script rootfs_spinand_squashfs_script misc_spinand_fwfs_script miservice_spinand_ubifs_script customer_spinand_ubifs_script appconfigs_spinand_ubifs_script spinand_config_script\nmake[4]: Entering directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\n#@echo -e ubi create rootfs 0x600000\\\\n ubi create misc 0xa0000\\\\n ubi create miservice 0xC00000\\\\n ubi create customer 0x5000000\\\\n ubi create appconfigs 0x4C0000\\\\n &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[ipl.es\n#@echo -e ubi create rootfs 0x600000\\\\n ubi create misc 0xa0000\\\\n ubi create miservice 0xC00000\\\\n ubi create customer 0x5000000\\\\n ubi create appconfigs 0x4C0000\\\\n &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[ipl.es\n#@echo ubi create appconfigs 0x4C0000 &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[appconfigs.es\n#@echo ubi create miservice 0xC00000 &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[miservice.es\n#@echo -e ubi create rootfs 0x600000\\\\n ubi create misc 0xa0000\\\\n ubi create miservice 0xC00000\\\\n ubi create customer 0x5000000\\\\n ubi create appconfigs 0x4C0000\\\\n &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[ipl.es\n#@echo ubi create customer 0x5000000 &gt;&gt; /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts/[[customer.es\nif [ -a ../parser_IPL.sh ] ; \\\nthen \\\n        sh ../parser_IPL.sh /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/board/p3/boot/spinand/ipl/IPL.bin /home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image/output/images/scripts ;\\\nfi;\nkernel-image done!!!\n../parser_IPL.sh: line 1: warning: command substitution: ignored null byte in input\nmake[4]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake[3]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\nmake[2]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project/image'\n./split_partion.sh\nsplit customer image\ncustomer.es is not over size,do nothing!!\nmake[1]: Leaving directory '/home/book/DongshanPI-PicoW/IKAYAKI_SDK/project'\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre></li> </ol> <p>\u6253\u5305\u9519\u8bef\u89e3\u51b3 <pre><code>vim image/makefiletools/script/fwfs_pack.py\n\u4fee\u6539 120\u884c str(image_size) \u4e3a str(int(image_size))\n</code></pre></p> <p>4.\u62f7\u8d1d\u955c\u50cf\u70e7\u5199 \u7f16\u8bd1\u5b8c\u6210\u540e\u751f\u6210\u7684image\u5728<code>project/image/output/images</code>\u76ee\u5f55\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u6240\u6709\u7684\u955c\u50cf\u6587\u4ef6\u62f7\u8d1d\u5230 \u9ed8\u8ba4\u7684\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u5939\u5185\uff0c\u66ff\u6362\u6389\u539f\u6765\u7684\uff0c\u91cd\u542f\u5f00\u53d1\u677f\u8fdb\u5165\u70e7\u5f55\u6a21\u5f0f \u5c31\u53ef\u4ee5\u66f4\u65b0\u7cfb\u7edf\u4e3a\u4f60\u6700\u65b0\u7f16\u8bd1\u51fa\u6765\u7684\u7cfb\u7edf\u955c\u50cf\u4e86\u3002 <pre><code>book@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$ ls image/output/images/\nappconfigs.ubifs     auto_update.txt  boot.bin  customer.ubifs  misc.fwfs        partition_layout.txt  scripts      usb_updater_boot.bin\nauto_update_bin.txt  boot             cis.bin   kernel          miservice.ubifs  rootfs.sqfs           scripts_bin  usb_updater_ipl.bin\nbook@virtual-machine:~/DongshanPI-PicoW/IKAYAKI_SDK/project$\n</code></pre></p>"},{"location":"DongshanPi-Seven/01-BoardIntroduction/","title":"\u4e1c\u5c71Pi\u67d2\u53f7-\u5f00\u53d1\u677f","text":"<p>\u4e1c\u5c71PI\u67d2\u53f7\u5f00\u53d1\u677f\u662f\u57fa\u4e8e STM32MP157DAC \u8bbe\u8ba1\u7684\u4e00\u6b3e\u6700\u5c0f\u5f00\u53d1\u677f\u3002\u5176\u4e2d\u6838\u5fc3\u677f\u4f7f\u7528\u7684\u662f\u7c73\u5c14\u7684DDR512MB  EMMC4GB\u914d\u7f6e\uff0c\u6700\u5c0f\u5e95\u677f\u5f15\u51fa\u4e86\u4e00\u4e9b\u5e38\u7528\u63a5\u53e3\uff0c\u6bd4\u5982typec \u8c03\u8bd5\u4f9b\u7535\uff0ctypec OTG\u7cfb\u7edf\u70e7\u5199\u63a5\u53e3\uff0cTf\u5361\u63a5\u53e3 TypeA \u7acb\u5f0fusb\u63a5\u53e3\uff0c\u5343\u5146\u4ee5\u592a\u7f51\u63a5\u53e3\uff0c\u540c\u65f6\u8fd8\u4e13\u95e8\u5f15\u51fa\u4e86 RGB888 \u4ee5\u53caMIPI DSI\u663e\u793a\u63a5\u53e3\uff0c\u6700\u540e\uff0c\u4f9d\u65e7\u5728\u6700\u5c0f\u677f\u4e0a\u4fdd\u7559\u4e86M4\u8c03\u8bd5\u63a5\u53e3\u3002</p> <p>\u4f7f\u7528\u8fd9\u6b3e\u677f\u5b50\u60a8\u53ef\u4ee5\u7528\u6765\u5165\u95e8\u5b66\u4e60 <code>\u5d4c\u5165\u5f0fLinux\u5f00\u53d1</code>,\u5b66\u4e60 <code>\u53cc\u6838\u5f02\u57df\u67b6\u6784</code>,\u5b66\u4e60<code>TF-A</code>ARM\u5b89\u5168\u56fa\u4ef6,\u5b66\u4e60 <code>OPTEE-OS</code>,\u540c\u65f6\u4e5f\u53ef\u4ee5\u7528\u6765\u5b66\u4e60\u4e86\u89e3 <code>rt-smart</code> <code>\u9e3f\u8499\u7cfb\u7edf</code>,\u642d\u914d\u5e95\u677f\u60a8\u53ef\u4ee5\u7528\u6765\u5b66\u4e60 \u5b8c\u5584\u7684 <code>\u5d4c\u5165\u5f0f\u9a71\u52a8\u5f00\u53d1\u8bfe\u7a0b</code> ,\u8be6\u7ec6\u7684<code>Linux\u5e94\u7528\u5f00\u53d1</code> ,\u8fd8\u6709\u540e\u7eed\u7684\u9879\u76ee\u5b9e\u6218\u8bfe\u7a0b\u7b49\u3002</p> <p>\u6211\u4eec\u7684\u914d\u5957\u8d44\u6e90\u4e3b\u8981\u5206\u4e3a\u4e24\u5927\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u9488\u5bf9\u4e8e\u53ea\u60f3\u5b66\u4e60\u5d4c\u5165\u5f0fLinux\u5e94\u7528\u5f00\u53d1\u5feb\u901f\u505a\u51fa\u4e00\u4e2a\u9879\u76ee\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u60f3\u6df1\u5165\u5b66\u4e60\u5d4c\u5165\u5f0fLinux\u5e95\u5c42\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\uff0c\u4ee5\u53ca\u7cfb\u7edf\u6784\u5efa\u7b49\u3002</p>"},{"location":"DongshanPi-Seven/01-BoardIntroduction/#_1","title":"\u786c\u4ef6\u529f\u80fd\u63cf\u8ff0","text":"<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c DongshanPISeven \u5f00\u53d1\u677f\u529f\u80fd\u4f4d\u7f6e\u793a\u4f8b\u56fe\u3002</p> <p></p> <ul> <li>\u5f00\u53d1\u677f\u89c4\u683c: \u957f\u5bbd\u7ea6100mm x 70mm\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8fde\u63a5\u4f7f\u7528\u4e86SODIMM\u63a5\u53e3\u3002</li> <li>\u6838\u5fc3\u677f\u89c4\u683c\uff1a\u6838\u5fc3\u677f\u6240\u6709\u7684\u82af\u7247\u90fd\u5728\u5c4f\u853d\u7f69\u4e0b\u9762\uff0c\u53ef\u4ee5\u53d6\u4e0b\u5c4f\u853d\u7f69\u770b\u5230\u3002<ul> <li>SOC\u4e3b\u63a7: STM32MP157DAC \uff08\u53cc\u6838CorteX A7 800Mhz  + 209Mhz M4 + 3D GPU \uff09</li> <li>DDR\uff1a\u5185\u7f6e512MB DDR3</li> <li>\u5b58\u50a8: EMMC 4GB FLASH</li> <li>\u7f51\u7edc\uff1a\u5343\u5146PHY\u82af\u7247\u3002</li> </ul> </li> <li>\u5e95\u677f\u89c4\u683c\uff1a<ul> <li>TypeA \u7acb\u5f0fUSB 2.0 HOST\u63a5\u53e3\u3002</li> <li>RJ45\u5343\u5146\u4ee5\u592a\u7f51\u63a5\u53e3\u3002</li> <li>Type-C OTG\u70e7\u5f55\u63a5\u53e3\u3002</li> <li>Type-C \u7535\u6e90&amp;TTL\u8c03\u8bd5\u63a5\u53e3\u3002</li> <li>Reset Key  x1</li> <li>Wakeup Key  x1</li> <li>User Key x1</li> <li>BootMode \u542f\u52a8\u65b9\u5f0f\u5207\u6362\u5f00\u5173\u3002</li> <li>Power Red Led x1</li> <li>User Led x2 </li> <li>FPC-50Pin RGB888\u663e\u793a\u3002</li> <li>FPC-15Pin MIPI DSI\u663e\u793a\u3002</li> <li>RTC 1.25mm \u63a5\u53e3\u3002</li> <li>M4 Core Debug \u63a5\u53e3\u3002</li> </ul> </li> </ul>"},{"location":"DongshanPi-Seven/01-BoardIntroduction/#_2","title":"\u786c\u4ef6\u8d44\u6599","text":"<ul> <li>\u539f\u7406\u56fe\u6587\u4ef6\uff1ahttps://dongshanpi.cowtransfer.com/s/f6985560931543 \u70b9\u51fb\u94fe\u63a5\u67e5\u770b [ DongshanPI-SEVEN ] </li> </ul>"},{"location":"DongshanPi-Seven/01-BoardIntroduction/#_3","title":"\u6269\u5c55\u5f15\u811a\u5b9a\u4e49","text":""},{"location":"DongshanPi-Seven/01-BoardIntroduction/#_4","title":"\u914d\u5957\u9879\u76ee\u5e95\u677f","text":""},{"location":"DongshanPi-Seven/02-SupportingResources/","title":"\u6240\u6709\u914d\u5957\u8d44\u6e90","text":""},{"location":"DongshanPi-Seven/02-SupportingResources/#linux","title":"Linux\u5e94\u7528&amp;\u9879\u76ee\u5f00\u53d1","text":"<p>\u76ee\u524d\u5e94\u7528\u5f00\u53d1\u5305\u542b:</p> <ul> <li>LVGL\u754c\u9762\u5f00\u53d1\u7cfb\u7edf\u5957\u4ef6\u3002</li> <li>Qt\u754c\u9762\u5f00\u53d1\u7cfb\u7edf\u5957\u4ef6\u3002</li> <li>MQTT\u7269\u8054\u7f51\u5f00\u53d1\u7cfb\u7edf\u5957\u4ef6\u3002</li> <li>CAN\u534f\u8bae\u5f00\u53d1\u5957\u4ef6\u3002</li> <li>V4L2\u591a\u5a92\u4f53\u5f00\u53d1\u5957\u4ef6\u3002</li> <li>ALSA\u97f3\u9891\u5f00\u53d1\u5957\u4ef6\u3002</li> </ul>"},{"location":"DongshanPi-Seven/02-SupportingResources/#linux_1","title":"Linux\u9a71\u52a8&amp;\u7cfb\u7edf\u5f00\u53d1","text":"<p>\u76ee\u524d\u5df2\u6709\uff1a</p> <ul> <li>\u9488\u5bf9\u4e8estm32mp157\u7684\u5168\u7cfb\u5217\u9a71\u52a8\u5927\u5168<ul> <li>\u8be6\u7ec6\u7684\u89c6\u9891\u5730\u5740</li> </ul> </li> <li>\u9488\u5bf9\u4e8estm32mp157\u7684 \u9e3f\u8499 lite-os \u7cfb\u7edf\u5f00\u53d1\u3002<ul> <li>\u8be6\u7ec6\u7684\u89c6\u9891\u5730\u5740</li> </ul> </li> <li>\u9488\u5bf9\u4e8estm32mp157\u7684 RT-Smart\u7cfb\u7edf\u5f00\u53d1\u89c6\u9891\u3002<ul> <li>\u8be6\u7ec6\u7684\u89c6\u9891\u5730\u5740</li> </ul> </li> </ul>"},{"location":"DongshanPi-Seven/02-SupportingResources/#_2","title":"\u914d\u5957\u7684\u6269\u5c55\u786c\u4ef6","text":"<ul> <li>\u914d\u5957\u7684\u663e\u793a\u5c4f\u5e55</li> </ul>"},{"location":"DongshanPi-Seven/02-SupportingResources/#_3","title":"\u4e13\u95e8\u5e95\u677f","text":""},{"location":"DongshanPi-Seven/02-SupportingResources/#_4","title":"\u4e13\u95e8\u6a21\u5757","text":""},{"location":"DongshanPi-Seven/03-QuickStart/","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":"<p>\u5982\u679c\u60a8\u611f\u89c9\u8ddf\u7740\u6587\u6863\u4e0d\u77e5\u9053\u600e\u4e48\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6211\u4eec\u63d0\u524d\u5f55\u5236\u597d\u7684\u624b\u628a\u624b\u6559\u5b66\u89c6\u9891\u3002</p>"},{"location":"DongshanPi-Seven/03-QuickStart/#_2","title":"\u4e0a\u7535\u542f\u52a8\u7cfb\u7edf","text":""},{"location":"DongshanPi-Seven/03-QuickStart/#1","title":"1. \u8fde\u63a5\u4e32\u53e3\u7ebf","text":"<p>\u5c06\u914d\u5957\u7684TypeC\u7ebf\u4e00\u6bb5\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\u7684\u4e32\u53e3/\u4f9b\u7535\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\u677f\u8f7d\u7684\u7ea2\u8272\u7535\u6e90\u706f\u4f1a\u4eae\u8d77\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5b89\u88c5\u4e32\u53e3\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u52a8\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u6765\u81ea\u52a8\u5b89\u88c5\u3002 * \u5bf9\u4e8eWindows\u7cfb\u7edf \u6b64\u65f6Windows\u8bbe\u5907\u7ba1\u7406\u5668 \u5728 \u7aef\u53e3(COM\u548cLPT) \u5904\u4f1a\u591a\u51fa\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u4e00\u822c\u662f\u4ee5 <code>USB-Enhanced-SERIAL CH9102</code>\u5f00\u5934\uff0c\u60a8\u9700\u8981\u7559\u610f\u4e00\u4e0b\u540e\u9762\u7684\u5177\u4f53COM\u7f16\u53f7\uff0c\u7528\u4e8e\u540e\u7eed\u8fde\u63a5\u4f7f\u7528\u3002</p> <p> \u5982\u4e0a\u56fe\uff0cCOM\u53f7\u662f96\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8fde\u63a5\u6240\u4f7f\u7528\u7684\u4e32\u53e3\u53f7\u5c31\u662f96\u3002</p> <ul> <li>\u5bf9\u4e8eLinux\u7cfb\u7edf \u53ef\u4ee5\u67e5\u770b\u662f\u5426\u591a\u51fa\u4e00\u4e2a/dev/tty&lt;&gt; \u8bbe\u5907,\u4e00\u822c\u60c5\u51b5\u8bbe\u5907\u8282\u70b9\u4e3a /dev/ttyACM0  \u3002 </li> </ul>"},{"location":"DongshanPi-Seven/03-QuickStart/#2","title":"2. \u6253\u5f00\u4e32\u53e3\u63a7\u5236\u53f0","text":""},{"location":"DongshanPi-Seven/03-QuickStart/#_3","title":"\u83b7\u53d6\u4e32\u53e3\u5de5\u5177","text":"<p>\u4f7f\u7528Putty\u6216\u8005MobaXterm\u7b49\u4e32\u53e3\u5de5\u5177\u6765\u5f00\u53d1\u677f\u8bbe\u5907\u3002</p> <ul> <li>\u5176\u4e2dputty\u5de5\u5177\u53ef\u4ee5\u8bbf\u95ee\u9875\u9762  https://www.chiark.greenend.org.uk/~sgtatham/putty/  \u6765\u83b7\u53d6\u3002</li> <li>MobaXterm\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u9875\u9762 https://mobaxterm.mobatek.net/ \u83b7\u53d6 (\u63a8\u8350\u4f7f\u7528)\u3002</li> </ul>"},{"location":"DongshanPi-Seven/03-QuickStart/#putty","title":"\u4f7f\u7528putty\u767b\u5f55\u4e32\u53e3","text":""},{"location":"DongshanPi-Seven/03-QuickStart/#mobaxterm","title":"\u4f7f\u7528Mobaxterm\u767b\u5f55\u4e32\u53e3","text":"<p>\u6253\u5f00MobaXterm\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u201cSession\u201d\uff0c\u5728\u5f39\u51fa\u7684\u754c\u9762\u9009\u4e2d\u201cSerial\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u9009\u62e9\u7aef\u53e3\u53f7\uff08\u524d\u9762\u8bbe\u5907\u7ba1\u7406\u5668\u663e\u793a\u7684\u7aef\u53e3\u53f7COM21\uff09\u3001\u6ce2\u7279\u7387\uff08Speed 115200\uff09\u3001\u6d41\u63a7\uff08Flow Control: none\uff09,\u6700\u540e\u70b9\u51fb\u201cOK\u201d\u5373\u53ef\u3002\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6ce8\u610f\uff1a\u6d41\u63a7\uff08Flow Control\uff09\u4e00\u5b9a\u8981\u9009\u62e9none\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u5728MobaXterm\u4e2d\u5411\u4e32\u53e3\u8f93\u5165\u6570\u636e</p> <p></p>"},{"location":"DongshanPi-Seven/03-QuickStart/#3-shell","title":"3. \u8fdb\u5165\u7cfb\u7edfshell","text":"<p>\u4f7f\u7528\u4e32\u53e3\u5de5\u5177\u6210\u529f\u6253\u5f00\u4e32\u53e3\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165 <code>root</code>\u7528\u6237\u540d\u6309\u4e0b Enter \u952e\u5c31\u53ef\u4ee5\u76f4\u63a5\u767b\u5f55\u7cfb\u7edf\u4e86\uff0c\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u6309\u4e0b\u677f\u5b50\u4e0a\u7684 <code>Reset</code>\u590d\u4f4d\u952e\uff0c\u6765\u67e5\u770b\u5b8c\u6574\u7684\u7cfb\u7edf\u4fe1\u606f\u3002</p> <p></p>"},{"location":"DongshanPi-Seven/03-QuickStart/#_4","title":"\u6269\u5c55\u786c\u4ef6","text":""},{"location":"DongshanPi-Seven/03-QuickStart/#_5","title":"\u8fde\u63a5\u6a21\u5757","text":""},{"location":"DongshanPi-Seven/03-QuickStart/#7","title":"\u8fde\u63a57\u5bf8\u5c4f\u6a21\u5757","text":"<ul> <li> <p>\u8fde\u63a5\u89c6\u9891\u6559\u7a0b</p> </li> <li> <p>\u6a21\u5757\u4ecb\u7ecd </p> </li> </ul>"},{"location":"DongshanPi-Seven/03-QuickStart/#_6","title":"\u8fde\u63a5\u5e95\u677f","text":"<ul> <li> <p>\u8fde\u63a5\u89c6\u9891\u6559\u7a0b</p> </li> <li> <p>\u5e95\u677f\u4ecb\u7ecd</p> </li> </ul>"},{"location":"DongshanPi-Seven/03-QuickStart/#_7","title":"\u7b80\u8ff0\u5f00\u53d1\u6d41\u7a0b","text":""},{"location":"DongshanPi-Seven/03-QuickStart/#_8","title":"\u8c03\u8bd5\u73af\u5883\u6982\u8ff0","text":""},{"location":"DongshanPi-Seven/04-SomeQustion/","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"DongshanPi-Seven/04-SomeQustion/#_2","title":"\u65e0\u4e32\u53e3\u8f93\u51fa\u4fe1\u606f","text":"<ul> <li>\u68c0\u67e5\u662f\u5426\u8fde\u63a5\u6210\u529f \u7535\u8111\u662f\u5426\u5b89\u88c5\u4e32\u53e3\u9a71\u52a8</li> <li>\u68c0\u67e5\u4e32\u53e3\u6ce2\u7279\u7387\u662f\u5426\u8bbe\u7f6e\u6b63\u786e</li> <li>\u68c0\u67e5\u4e32\u53e3\u662f\u5426\u88ab\u5176\u5b83\u5de5\u5177\u62e6\u622a</li> </ul>"},{"location":"DongshanPi-Seven/04-SomeQustion/#_3","title":"\u65e0\u6cd5\u70e7\u5199\u7cfb\u7edf","text":""},{"location":"DongshanPi-Seven/04-SomeQustion/#_4","title":"\u5c4f\u5e55\u65e0\u4efb\u4f55\u663e\u793a","text":"<ul> <li>\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u7a33\u5b9a\u3002</li> <li>\u67e5\u770b\u5c4f\u5e55\u80cc\u5149\u662f\u5426\u4eae\u8d77\u3002</li> <li>\u68c0\u67e5\u662f\u5426\u6709\u64cd\u4f5c\u5c4f\u5e55\u8fdb\u884c\u663e\u793a\u3002</li> </ul>"},{"location":"DongshanPi-Seven/04.FlashDefaultSystem/","title":"\u70e7\u5199&amp;\u6062\u590d\u7cfb\u7edf","text":"<ul> <li>\u53c2\u8003\u64cd\u4f5c\u6f14\u793a\u89c6\u9891\u6559\u7a0b</li> </ul>"},{"location":"DongshanPi-Seven/04.FlashDefaultSystem/#_2","title":"\u70e7\u5199\u9ed8\u8ba4\u7cfb\u7edf","text":"<ul> <li>\u542f\u52a8\u65b9\u5f0f\u62e8\u7801\u5f00\u5173\u9009\u62e9     \u677f\u5b50\u4e0a\u7684\u7ea2\u8272\u62e8\u7801\u5f00\u5173\u7528\u6765\u8bbe\u7f6e\u542f\u52a8\u65b9\u5f0f\uff0c\u652f\u6301\u8fd9\u56db\u79cd\u65b9\u5f0f\uff1aEMMC\u542f\u52a8\u3001SD\u5361\u542f\u52a8\u3001USB\u70e7\u5199\u4ee5\u53caM4\uff08debug\uff09\u6a21\u5f0f\u3002 \u677f\u5b50\u80cc\u540e\u753b\u6709\u4e00\u4e2a\u8868\u683c\uff0c\u8868\u793a\u8fd9\u56db\u79cd\u65b9\u5f0f\u5982\u4f55\u8bbe\u7f6e\u3002\u8868\u683c\u4e2dBOOT0\u5bf9\u5e94\u5f00\u51731\uff0cBOOT1\u5bf9\u5e94\u5f00\u51732\uff0cBOOT2\u5bf9\u5e94\u5f00\u51733\uff0c\u5982\u4e0b\uff1a</li> </ul> BOOT BOOT0 BOOT1 BOOT2 EMMC OFF ON OFF SD ON OFF ON USB OFF OFF OFF M4(debug) OFF OFF ON"},{"location":"DongshanPi-Seven/04.FlashDefaultSystem/#_3","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ul> <li> <p>\u83b7\u53d6\u70e7\u5199\u5de5\u5177\uff1a ST\u516c\u53f8\u7ed9stm32mp157\u7cfb\u5217\u5f00\u53d1\u677f\u63d0\u4f9b\u4e86\u70e7\u5199\u5de5\u5177\uff1aSTM32CubeProgrammer\u3002\u8fd9\u4e2a\u5de5\u5177\u4f9d\u8d56\u4e8ejava jdk,\u6240\u4ee5\u6211\u4eec\u5728\u5b89\u88c5\u4e4b\u524d\u8981\u5148\u5b89\u88c5java\u73af\u5883\u3002 \u70e7\u5199\u5de5\u5177\u5b98\u65b9\u9875\u9762 https://www.st.com/zh/development-tools/stm32cubeprog.html  JDK\u5b98\u65b9\u4e0b\u8f7d\u9875\u9762\uff1ahttps://www.oracle.com/java/technologies/downloads/#jdk17-windows  \u5982\u679c\u60a8\u65e0\u6cd5\u8bbf\u95ee\u5b98\u7f51\u4e0b\u8f7d\uff0c\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u63d0\u524d\u5e2e\u60a8\u4e0b\u8f7d\u597d\u7684\u5907\u7528\u6587\u4ef6\u3002</p> <ul> <li>STM32CubeProgrammer\u70e7\u5199\u5de5\u5177 https://cowtransfer.com/s/b44f53f62b7340</li> <li>JAVA JDK\u5b89\u88c5\u5305\uff1ahttps://cowtransfer.com/s/9eb0074aa7c443</li> </ul> </li> <li> <p>\u5b89\u88c5\u70e7\u5199\u5de5\u5177:    \u4e0b\u8f7d\u5b8c\u6210\u540e\u6211\u4eec\u9700\u8981\u5148\u5b89\u88c5 java jdk\u73af\u5883\uff0c\u5b89\u88c5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u5f00\u542f\u4e00\u4e2a cmd \u63a7\u5236\u53f0\uff0c\u8f93\u5165 <code>java -version</code> \u6765\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0c\u4e4b\u540e\u6211\u4eec\u7ee7\u7eed\u89e3\u538b\u7f29\u5b89\u88c5 STM32CubeProgrammer \uff0c\u5b89\u88c5\u65f6\u53ea\u9700\u6309\u7167\u9ed8\u8ba4\u914d\u7f6e\u5b89\u88c5\u5373\u53ef\uff0c\u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\uff0c\u5b83\u9ed8\u8ba4\u4f1a\u5728\u684c\u9762\u6709\u4e00\u4e2a<code>STM32CubeProgrammer</code>\u56fe\u6807\uff0c\u53ef\u4ee5\u76f4\u63a5\u53cc\u51fb\u6253\u5f00\uff0c\u53c2\u8003\u4e0b\u9762\u6b65\u9aa4\u8fdb\u884c\u70e7\u5199\u66f4\u65b0\u3002 </p> </li> <li> <p>\u83b7\u53d6\u8981\u70e7\u5f55\u7684\u7cfb\u7edf\u955c\u50cf:    \u7531\u4e8e\u6211\u4eec\u7684\u914d\u5957\u955c\u50cf\u6bd4\u8f83\u591a\uff0c\u8fd9\u91cc\u4ee5 <code>dongshanpiseven_core_defconfig.tar.gz</code>\u8fd9\u4e2a\u914d\u7f6e\u8fdb\u884c\u8bf4\u660e\u6f14\u793a\uff0c\u9996\u5148\u6211\u4eec\u5148\u83b7\u53d6\u5b8c\u6574\u7684\u955c\u50cf\u3002</p> <ul> <li>\u81ea\u884c\u83b7\u53d6\uff1a\u6253\u5f00 https://github.com/DongshanPI/buildroot-external-dongshanpiseven/releases/ \u9875\u9762\u70b9\u51fb\u6700\u65b0\u7684\u7248\u672c\uff0c\u627e\u5230\u540d\u4e3a <code>dongshanpiseven_core_defconfig.tar.gz</code> \u7684\u538b\u7f29\u5305\uff0c\u70b9\u51fb\u4e0b\u8f7d\u3002</li> <li>\u5907\u7528\u4e0b\u8f7d\u5730\u5740: https://github.91chi.fun/https://github.com//DongshanPI/buildroot-external-dongshanpiseven/releases/download/v0.3.1-beta/dongshanpiseven_core_defconfig.tar.gz</li> </ul> </li> </ul>"},{"location":"DongshanPi-Seven/04.FlashDefaultSystem/#_4","title":"\u70e7\u5199\u66f4\u65b0","text":"<p>1.\u8fde\u63a5USB OTG\u70e7\u5199\u7ebf\uff1a    \u5c06\u5f00\u53d1\u677f\u914d\u5957\u7684 type-C \u6570\u636e\u7ebf\u53e6\u4e00\u6839\u8fde\u63a5\u81f3\u5f00\u53d1\u677f OTG\u63a5\u53e3\u5904\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\u3002</p> <p>2.\u8bbe\u7f6e\u62e8\u7801\u5f00\u5173\u542f\u52a8\u65b9\u5f0f\u4e3a USB \u70e7\u5199\u6a21\u5f0f:    \u8bbe\u7f6e\u5f00\u53d1\u677f\u62e8\u7801\u5f00\u5173\u542f\u52a8\u65b9\u5f0f <code>boot0 boot1 boot2</code> \u4e09\u4e2a\u62e8\u7801\u5168\u90fd\u62e8\u81f3<code>1 2 3</code>\u6570\u5b57\u8fd9\u4fa7\u3002    \u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u6309\u4e0b<code>Reset</code>\u590d\u4f4d\u952e \u91cd\u542f\u5f00\u53d1\u677f\u3002</p> <p>3.\u8fde\u63a5\u8bbe\u5907\uff1a    \u4e0a\u8ff0\u4e24\u6b65\u5168\u90fd\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230 \u7535\u8111\u8bbe\u5907\u7ba1\u7406\u5668 \u901a\u7528\u4e32\u884c\u603b\u7ebf\u8bbe\u5907 \u4f1a\u591a\u51fa\u4e00\u4e2a\u540d\u4e3a  <code>DFU in HS Mode @Device ID /0x500, @Revision ID /0x0000</code> \u7684\u8bbe\u5907\uff0c\u6709\u8fd9\u4e2a\u8bbe\u5907\u5c31\u8868\u660e\u8fde\u63a5\u6210\u529f\u3002 </p>"},{"location":"DongshanPi-Seven/04.FlashDefaultSystem/#emmc","title":"\u70e7\u5199EMMC","text":"<p>\u6253\u5f00\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 STM32CubeProgrammer \u70e7\u5199\u5de5\u5177,\u6253\u5f00\u540e\u5982\u4e0b\u56fe\u6240\u793a,\u9700\u8981\u53c2\u8003\u4e0b\u56fe\u6b65\u9aa4\u6765\u8fde\u63a5\u8bbe\u5907\u3002</p> <p></p> <p>\u8fde\u63a5\u8bbe\u5907\u6210\u529f\u540e\uff0c\u70b9\u51fb \u6b63\u4e0a\u6a2a\u680f\u7684  <code>Open File</code>\u6309\u94ae\uff0c\u6765\u52a0\u8f7d\u9700\u8981\u70e7\u5199\u4f7f\u7528\u7684 tsv \u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8fdb\u5165\u5230\u5df2\u7ecf\u89e3\u538b\u7f29\u8fc7\u7684<code>dongshanpiseven_core_defconfig.tar.gz</code>  \u76ee\u5f55\uff0c\u4e00\u76f4\u5411\u4e0b\u8fdb\u5165\u5230  <code>output/images</code>\u76ee\u5f55\u4e0b\uff0c\u4e4b\u540e\u6839\u636e\u60a8\u8981\u70e7\u5199\u7684\u8bbe\u5907\uff0c\u9009\u62e9\u5408\u9002\u7684 **\u7cfb\u7edf\u914d\u7f6e**\u6587\u4ef6\u3002 \u4e0b\u56fe\u6f14\u793a\u4f7f\u7528\u7684\u662f \u70e7\u5199emmc\u7cfb\u7edf\uff0c\u6240\u4ee5\u9009\u4e2d <code>emmc_systemall.tsv</code> \u70e7\u5199\u914d\u7f6e\u6587\u4ef6\u3002 </p> <p>\u52a0\u8f7d\u5b8c\u6210\u70e7\u5199\u7684\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u9700\u8981\u7ee7\u7eed\u9009\u4e2d\u60a8\u7684\u955c\u50cf\u5b58\u653e\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u955c\u50cf\u6240\u5728\u4f4d\u7f6e\u4e5f\u662f\u5728\u89e3\u538b\u8fc7\u7684 <code>dongshanpiseven_core_defconfig/output/images</code> \u76ee\u5f55\u4e0b\uff0c\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u9009\u4e2d\u5373\u53ef\uff0c\u914d\u7f6e\u6210\u529f\u540e\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u70b9\u51fb Download \u8fdb\u884c\u4e0b\u8f7d\uff0c\u7b49\u5f85\u4e0b\u8f7d\u5b8c\u6210\u3002 </p> <p>\u4e0b\u8f7d\u5b8c\u6210\u7684\u793a\u610f\u56fe\u5982\u4e0b\u6240\u793a\uff1a </p> <p>\u63a5\u4e0b\u6765\uff0c\u5c06\u5f00\u53d1\u677f\u8fde\u63a5\u81f3 <code>OTG</code> \u7684 Type-C \u7ebf\u62d4\u4e0b\u6765\uff0c\u8bbe\u7f6e\u542f\u52a8\u65b9\u5f0f\u4e3a  <code>boot2</code> \u62e8\u7801\u62e8\u81f3<code>on</code> \u5b57\u6bcd\u8fd9\u4fa7 <code>boot1 boot3</code>\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f9d\u65e7\u5728<code>1 2 3</code>\u6570\u5b57\u8fd9\u4fa7\u3002    \u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u6309\u4e0b<code>Reset</code>\u590d\u4f4d\u952e \u91cd\u542f\u5f00\u53d1\u677f\u3002</p>"},{"location":"DongshanPi-Seven/04.FlashDefaultSystem/#tf","title":"\u70e7\u5199TF\u5361","text":"<p>\u9700\u8981\u5148\u5c06 sdcard.img.gz \u8fdb\u884c\u89e3\u538b\u7f29\uff0c\u89e3\u538b\u7f29\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a<code>sdcard.img</code>\u6587\u4ef6\u3002</p> <ul> <li> <p>ST\u70e7\u5199\u5de5\u5177\u70e7\u5199:     \u4e4b\u540e\u60a8\u53ef\u4ee5\u53c2\u8003\u4e0a\u8ff0\u70e7\u5199 emmc \u9009\u62e9\u914d\u7f6e\u6587\u4ef6 \u9009\u62e9\u4e3a<code>sdcard_systemall.tsv</code>\uff0c\u955c\u50cf\u6240\u5728\u8def\u5f84\u4f9d\u65e7\u662f \u5728\u89e3\u538b\u8fc7\u7684 <code>dongshanpiseven_core_defconfig/output/images</code> \u76ee\u5f55\u4e0b\uff0c\u6700\u540e\u70b9\u51fb  Download \u8fdb\u884c\u4e0b\u8f7d\uff0c\u7b49\u5f85\u4e0b\u8f7d\u5b8c\u6210\u5373\u53ef\u3002     \u70e7\u5199\u5b8c\u6210\u540e\u8bbe\u7f6e\u542f\u52a8\u65b9\u5f0f\uff0c\u8bbe\u7f6e\u542f\u52a8\u65b9\u5f0f\u4e3a  <code>boot2</code> \u62e8\u7801\u62e8\u81f3<code>1 2 3</code> \u6570\u5b57\u8fd9\u4fa7 <code>boot1 boot3</code>\u62e8\u81f3<code>on</code>\u5b57\u6bcd\u8fd9\u4fa7\u3002</p> </li> <li> <p>wind32diskimage\u70e7\u5199     \u60a8\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 wind32diskimage \u5de5\u5177\u914d\u5408\u8bfb\u5361\u5668\uff0c\u8fdb\u884c\u76f4\u63a5\u70e7\u5199\uff0c\u70e7\u5199\u6210\u529f\u540e\u63d2\u56de\u5f00\u53d1\u677f\u5373\u53ef\u3002     \u70e7\u5199\u5b8c\u6210\u540e\u8bbe\u7f6e\u542f\u52a8\u65b9\u5f0f\uff0c\u8bbe\u7f6e\u542f\u52a8\u65b9\u5f0f\u4e3a  <code>boot2</code> \u62e8\u7801\u62e8\u81f3<code>1 2 3</code> \u6570\u5b57\u8fd9\u4fa7 <code>boot1 boot3</code>\u62e8\u81f3<code>on</code>\u5b57\u6bcd\u8fd9\u4fa7\u3002</p> </li> </ul>"},{"location":"DongshanPi-Seven/05-ALSA_Developmen/","title":"LVGL\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-CAN_Developmen/","title":"LVGL\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-D-BUS_Developmen/","title":"LVGL\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/","title":"LVGL\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#_1","title":"\u5fc5\u5907\u786c\u4ef6","text":"<ul> <li>\u4e00\u4e2a7\u5bf8\u7684RGB\u663e\u793a\u5c4f</li> <li>\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884cubuntu\u7cfb\u7edf\u7684PC\u7535\u8111</li> <li>ubuntu\u7535\u8111\u53ef\u4ee5\u548c\u5f00\u53d1\u677f\u4e4b\u95f4\u7f51\u7edc\u4e92\u901a</li> </ul>"},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#_2","title":"\u83b7\u53d6\u914d\u5957\u8d44\u6e90","text":"<p>\u83b7\u53d6lvgl\u5f00\u53d1\u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5668\u4ee5\u53ca\u7cfb\u7edf\u955c\u50cf\u3002</p> <ul> <li>\u81ea\u884c\u83b7\u53d6\uff1a\u6253\u5f00 https://github.com/DongshanPI/buildroot-external-dongshanpiseven/releases/ \u9875\u9762\u70b9\u51fb\u6700\u65b0\u7684\u7248\u672c\uff0c\u627e\u5230\u540d\u4e3a <code>dongshanpiseven_standard-lvgl_defconfig.tar.gz</code> \u7684\u538b\u7f29\u5305\uff0c\u70b9\u51fb\u4e0b\u8f7d\u3002</li> <li>\u5907\u7528\u7ad9\u70b9:  https://github.91chi.fun/https://github.com//DongshanPI/buildroot-external-dongshanpiseven/releases/download/v0.3.1-beta/dongshanpiseven_standard-lvgl_defconfig.tar.gz</li> </ul> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u4f7f\u7528\u89e3\u538b\u7f29\u5de5\u5177\u8fdb\u884c\u89e3\u538b\u7f29\uff0c\u4e4b\u540e\u4f7f\u7528\u70e7\u5199\u5de5\u5177\u70e7\u5199\u7cfb\u7edf\u955c\u50cf\u81f3\u5f00\u53d1\u677f\u5185\uff0c\u6700\u540e\u5e76\u5c06\u914d\u5957\u7684<code>arm-buildroot-linux-gnueabihf_sdk-buildroot.tar.gz</code> \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u62f7\u8d1d\u81f3 Ubuntu\u7cfb\u7edf\u5185\uff0c\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#_3","title":"\u70e7\u5199\u7cfb\u7edf\u955c\u50cf","text":""},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#emmc","title":"\u70e7\u5199\u955c\u50cf\u81f3EMMC","text":"<p>\u53c2\u8003\u5de6\u4fa7 \u70e7\u5199&amp;\u6062\u590d\u7cfb\u7edf \u7ae0\u8282\u5c06\u4e0b\u8f7d\u597d\u7684\u955c\u50cf\u6587\u4ef6\u70e7\u5199\u81f3 EMMC\u5185\u3002 \u7b49\u5f85\u70e7\u5199\u5b8c\u6210\u540e\u542f\u52a8\u5373\u53ef\u3002</p>"},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#sdcard","title":"\u70e7\u5199\u955c\u50cf\u81f3SDcard","text":"<p>\u4f7f\u7528wind32diskimage \u5de5\u5177\u8bb2 sdcard.img\u70e7\u5f55\u8fdbtf\u5361\u5185\uff0c\u5f00\u53d1\u677f\u8bbe\u7f6e\u4e3atf\u5361\u542f\u52a8\u6a21\u5f0f\uff0c\u542f\u52a8\u5f00\u53d1\u677f\u3002</p>"},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#lvgl_1","title":"\u914d\u7f6eLVGL\u5f00\u53d1\u73af\u5883","text":"<p>\u8fdb\u5165ubuntu\u7cfb\u7edf\u5185\uff0c\u5148\u5c06 arm-buildroot-linux-musleabihf_sdk-buildroot.tar.gz  \u62f7\u8d1d\u5230\u7cfb\u7edf\u5185\uff0c\u4e4b\u540e\u6267\u884c<code>tar -xvf arm-buildroot-linux-musleabihf_sdk-buildroot.tar.gz -C ~</code>\u8fdb\u884c\u89e3\u538b\u7f29\uff0c\u4e4b\u540e\u8fdb\u5165 <code>arm-buildroot-linux-musleabihf_sdk-buildroot.tar.gz/bin</code>\u4f7f\u7528   <code>pwd</code>\u547d\u4ee4\uff0c\u5c06\u83b7\u53d6\u5230\u7684\u7edd\u5bf9\u8def\u5f84\u589e\u52a0\u5230\u7cfb\u7edf PATH \u73af\u5883\u53d8\u91cf\u91cc\uff0c\u6211\u4eec\u63a8\u8350\u8bbe\u7f6e\u5230 <code>~/.bashrc</code> \u3002 * \u5047\u5982\u6211\u8fd9\u91cc\u5230\u4e86 <code>/home/book</code>\u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u5b8c\u6574\u7684\u8def\u5f84\u662f <code>/home/book/arm-buildroot-linux-musleabihf_sdk-buildroot/bin</code> \u4e4b\u540e\u5c31\u53ef\u4ee5\u5728 ~/.bashrc \u884c\u5c3e\u589e\u52a0  <code>export PATH=$PATH:/home/book/arm-buildroot-linux-musleabihf_sdk-buildroot/bin</code> \u8bbe\u7f6e\u5b8c\u6210\u540e \u5c31\u53ef\u4ee5\u4f7f\u7528 source ~/.bashrc \u547d\u4ee4\u4f7f\u5176\u751f\u6548\u3002</p> <p>\u6ce8\u610f\uff1a\u4e00\u5b9a\u4e0d\u8981\u89e3\u538b\u7f29\u5230windows\u6302\u8f7d\u7684\u865a\u62df\u7f51\u7edc\u76ee\u5f55\u5185\uff0c\u7531\u4e8e\u6587\u4ef6\u7c7b\u578b\u7b49\u95ee\u9898\uff0c\u4f1a\u5bfc\u81f4\u540e\u7eed\u51fa\u73b0\u5f88\u591a\u4e0d\u53ef\u9884\u6d4b\u7684\u95ee\u9898\u3002 \u8bbe\u7f6e\u6210\u529f\u540e \u53ef\u4ee5\u6267\u884c <code>arm-buildroot-linux-musleabihf-gcc -v</code> \u6709\u7248\u672c\u8f93\u51fa \u5373\u8868\u793a\u914d\u7f6e\u6210\u529f\u3002</p>"},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#lvgl_2","title":"\u8fd0\u884c\u7b2c\u4e00\u4e2aLVGL\u7a0b\u5e8f","text":""},{"location":"DongshanPi-Seven/05-LVGL_GuiDevelopment/#_4","title":"\u95ee\u9898\u53cd\u9988\u4e0e\u5efa\u8bae","text":"<ul> <li>\u8bf7\u5728\u8fd9\u4e2a\u9875\u9762\u4e0b\u9762\u7559\u8a00 https://github.com/DongshanPI/buildroot-external-dongshanpiseven/discussions/2</li> </ul>"},{"location":"DongshanPi-Seven/05-MQTT_Development/","title":"MQTT\u7269\u8054\u7f51\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-MQTT_Development/#_1","title":"\u5fc5\u5907\u786c\u4ef6","text":"<ul> <li>\u6709Internet\u7f51\u7edc</li> <li>\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884cubuntu\u7cfb\u7edf\u7684PC\u7535\u8111</li> <li>ubuntu\u7535\u8111\u53ef\u4ee5\u548c\u5f00\u53d1\u677f\u4e4b\u95f4\u7f51\u7edc\u4e92\u901a</li> </ul>"},{"location":"DongshanPi-Seven/05-MQTT_Development/#_2","title":"\u83b7\u53d6\u914d\u5957\u8d44\u6e90","text":"<p>\u83b7\u53d6Mqtt\u5f00\u53d1\u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5668\u4ee5\u53ca\u7cfb\u7edf\u955c\u50cf\u3002</p> <ul> <li>\u81ea\u884c\u83b7\u53d6\uff1a\u6253\u5f00 https://github.com/DongshanPI/buildroot-external-dongshanpiseven/releases/ \u9875\u9762\u70b9\u51fb\u6700\u65b0\u7684\u7248\u672c\uff0c\u627e\u5230\u540d\u4e3a <code>dongshanpiseven_standard-aiot_defconfig.tar.gz</code> \u7684\u538b\u7f29\u5305\uff0c\u70b9\u51fb\u4e0b\u8f7d\u3002</li> <li>\u5907\u7528\u7ad9\u70b9:  https://github.91chi.fun//https://github.com//DongshanPI/buildroot-external-dongshanpiseven/releases/download/v0.1.1-beta.1/dongshanpiseven_standard-aiot_defconfig.tar.gz</li> </ul> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u4f7f\u7528\u89e3\u538b\u7f29\u5de5\u5177\u8fdb\u884c\u89e3\u538b\u7f29\uff0c\u4e4b\u540e\u4f7f\u7528\u70e7\u5199\u5de5\u5177\u70e7\u5199\u7cfb\u7edf\u955c\u50cf\u81f3\u5f00\u53d1\u677f\u5185\uff0c\u6700\u540e\u5e76\u5c06\u914d\u5957\u7684<code>arm-buildroot-linux-gnueabihf_sdk-buildroot.tar.gz</code> \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u62f7\u8d1d\u81f3 Ubuntu\u7cfb\u7edf\u5185\uff0c\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"DongshanPi-Seven/05-MQTT_Development/#_3","title":"\u70e7\u5199\u7cfb\u7edf\u955c\u50cf","text":""},{"location":"DongshanPi-Seven/05-MQTT_Development/#emmc","title":"\u70e7\u5199\u955c\u50cf\u81f3EMMC","text":""},{"location":"DongshanPi-Seven/05-MQTT_Development/#sdcard","title":"\u70e7\u5199\u955c\u50cf\u81f3SDcard","text":""},{"location":"DongshanPi-Seven/05-MQTT_Development/#mqtt_1","title":"\u914d\u7f6eMQTT\u5f00\u53d1\u73af\u5883","text":""},{"location":"DongshanPi-Seven/05-MQTT_Development/#mqtt_2","title":"\u8fd0\u884c\u7b2c\u4e00\u4e2aMQTT\u7a0b\u5e8f","text":""},{"location":"DongshanPi-Seven/05-MQTT_Development/#_4","title":"\u95ee\u9898\u53cd\u9988\u4e0e\u5efa\u8bae","text":"<ul> <li>\u8bf7\u5728\u8fd9\u4e2a\u9875\u9762\u4e0b\u9762\u7559\u8a00 https://github.com/DongshanPI/buildroot-external-dongshanpiseven/discussions/2</li> </ul>"},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/","title":"QT\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#_1","title":"\u5fc5\u5907\u786c\u4ef6","text":"<ul> <li>\u4e00\u4e2a7\u5bf8\u7684RGB\u663e\u793a\u5c4f</li> <li>\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884cubuntu\u7cfb\u7edf\u7684PC\u7535\u8111</li> <li>ubuntu\u7535\u8111\u53ef\u4ee5\u548c\u5f00\u53d1\u677f\u4e4b\u95f4\u7f51\u7edc\u4e92\u901a</li> </ul>"},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#_2","title":"\u83b7\u53d6\u914d\u5957\u8d44\u6e90","text":"<p>\u83b7\u53d6QT\u5f00\u53d1\u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5668\u4ee5\u53ca\u7cfb\u7edf\u955c\u50cf\u3002</p> <ul> <li>\u81ea\u884c\u83b7\u53d6\uff1a\u6253\u5f00 https://github.com/DongshanPI/buildroot-external-dongshanpiseven/releases/ \u9875\u9762\u70b9\u51fb\u6700\u65b0\u7684\u7248\u672c\uff0c\u627e\u5230\u540d\u4e3a <code>dongshanpiseven_full-qt_defconfig.tar.gz</code> \u7684\u538b\u7f29\u5305\uff0c\u70b9\u51fb\u4e0b\u8f7d\u3002</li> <li>\u5907\u7528\u7ad9\u70b9: https://github.91chi.fun/https://github.com//DongshanPI/buildroot-external-dongshanpiseven/releases/download/v0.3.1-beta/dongshanpiseven_full-qt_defconfig.tar.gz</li> </ul> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u4f7f\u7528\u89e3\u538b\u7f29\u5de5\u5177\u8fdb\u884c\u89e3\u538b\u7f29\uff0c\u4e4b\u540e\u4f7f\u7528\u70e7\u5199\u5de5\u5177\u70e7\u5199\u7cfb\u7edf\u955c\u50cf\u81f3\u5f00\u53d1\u677f\u5185\uff0c\u6700\u540e\u5e76\u5c06\u914d\u5957\u7684<code>arm-buildroot-linux-gnueabihf_sdk-buildroot.tar.gz</code> \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u62f7\u8d1d\u81f3 Ubuntu\u7cfb\u7edf\u5185\uff0c\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#_3","title":"\u70e7\u5199\u7cfb\u7edf\u955c\u50cf","text":""},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#emmc","title":"\u70e7\u5199\u955c\u50cf\u81f3EMMC","text":""},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#tf","title":"\u70e7\u5199\u955c\u50cf\u81f3Tf\u5361","text":""},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#qt_1","title":"\u914d\u7f6eQt\u5f00\u53d1\u73af\u5883","text":""},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#qt_2","title":"\u8fd0\u884c\u7b2c\u4e00\u4e2aQt\u7a0b\u5e8f","text":""},{"location":"DongshanPi-Seven/05-QT_GuiDevelopment/#_4","title":"\u95ee\u9898\u53cd\u9988\u4e0e\u5efa\u8bae","text":"<ul> <li>\u8bf7\u5728\u8fd9\u4e2a\u9875\u9762\u4e0b\u9762\u7559\u8a00 https://github.com/DongshanPI/buildroot-external-dongshanpiseven/discussions/3</li> </ul>"},{"location":"DongshanPi-Seven/05-Socket_Development/","title":"LVGL\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-V4L2_Developmen/","title":"LVGL\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/05-Web_Developmen/","title":"LVGL\u754c\u9762\u5f00\u53d1","text":""},{"location":"DongshanPi-Seven/06-GetSourceCode/","title":"\u83b7\u53d6\u914d\u5957sdk\u6e90\u7801","text":"<p>\u5982\u679c\u60a8\u611f\u89c9\u8ddf\u7740\u6587\u6863\u4e0d\u77e5\u9053\u600e\u4e48\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6211\u4eec\u63d0\u524d\u5f55\u5236\u597d\u7684\u624b\u628a\u624b\u6559\u5b66\u89c6\u9891\u3002</p>"},{"location":"DongshanPi-Seven/06-GetSourceCode/#_1","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"DongshanPi-Seven/06-GetSourceCode/#_2","title":"\u73af\u5883\u914d\u7f6e","text":"<p>\u4e3a\u4e86\u4f7f\u7528 Buildroot\uff0c\u60a8\u9700\u8981\u5728\u60a8\u7684\u5de5\u4f5c\u7ad9\u4e0a\u5b89\u88c5 Linux \u53d1\u884c\u7248\u3002 \u4efb\u4f55\u6700\u65b0\u7684 Linux \u53d1\u884c\u7248\uff08Ubuntu\u3001Debian\u3001Fedora\u3001Redhat\u3001OpenSuse \u7b49\uff09\u90fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u4f46\u662f\u4f60\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u5fc5\u8981\u8f6f\u4ef6\u5305\u81f3\u60a8\u7684Linux\u5de5\u4f5c\u7ad9\u624d\u53ef\u4ee5\u4f7f\u7528Buildroot manual System requirements section. \u5bf9\u4e8e Debian/Ubuntu\u53d1\u884c\u7248\u7cfb\u7edf\uff0c\u9700\u8981\u53c2\u8003\u4e0b\u8ff0\u547d\u4ee4\u5b89\u88c5\u5217\u51fa\u6765\u7684\u8f6f\u4ef6\u5305\u3002</p> <pre><code>$ sudo apt install debianutils sed make binutils build-essential gcc g++ bash patch gzip bzip2 perl tar cpio unzip rsync file bc git\n</code></pre>"},{"location":"DongshanPi-Seven/06-GetSourceCode/#_3","title":"\u83b7\u53d6\u4ee3\u7801","text":"<p>\u8fd9\u4e2a <code>BR2_EXTERNAL</code>\u4f1a\u914d\u5408\u7740\u6700\u65b0\u7684LTS\u7248\u672c\u4e00\u8d77\u4f7f\u7528\uff0c\u6240\u4ee5\u7248\u672c\u4f1a\u968f\u7740 \u4e0a\u6e38\u7684\u66f4\u65b0\u800c\u5efa\u7acb\u65b0\u7684\u5206\u652f\u8fdb\u884c\u66f4\u65b0\uff0c\u76ee\u524dBuildroot\u6700\u65b0 <code>BR2_EXTERNAL</code>\u6700\u65b0LTS\u7248\u672c\u662f 2021-02 \u3002</p> <p>\u9996\u5148\u6211\u4eec\u83b7\u53d6 buildroot\u6700\u65b0lts\u7248\u672c\u6e90\u7801\u3002</p> <ul> <li>\u4f7f\u7528git clone</li> </ul> <pre><code>$ git clone -b st/2021.02 https://github.com/bootlin/buildroot.git\n</code></pre> <ul> <li>\u76f4\u63a5\u4e0b\u8f7d</li> </ul> <pre><code>wget  https://buildroot.org/downloads/buildroot-2021.02.8.tar.bz2\n</code></pre> <p>\u83b7\u53d6buildroot\u6e90\u7801\u540e\uff0c\u53ef\u4ee5\u5355\u72ec\u83b7\u53d6\u6211\u4eec\u652f\u6301 <code>\u4e1c\u5c71PI\u67d2\u53f7</code> \u7684 <code>BR2_EXTERNAL</code> \u6e90\u7801\u3002</p> <pre><code>$ git clone  https://github.com/DongshanPI/buildroot-external-dongshanpiseven.git\n</code></pre> <p>\u83b7\u53d6\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230 \u4e00\u4e2a <code>buildroot</code>\u76ee\u5f55\u548c\u4e00\u4e2a <code>buildroot-external-dongshanpiseven</code>\u76ee\u5f55\u3002</p>"},{"location":"DongshanPi-Seven/06-GetSourceCode/#_4","title":"\u914d\u7f6e\u5e76\u6784\u5efa","text":"<p>\u9996\u5148\u8fdb\u5165\u5230buildroot\u76ee\u5f55</p> <pre><code>$ cd buildroot/\n</code></pre> <p>\u63a5\u4e0b\u6765\u6267\u884c\u914d\u7f6e\u547d\u4ee4\uff0c\u6765\u4f7f\u7528 <code>dongshanpiserven_core_defconfig</code>\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002</p> <pre><code>buildrot/ $ make BR2_EXTERNAL=../buildroot-external-dongshanpiseven dongshanpiseven_core_defconfig\n</code></pre> <p>\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>make menuconfig</code> \u547d\u4ee4\u6765\u589e\u52a0\u81ea\u5df1\u9700\u8981\u7684\u5305\u3002</p> <p>\u589e\u52a0\u5b8c\u6210\u8f6f\u4ef6\u5305\u540e\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u6267\u884c <code>make</code>\u547d\u4ee4\u5f00\u59cb\u7f16\u8bd1\u4e86\u3002</p> <pre><code>buildroot/ $ make\n</code></pre> <p>\u7f16\u8bd1\u65f6\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u7684\u8f6f\u4ef6\u5305\uff0c\u8fdb\u884c\u914d\u7f6e\u7f16\u8bd1\u6700\u540e\u6253\u5305\u6210\u4e00\u4e2a\u5b8c\u6210\u7684\u7cfb\u7edf\u955c\u50cf\uff0c\u6574\u4e2a\u65f6\u95f4\u53d7\u7f51\u7edc\u73af\u5883\u800c\u5b9a\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b \u53ea\u9700\u898160\u5206\u949f\u3002</p>"},{"location":"DongshanPi-Seven/06-GetSourceCode/#_5","title":"\u70e7\u5199\u5e76\u542f\u52a8\u7cfb\u7edf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a<code>sdcard.img</code>\u7cfb\u7edf\u955c\u50cf\uff0c\u955c\u50cf\u6587\u4ef6\u5b58\u653e\u5728 <code>output/images/</code>\u76ee\u5f55\u4e0b\u3002</p> <p>\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8bb2\u955c\u50cf\u70e7\u5f55\u8fdb tf\u5361\u5373\u53ef\uff0c\u6ce8\u610f <code>/dev/sdX</code> sdX \u6307\u7684\u662ftf\u5361\u8bbe\u5907\u7684\u4e3b\u5206\u533a\u3002</p> <pre><code>buildroot/ $ dd if=output/images/sdcard.img of=/dev/sdX bs=1M\n</code></pre> <p>\u70e7\u5199\u5b8c\u6210\u540e\uff0c\u5c06\u5361\u63d2\u5165\u81f3\u5f00\u53d1\u677f\uff0c\u8fde\u63a5\u7535\u6e90\u7ebf\uff0c\u8bbe\u7f6e\u4e3a tf\u5361\u542f\u52a8\uff0c\u5373\u53ef\u542f\u52a8\u5f00\u53d1\u677f\uff0c\u4e4b\u540e\u8fde\u63a5\u4e32\u53e3\uff0c\u7b49\u5f85\u8fdb\u5165\u7ec8\u7aef\u547d\u4ee4\u884c\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u767b\u5f55\u7528\u6237\u540d\u662f <code>root</code> \u3002</p>"},{"location":"DongshanPi-Seven/07-SYSTEM_OTA/","title":"\u83b7\u53d6\u914d\u5957sdk\u6e90\u7801","text":"<p>\u5982\u679c\u60a8\u611f\u89c9\u8ddf\u7740\u6587\u6863\u4e0d\u77e5\u9053\u600e\u4e48\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6211\u4eec\u63d0\u524d\u5f55\u5236\u597d\u7684\u624b\u628a\u624b\u6559\u5b66\u89c6\u9891\u3002</p>"},{"location":"DongshanPi-Seven/07-SYSTEM_OTA/#_1","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"DongshanPi-Seven/07-SYSTEM_OTA/#_2","title":"\u73af\u5883\u914d\u7f6e","text":"<p>\u4e3a\u4e86\u4f7f\u7528 Buildroot\uff0c\u60a8\u9700\u8981\u5728\u60a8\u7684\u5de5\u4f5c\u7ad9\u4e0a\u5b89\u88c5 Linux \u53d1\u884c\u7248\u3002 \u4efb\u4f55\u6700\u65b0\u7684 Linux \u53d1\u884c\u7248\uff08Ubuntu\u3001Debian\u3001Fedora\u3001Redhat\u3001OpenSuse \u7b49\uff09\u90fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u4f46\u662f\u4f60\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u5fc5\u8981\u8f6f\u4ef6\u5305\u81f3\u60a8\u7684Linux\u5de5\u4f5c\u7ad9\u624d\u53ef\u4ee5\u4f7f\u7528Buildroot manual System requirements section. \u5bf9\u4e8e Debian/Ubuntu\u53d1\u884c\u7248\u7cfb\u7edf\uff0c\u9700\u8981\u53c2\u8003\u4e0b\u8ff0\u547d\u4ee4\u5b89\u88c5\u5217\u51fa\u6765\u7684\u8f6f\u4ef6\u5305\u3002</p> <pre><code>$ sudo apt install debianutils sed make binutils build-essential gcc g++ bash patch gzip bzip2 perl tar cpio unzip rsync file bc git\n</code></pre>"},{"location":"DongshanPi-Seven/07-SYSTEM_OTA/#_3","title":"\u83b7\u53d6\u4ee3\u7801","text":"<p>\u8fd9\u4e2a <code>BR2_EXTERNAL</code>\u4f1a\u914d\u5408\u7740\u6700\u65b0\u7684LTS\u7248\u672c\u4e00\u8d77\u4f7f\u7528\uff0c\u6240\u4ee5\u7248\u672c\u4f1a\u968f\u7740 \u4e0a\u6e38\u7684\u66f4\u65b0\u800c\u5efa\u7acb\u65b0\u7684\u5206\u652f\u8fdb\u884c\u66f4\u65b0\uff0c\u76ee\u524dBuildroot\u6700\u65b0 <code>BR2_EXTERNAL</code>\u6700\u65b0LTS\u7248\u672c\u662f 2021-02 \u3002</p> <p>\u9996\u5148\u6211\u4eec\u83b7\u53d6 buildroot\u6700\u65b0lts\u7248\u672c\u6e90\u7801\u3002</p> <ul> <li>\u4f7f\u7528git clone</li> </ul> <pre><code>$ git clone -b st/2021.02 https://github.com/bootlin/buildroot.git\n</code></pre> <ul> <li>\u76f4\u63a5\u4e0b\u8f7d</li> </ul> <pre><code>wget  https://buildroot.org/downloads/buildroot-2021.02.8.tar.bz2https://buildroot.org/downloads/buildroot-2021.02.8.tar.bz2\n</code></pre> <p>\u83b7\u53d6buildroot\u6e90\u7801\u540e\uff0c\u53ef\u4ee5\u5355\u72ec\u83b7\u53d6\u6211\u4eec\u652f\u6301 <code>\u4e1c\u5c71PI\u67d2\u53f7</code> \u7684 <code>BR2_EXTERNAL</code> \u6e90\u7801\u3002</p> <pre><code>$ git clone -b st/2021.02 https://github.com/bootlin/buildroot-external-dongshanpiseven.git\n</code></pre> <p>\u83b7\u53d6\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230 \u4e00\u4e2a <code>buildroot</code>\u76ee\u5f55\u548c\u4e00\u4e2a <code>buildroot-external-dongshanpiseven</code>\u76ee\u5f55\u3002</p>"},{"location":"DongshanPi-Seven/07-SYSTEM_OTA/#_4","title":"\u914d\u7f6e\u5e76\u6784\u5efa","text":"<p>\u9996\u5148\u8fdb\u5165\u5230buildroot\u76ee\u5f55</p> <pre><code>$ cd buildroot/\n</code></pre> <p>\u63a5\u4e0b\u6765\u6267\u884c\u914d\u7f6e\u547d\u4ee4\uff0c\u6765\u4f7f\u7528 <code>dongshanpiserven_core_defconfig</code>\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002</p> <pre><code>buildrot/ $ make BR2_EXTERNAL=../buildroot-external-dongshanpiseven dongshanpiserven_core_defconfig\n</code></pre> <p>\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>make menuconfig</code> \u547d\u4ee4\u6765\u589e\u52a0\u81ea\u5df1\u9700\u8981\u7684\u5305\u3002</p> <p>\u589e\u52a0\u5b8c\u6210\u8f6f\u4ef6\u5305\u540e\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u6267\u884c <code>make</code>\u547d\u4ee4\u5f00\u59cb\u7f16\u8bd1\u4e86\u3002</p> <pre><code>buildroot/ $ make\n</code></pre> <p>\u7f16\u8bd1\u65f6\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u7684\u8f6f\u4ef6\u5305\uff0c\u8fdb\u884c\u914d\u7f6e\u7f16\u8bd1\u6700\u540e\u6253\u5305\u6210\u4e00\u4e2a\u5b8c\u6210\u7684\u7cfb\u7edf\u955c\u50cf\uff0c\u6574\u4e2a\u65f6\u95f4\u53d7\u7f51\u7edc\u73af\u5883\u800c\u5b9a\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b \u53ea\u9700\u898160\u5206\u949f\u3002</p>"},{"location":"DongshanPi-Seven/07-SYSTEM_OTA/#_5","title":"\u70e7\u5199\u5e76\u542f\u52a8\u7cfb\u7edf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a<code>sdcard.img</code>\u7cfb\u7edf\u955c\u50cf\uff0c\u955c\u50cf\u6587\u4ef6\u5b58\u653e\u5728 <code>output/images/</code>\u76ee\u5f55\u4e0b\u3002</p> <p>\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8bb2\u955c\u50cf\u70e7\u5f55\u8fdb tf\u5361\u5373\u53ef\uff0c\u6ce8\u610f <code>/dev/sdX</code> sdX \u6307\u7684\u662ftf\u5361\u8bbe\u5907\u7684\u4e3b\u5206\u533a\u3002</p> <pre><code>buildroot/ $ dd if=output/images/sdcard.img of=/dev/sdX bs=1M\n</code></pre> <p>\u70e7\u5199\u5b8c\u6210\u540e\uff0c\u5c06\u5361\u63d2\u5165\u81f3\u5f00\u53d1\u677f\uff0c\u8fde\u63a5\u7535\u6e90\u7ebf\uff0c\u8bbe\u7f6e\u4e3a tf\u5361\u542f\u52a8\uff0c\u5373\u53ef\u542f\u52a8\u5f00\u53d1\u677f\uff0c\u4e4b\u540e\u8fde\u63a5\u4e32\u53e3\uff0c\u7b49\u5f85\u8fdb\u5165\u7ec8\u7aef\u547d\u4ee4\u884c\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u767b\u5f55\u7528\u6237\u540d\u662f <code>root</code> \u3002</p>"},{"location":"DongshanPi-Seven/09-OPTEE-OS/","title":"\u83b7\u53d6\u914d\u5957sdk\u6e90\u7801","text":"<p>\u5982\u679c\u60a8\u611f\u89c9\u8ddf\u7740\u6587\u6863\u4e0d\u77e5\u9053\u600e\u4e48\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6211\u4eec\u63d0\u524d\u5f55\u5236\u597d\u7684\u624b\u628a\u624b\u6559\u5b66\u89c6\u9891\u3002</p>"},{"location":"DongshanPi-Seven/09-OPTEE-OS/#_1","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"DongshanPi-Seven/09-OPTEE-OS/#_2","title":"\u73af\u5883\u914d\u7f6e","text":"<p>\u4e3a\u4e86\u4f7f\u7528 Buildroot\uff0c\u60a8\u9700\u8981\u5728\u60a8\u7684\u5de5\u4f5c\u7ad9\u4e0a\u5b89\u88c5 Linux \u53d1\u884c\u7248\u3002 \u4efb\u4f55\u6700\u65b0\u7684 Linux \u53d1\u884c\u7248\uff08Ubuntu\u3001Debian\u3001Fedora\u3001Redhat\u3001OpenSuse \u7b49\uff09\u90fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u4f46\u662f\u4f60\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u5fc5\u8981\u8f6f\u4ef6\u5305\u81f3\u60a8\u7684Linux\u5de5\u4f5c\u7ad9\u624d\u53ef\u4ee5\u4f7f\u7528Buildroot manual System requirements section. \u5bf9\u4e8e Debian/Ubuntu\u53d1\u884c\u7248\u7cfb\u7edf\uff0c\u9700\u8981\u53c2\u8003\u4e0b\u8ff0\u547d\u4ee4\u5b89\u88c5\u5217\u51fa\u6765\u7684\u8f6f\u4ef6\u5305\u3002</p> <pre><code>$ sudo apt install debianutils sed make binutils build-essential gcc g++ bash patch gzip bzip2 perl tar cpio unzip rsync file bc git\n</code></pre>"},{"location":"DongshanPi-Seven/09-OPTEE-OS/#_3","title":"\u83b7\u53d6\u4ee3\u7801","text":"<p>\u8fd9\u4e2a <code>BR2_EXTERNAL</code>\u4f1a\u914d\u5408\u7740\u6700\u65b0\u7684LTS\u7248\u672c\u4e00\u8d77\u4f7f\u7528\uff0c\u6240\u4ee5\u7248\u672c\u4f1a\u968f\u7740 \u4e0a\u6e38\u7684\u66f4\u65b0\u800c\u5efa\u7acb\u65b0\u7684\u5206\u652f\u8fdb\u884c\u66f4\u65b0\uff0c\u76ee\u524dBuildroot\u6700\u65b0 <code>BR2_EXTERNAL</code>\u6700\u65b0LTS\u7248\u672c\u662f 2021-02 \u3002</p> <p>\u9996\u5148\u6211\u4eec\u83b7\u53d6 buildroot\u6700\u65b0lts\u7248\u672c\u6e90\u7801\u3002</p> <ul> <li>\u4f7f\u7528git clone</li> </ul> <pre><code>$ git clone -b st/2021.02 https://github.com/bootlin/buildroot.git\n</code></pre> <ul> <li>\u76f4\u63a5\u4e0b\u8f7d</li> </ul> <pre><code>wget  https://buildroot.org/downloads/buildroot-2021.02.8.tar.bz2https://buildroot.org/downloads/buildroot-2021.02.8.tar.bz2\n</code></pre> <p>\u83b7\u53d6buildroot\u6e90\u7801\u540e\uff0c\u53ef\u4ee5\u5355\u72ec\u83b7\u53d6\u6211\u4eec\u652f\u6301 <code>\u4e1c\u5c71PI\u67d2\u53f7</code> \u7684 <code>BR2_EXTERNAL</code> \u6e90\u7801\u3002</p> <pre><code>$ git clone -b st/2021.02 https://github.com/bootlin/buildroot-external-dongshanpiseven.git\n</code></pre> <p>\u83b7\u53d6\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230 \u4e00\u4e2a <code>buildroot</code>\u76ee\u5f55\u548c\u4e00\u4e2a <code>buildroot-external-dongshanpiseven</code>\u76ee\u5f55\u3002</p>"},{"location":"DongshanPi-Seven/09-OPTEE-OS/#_4","title":"\u914d\u7f6e\u5e76\u6784\u5efa","text":"<p>\u9996\u5148\u8fdb\u5165\u5230buildroot\u76ee\u5f55</p> <pre><code>$ cd buildroot/\n</code></pre> <p>\u63a5\u4e0b\u6765\u6267\u884c\u914d\u7f6e\u547d\u4ee4\uff0c\u6765\u4f7f\u7528 <code>dongshanpiserven_core_defconfig</code>\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002</p> <pre><code>buildrot/ $ make BR2_EXTERNAL=../buildroot-external-dongshanpiseven dongshanpiserven_core_defconfig\n</code></pre> <p>\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>make menuconfig</code> \u547d\u4ee4\u6765\u589e\u52a0\u81ea\u5df1\u9700\u8981\u7684\u5305\u3002</p> <p>\u589e\u52a0\u5b8c\u6210\u8f6f\u4ef6\u5305\u540e\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u6267\u884c <code>make</code>\u547d\u4ee4\u5f00\u59cb\u7f16\u8bd1\u4e86\u3002</p> <pre><code>buildroot/ $ make\n</code></pre> <p>\u7f16\u8bd1\u65f6\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u7684\u8f6f\u4ef6\u5305\uff0c\u8fdb\u884c\u914d\u7f6e\u7f16\u8bd1\u6700\u540e\u6253\u5305\u6210\u4e00\u4e2a\u5b8c\u6210\u7684\u7cfb\u7edf\u955c\u50cf\uff0c\u6574\u4e2a\u65f6\u95f4\u53d7\u7f51\u7edc\u73af\u5883\u800c\u5b9a\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b \u53ea\u9700\u898160\u5206\u949f\u3002</p>"},{"location":"DongshanPi-Seven/09-OPTEE-OS/#_5","title":"\u70e7\u5199\u5e76\u542f\u52a8\u7cfb\u7edf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a<code>sdcard.img</code>\u7cfb\u7edf\u955c\u50cf\uff0c\u955c\u50cf\u6587\u4ef6\u5b58\u653e\u5728 <code>output/images/</code>\u76ee\u5f55\u4e0b\u3002</p> <p>\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8bb2\u955c\u50cf\u70e7\u5f55\u8fdb tf\u5361\u5373\u53ef\uff0c\u6ce8\u610f <code>/dev/sdX</code> sdX \u6307\u7684\u662ftf\u5361\u8bbe\u5907\u7684\u4e3b\u5206\u533a\u3002</p> <pre><code>buildroot/ $ dd if=output/images/sdcard.img of=/dev/sdX bs=1M\n</code></pre> <p>\u70e7\u5199\u5b8c\u6210\u540e\uff0c\u5c06\u5361\u63d2\u5165\u81f3\u5f00\u53d1\u677f\uff0c\u8fde\u63a5\u7535\u6e90\u7ebf\uff0c\u8bbe\u7f6e\u4e3a tf\u5361\u542f\u52a8\uff0c\u5373\u53ef\u542f\u52a8\u5f00\u53d1\u677f\uff0c\u4e4b\u540e\u8fde\u63a5\u4e32\u53e3\uff0c\u7b49\u5f85\u8fdb\u5165\u7ec8\u7aef\u547d\u4ee4\u884c\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u767b\u5f55\u7528\u6237\u540d\u662f <code>root</code> \u3002</p>"},{"location":"DongshanPi-Seven/09-SupportHardware/","title":"\u652f\u6301\u7684\u786c\u4ef6","text":""},{"location":"DongshanPi-Seven/10-SupportTools/","title":"\u652f\u6301\u7684\u5de5\u5177","text":""},{"location":"DongshanPi-Seven/10-SupportTools/#_2","title":"\u4e13\u7528\u70e7\u5199\u5de5\u5177","text":"<p>\u70b9\u51fb\u4e0b\u8f7d https://cowtransfer.com/s/bba08898688d40</p>"},{"location":"DongshanPi-Seven/10-SupportTools/#flash","title":"Flash\u6bcd\u7247\u5236\u4f5c\u5de5\u5177","text":""},{"location":"DongshanPi-Seven/11-SupportOtherSystem/","title":"\u652f\u6301\u7684\u5176\u5b83\u7cfb\u7edf","text":""},{"location":"DongshanPi-Seven/17-Das_u-boot/","title":"Bootloader","text":""},{"location":"DongshanPi-Seven/17-Das_u-boot/#u-boot","title":"u-boot","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740 https://github.com/100askTeam/mstar_u-boot</li> </ul>"},{"location":"DongshanPi-Seven/18-LinuxKernel/","title":"LinuxKernel","text":""},{"location":"DongshanPi-Seven/18-LinuxKernel/#kernel","title":"kernel","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740  https://github.com/100askTeam/mstar_linux.git</li> </ul>"},{"location":"DongshanPi-Seven/19.Buildroot/","title":"Rootfs APP","text":""},{"location":"DongshanPi-Seven/19.Buildroot/#buildroot","title":"buildroot","text":"<ul> <li>\u6e90\u7801\u4ed3\u5e93\u5730\u5740 https://github.com/100askTeam/buildroot-external-dongshanpione</li> </ul> <pre><code> wget https://buildroot.org/downloads/buildroot-2021.02.8.tar.bz2\n tar -xf  buildroot-2021.02.8.tar.bz2\n git clone https://github.com/100askTeam/buildroot-external-dongshanpione\n mv  buildroot-2021.02.8  buildroot\n cd buildroot\n make  BR2_EXTERNAL=../buildroot-external-dongshanpione/ dongshanpi1_defconfig\n make\n</code></pre>"},{"location":"YuzukiHD-Chameleon/01-BoardIntroduction/","title":"\u67da\u6728PI-\u53d8\u8272\u9f99\u786c\u4ef6\u7b80\u8ff0","text":""},{"location":"YuzukiHD-Chameleon/01-BoardIntroduction/#_1","title":"\u786c\u4ef6\u7b80\u8ff0","text":"<ul> <li>Based on Allwinner H616 chip, 4*Cortex A53</li> <li>HDMI supports 4K@60, supports up to 6K video decoding</li> <li>Up to 2GB RAM and 128GB eMMC storage</li> <li>Onboard 1GB DDR3 RAM</li> <li>Onboard 8G eMMC and TF card slot</li> <li>Onboard XR829 WIFI+Bluetooth chip</li> <li>4 USB Type C, 3 HOST and one OTG, support USB camera and capture card input</li> <li>Onboard fan slot, radiator fixing hole</li> <li>Lead out RJ45 100M interface</li> <li>Onboard 40 Pin GPIO, can expand SPI LCD display, Gigabit Ethernet, microphone array, CAN transceiver, * temperature and humidity sensor, acceleration sensor and so on.</li> <li>AXP313A Power Solution</li> <li>Raspberry Pi A Size</li> </ul> <p>![h616brief](https://github.com/YuzukiHD/YuzukiChameleon/raw/master/Bitmap/brief.png\uff09</p> <ul> <li>https://github.com/YuzukiHD/YuzukiChameleon</li> </ul>"},{"location":"YuzukiHD-Chameleon/02-SupportingResources/","title":"\u914d\u5957\u8d44\u6e90","text":""},{"location":"YuzukiHD-Chameleon/02-SupportingResources/#_1","title":"\u8f6f\u4ef6\u8d44\u6e90\u7b80\u8ff0","text":""},{"location":"YuzukiHD-Chameleon/02-SupportingResources/#bwwsdk","title":"BWW\u63d0\u4f9b\u7684SDK","text":"<ul> <li>\u767e\u5ea6\u7f51\u76d8\u83b7\u53d6\u5730\u5740 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1f1K82iA0kNibuMlZu34i0g?pwd=9rds  \u63d0\u53d6\u7801\uff1a9rds </li> </ul>"},{"location":"YuzukiHD-Chameleon/02-SupportingResources/#buildoot-for-dongshan-nezhastu-d1-h","title":"Buildoot For Dongshan NezhaSTU D1-H","text":"<p>\u6709\u89c6\u9891 \u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li>\u6b64\u5957\u6784\u5efa\u7cfb\u7edf\u57fa\u4e8e\u5168\u5fd7RISCV-64 Linux D1-H \u82af\u7247\uff0c\u9002\u914d\u4e86buildroot 2022lts\u4e3b\u7ebf\u7248\u672c\uff0c\u517c\u5bb9\u4e86\u767e\u95ee\u7f51\u7684\u9879\u76ee\u8bfe\u7a0b\u4ee5\u53ca\u76f8\u5173\u7ec4\u4ef6\uff0c\u771f\u6b63\u505a\u5230\u4e86\u4f4e\u8026\u5408\uff0c\u9ad8\u53ef\u7528\uff0c\u4f7f\u7528\u4e0d\u540c\u7684buildroot external tree\u89c4\u683c\uff0c\u8bb2\u4e0d\u540c\u7684\u9879\u76ee \u4e0d\u540c\u7684\u7ec4\u4ef6\u5206\u522b\u7ba1\u7406\uff0c\u6765\u5b9e\u73b0\u66f4\u5bb9\u6613\u4e0a\u624b \u4e5f\u66f4\u5bb9\u6613\u5b66\u4e60\u7406\u89e3\u3002</li> <li>\u4ed3\u5e93\u5730\u5740  https://github.com/DongshanPI/buildroot_dongshannezhastu</li> </ul>"},{"location":"YuzukiHD-Chameleon/02-SupportingResources/#elinuxcore-stu-d1-linux","title":"elinuxCore \u6700\u5c0f\u4e1c\u5c71\u54ea\u5412STU D1 \u5d4c\u5165\u5f0fLinux\u7cfb\u7edf","text":"<p>\u6709\u89c6\u9891 \u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li> <p>\u6b64\u5957\u7cfb\u7edf\u662f\u4e13\u95e8\u7528\u4e8e\u4e86\u89e3D1-H RISC-V Linux\u7ec4\u4ef6\u4ee5\u53ca\u5404\u4e2a\u90e8\u5206\u6784\u6210\u7684\u6e90\u7801\u793a\u4f8b\uff0c\u9002\u5408\u559c\u6b22\u4e0d\u4f9d\u8d56\u4efb\u4f55\u6784\u5efa\u5de5\u5177\u7684\u524d\u63d0\u4e0b\u81ea\u884c\u7814\u7a76\u3002</p> </li> <li> <p>https://github.com/DongshanPI/eLinuxCore_dongshannezhastu</p> </li> </ul>"},{"location":"YuzukiHD-Chameleon/02-SupportingResources/#studebian-ubuntu","title":"\u4e1c\u5c71\u54ea\u5412STU\u81ea\u52a8\u6784\u5efaDebian ubuntu\u53d1\u884c\u7248\u7cfb\u7edf","text":"<p>\u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li>\u6b64\u5957\u7cfb\u7edf\u662f\u57fa\u4e8e <code>debootstrap</code>\u914d\u5408GUN/linux\u793e\u533a\u7248\u672c\u5b9e\u73b0\u7684\u81ea\u52a8\u6784\u5efa\u7cfb\u7edf\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u5217\u811a\u672c\u7b49\u3002\u6b64\u5957\u7cfb\u7edf\u5e76\u975e\u662f\u4e00\u6b65\u7f16\u8bd1\u6240\u6709\uff0c\u9700\u8981\u5206\u591a\u6b21\u6267\u884c\uff0c\u56e0\u4e3a\u811a\u672c\u6846\u67b6\u7b49\u95ee\u9898\uff0c\u6240\u4ee5\u4e0d\u662f\u7279\u522b\u5b8c\u5584\u3002\u76ee\u524d\u6784\u5efa\u7cfb\u7edf\u4f7f\u7528\u7684\u793e\u533a\u5927\u4f6c https://github.com/smaeul \u63d0\u4f9b\u7684\u6e90\u7801\uff0c\u786c\u4ef6\u652f\u6301\u4e0a\u5e76\u4e0d\u662f\u7279\u522b\u5b8c\u6574\u3002\u4f46\u662f\u6700\u5c0f\u7cfb\u7edf\u6ca1\u6709\u95ee\u9898\u3002</li> <li>https://github.com/DongshanPI/NezhaSTU-ReleaseLinux</li> </ul>"},{"location":"YuzukiHD-Chameleon/02-SupportingResources/#tina-sdk-v20","title":"\u5168\u5fd7\u539f\u5382Tina-SDK V2.0","text":"<p>\u6709\u6587\u6863 \u6709\u624b\u518c</p> <ul> <li> <p>Tina Linux\u662f\u5168\u5fd7\u79d1\u6280\u57fa\u4e8eLinux\u5185\u6838\u5f00\u53d1\u7684\u9488\u5bf9\u667a\u80fd\u786c\u4ef6\u7c7b\u4ea7\u54c1\u7684\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u7cfb\u7edf\u3002Tina Linux\u57fa\u4e8eopenwrt-14.07 \u7248\u672c\u7684\u8f6f\u4ef6\u5f00\u53d1\u5305\uff0c\u5305\u542b\u4e86 Linux \u7cfb\u7edf\u5f00\u53d1\u7528\u5230\u7684\u5185\u6838\u6e90\u7801\u3001\u9a71\u52a8\u3001\u5de5\u5177\u3001\u7cfb\u7edf\u4e2d\u95f4\u4ef6\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5305\u3002openwrt \u662f\u77e5\u540d\u7684\u5f00\u6e90\u5d4c\u5165\u5f0f Linux \u7cfb\u7edf\u81ea\u52a8\u6784\u5efa\u6846\u67b6\uff0c\u662f\u7531 Makefile \u811a\u672c\u548c Kconfig \u914d\u7f6e\u6587\u4ef6\u6784\u6210\u7684\u3002\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 menuconfig\u914d\u7f6e\uff0c\u7f16\u8bd1\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u4ee5\u76f4\u63a5\u70e7\u5199\u5230\u673a\u5668\u4e0a\u8fd0\u884c\u7684 Linux \u7cfb\u7edf\u8f6f\u4ef6\u3002</p> </li> <li> <p>\u5728\u7ebf\u6587\u6863 https://d1.docs.aw-ol.com/</p> </li> </ul>"},{"location":"YuzukiHD-Chameleon/02-SupportingResources/#linuxbuildroot-lts","title":"Linux\u793e\u533a\u7248Buildroot-LTS","text":"<p>\u6709\u7b80\u5355\u6587\u6863</p> <ul> <li>https://bbs.aw-ol.com/topic/1208/buildroot-2022</li> </ul>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":"<ul> <li>\u53c2\u8003\u64cd\u4f5c\u6f14\u793a\u89c6\u9891\u6559\u7a0b</li> </ul>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_2","title":"\u4e0a\u7535\u542f\u52a8\u7cfb\u7edf","text":"<p>\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u4e70\u7684\u914d\u7f6e\u662f\u6ca1\u6709SPI NANDFLASH\u914d\u7f6e\uff0c\u5219\u8bf7\u53c2\u8003\u4e0b\u65b9\u7684\u70e7\u5199\u56fa\u4ef6\u81f3TF\u5361\u7ae0\u8282\uff0c\u5148\u70e7\u5f55\u7cfb\u7edf\uff0c\u624d\u53ef\u4ee5\u542f\u52a8\u4f7f\u7528\u3002</p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#1","title":"1. \u8fde\u63a5\u4e32\u53e3\u7ebf","text":"<p>\u5c06\u914d\u5957\u7684TypeC\u7ebf\u4e00\u6bb5\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\u7684\u4e32\u53e3/\u4f9b\u7535\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\u677f\u8f7d\u7684\u7ea2\u8272\u7535\u6e90\u706f\u4f1a\u4eae\u8d77\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5b89\u88c5\u4e32\u53e3\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u52a8\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u6765\u81ea\u52a8\u5b89\u88c5\u3002</p> <ul> <li>\u5bf9\u4e8eWindows\u7cfb\u7edf \u6b64\u65f6Windows\u8bbe\u5907\u7ba1\u7406\u5668 \u5728 \u7aef\u53e3(COM\u548cLPT) \u5904\u4f1a\u591a\u51fa\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u4e00\u822c\u662f\u4ee5 <code>USB-Enhanced-SERIAL CH9102</code>\u5f00\u5934\uff0c\u60a8\u9700\u8981\u7559\u610f\u4e00\u4e0b\u540e\u9762\u7684\u5177\u4f53COM\u7f16\u53f7\uff0c\u7528\u4e8e\u540e\u7eed\u8fde\u63a5\u4f7f\u7528\u3002</li> </ul> <p></p> <p>\u5982\u4e0a\u56fe\uff0cCOM\u53f7\u662f96\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8fde\u63a5\u6240\u4f7f\u7528\u7684\u4e32\u53e3\u53f7\u5c31\u662f96\u3002</p> <ul> <li>\u5bf9\u4e8eLinux\u7cfb\u7edf \u53ef\u4ee5\u67e5\u770b\u662f\u5426\u591a\u51fa\u4e00\u4e2a/dev/tty&lt;&gt; \u8bbe\u5907,\u4e00\u822c\u60c5\u51b5\u8bbe\u5907\u8282\u70b9\u4e3a /dev/ttyACM0  \u3002</li> </ul> <p></p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#2","title":"2. \u6253\u5f00\u4e32\u53e3\u63a7\u5236\u53f0","text":""},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_3","title":"\u83b7\u53d6\u4e32\u53e3\u5de5\u5177","text":"<p>\u4f7f\u7528Putty\u6216\u8005MobaXterm\u7b49\u4e32\u53e3\u5de5\u5177\u6765\u5f00\u53d1\u677f\u8bbe\u5907\u3002</p> <ul> <li>\u5176\u4e2dputty\u5de5\u5177\u53ef\u4ee5\u8bbf\u95ee\u9875\u9762  https://www.chiark.greenend.org.uk/~sgtatham/putty/  \u6765\u83b7\u53d6\u3002</li> <li>MobaXterm\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u9875\u9762 https://mobaxterm.mobatek.net/ \u83b7\u53d6 (\u63a8\u8350\u4f7f\u7528)\u3002</li> </ul>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#putty","title":"\u4f7f\u7528putty\u767b\u5f55\u4e32\u53e3","text":""},{"location":"YuzukiHD-Chameleon/03-QuickStart/#mobaxterm","title":"\u4f7f\u7528Mobaxterm\u767b\u5f55\u4e32\u53e3","text":"<p>\u6253\u5f00MobaXterm\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u201cSession\u201d\uff0c\u5728\u5f39\u51fa\u7684\u754c\u9762\u9009\u4e2d\u201cSerial\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u9009\u62e9\u7aef\u53e3\u53f7\uff08\u524d\u9762\u8bbe\u5907\u7ba1\u7406\u5668\u663e\u793a\u7684\u7aef\u53e3\u53f7COM21\uff09\u3001\u6ce2\u7279\u7387\uff08Speed 115200\uff09\u3001\u6d41\u63a7\uff08Flow Control: none\uff09,\u6700\u540e\u70b9\u51fb\u201cOK\u201d\u5373\u53ef\u3002\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6ce8\u610f\uff1a\u6d41\u63a7\uff08Flow Control\uff09\u4e00\u5b9a\u8981\u9009\u62e9none\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u5728MobaXterm\u4e2d\u5411\u4e32\u53e3\u8f93\u5165\u6570\u636e</p> <p></p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#3-shell","title":"3. \u8fdb\u5165\u7cfb\u7edfshell","text":"<p>\u4f7f\u7528\u4e32\u53e3\u5de5\u5177\u6210\u529f\u6253\u5f00\u4e32\u53e3\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u4e0b Enter \u952e \u8fdb\u5165shell\uff0c\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u6309\u4e0b\u677f\u5b50\u4e0a\u7684 <code>Reset</code>\u590d\u4f4d\u952e\uff0c\u6765\u67e5\u770b\u5b8c\u6574\u7684\u7cfb\u7edf\u4fe1\u606f\u3002 </p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u7684 \u767b\u5f55 \u7528\u6237\u540d \u662f root \u6ca1\u6709\u5bc6\u7801\u3002</p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u7684 \u767b\u5f55 \u7528\u6237\u540d \u662f root \u6ca1\u6709\u5bc6\u7801\u3002</p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u7684 \u767b\u5f55 \u7528\u6237\u540d \u662f root \u6ca1\u6709\u5bc6\u7801\u3002</p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#spi-nand","title":"\u70e7\u5199\u56fa\u4ef6\u81f3SPI NAND","text":"<p>\u6ce8\u610f\u6b64\u65b9\u5f0f\u70e7\u5f55\u8fdb\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u53ea\u8bfb\u7684\uff0c\u5982\u679c\u64cd\u4f5c \u9700\u8981\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u6216\u8005\u4f7f\u7528TF\u5361\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002</p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_4","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ol> <li>\u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u4e3b\u677f x1</li> <li>\u4e0b\u8f7d\u5168\u5fd7\u7ebf\u5237\u5de5\u5177AllwinnertechPhoeniSuit\uff1a https://gitlab.com/dongshanpi/tools/-/raw/main/AllwinnertechPhoeniSuit.zip</li> <li>TypeC\u7ebf X2</li> <li>\u4e0b\u8f7dSPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/tina_d1-h-nezha_uart0.zip</li> <li>\u4e0b\u8f7d\u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/AllwinnerUSBFlashDeviceDriver.zip</li> </ol>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_5","title":"\u8fde\u63a5\u5f00\u53d1\u677f","text":"<p>\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u5c06\u4e24\u4e2aTypeC\u7ebf\u5206\u522b\u8fde\u81f3 \u5f00\u53d1\u677f \u4e32\u53e3\u63a5\u53e3 \u4e0e OTG\u70e7\u5199\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef \u8fde\u63a5\u81f3 \u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u5c06\u4e0b\u8f7d\u597d\u7684 \u70e7\u5199\u5de5\u5177\u548c SPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\u89e3\u538b\u7f29 \u4f7f\u7528\u3002</p> <p></p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#usb","title":"\u5b89\u88c5usb\u9a71\u52a8","text":"<p>\u5728\u6211\u4eec\u8fde\u63a5\u597d\u5f00\u53d1\u677f\u4ee5\u540e\uff0c\u5148\u6309\u4f4f FEL \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b RESET \u7cfb\u7edf\u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u3002</p> <p>\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8bbe\u5907\u7ba1\u7406\u5668  \u901a\u7528\u4e32\u884c\u603b\u7ebf\u63a7\u5236\u5668 \u5f39\u51fa\u4e00\u4e2a  \u672a\u77e5\u8bbe\u5907 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u628a\u6211\u4eec\u63d0\u524d\u4e0b\u8f7d\u597d\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8 \u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u5c06\u89e3\u538b\u7f29\u8fc7\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8  \u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u8fd9\u4e48\u51e0\u4e2a\u6587\u4ef6\u3002</p> <pre><code>InstallUSBDrv.exe\ndrvinstaller_IA64.exe\ndrvinstaller_X86.exe\nUsbDriver/          \ndrvinstaller_X64.exe   \ninstall.bat\n</code></pre> <p>\u5bf9\u4e8ewind7\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u53ea\u9700\u8981\u4ee5\u7ba1\u7406\u5458 \u6253\u5f00   <code>install.bat</code> \u811a\u672c\uff0c\u7b49\u5f85\u5b89\u88c5\uff0c\u5728\u5f39\u51fa\u7684 \u662f\u5426\u5b89\u88c5\u9a71\u52a8\u7684\u5bf9\u8bdd\u6846\u91cc\u9762\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8ewind10/wind11\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u9700\u8981\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u91cc\u9762\u8fdb\u884c\u624b\u52a8\u5b89\u88c5\u9a71\u52a8\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5728\u7b2c\u4e00\u6b21\u63d2\u5165OTG\u8bbe\u5907\uff0c\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u8bbe\u5907\u7ba1\u7406\u5668\u4f1a\u5f39\u51fa\u4e00\u4e2a\u672a\u77e5\u8bbe\u5907\u3002 </p> <p>\u63a5\u4e0b\u6765\u9f20\u6807\u53f3\u952e\u70b9\u51fb\u8fd9\u4e2a\u672a\u77e5\u8bbe\u5907\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c \u70b9\u51fb\u6d4f\u89c8\u6211\u8ba1\u7b97\u673a\u4ee5\u67e5\u627e\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\u3002 </p> <p>\u4e4b\u540e\u5728\u5f39\u51fa\u65b0\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u70b9\u51fb\u6d4f\u89c8\u627e\u5230\u6211\u4eec\u4e4b\u524d\u4e0b\u8f7d\u597d\u7684 usb\u70e7\u5f55\u9a71\u52a8\u6587\u4ef6\u5939\u5185\uff0c\u627e\u5230 <code>UsbDriver/</code> \u8fd9\u4e2a\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\uff0c\u4e4b\u540e\u70b9\u51fb\u786e\u5b9a\u5373\u53ef\u3002 </p> <p>\u6ce8\u610f\u8fdb\u5165\u5230  <code>UsbDriver/</code>  \u6587\u4ef6\u5939\uff0c\u7136\u540e\u70b9\u51fb\u786e\u5b9a\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u7ee7\u7eed\u70b9\u51fb \u4e0b\u4e00\u9875 \u6309\u94ae\uff0c\u8fd9\u65f6\u7cfb\u7edf\u5c31\u4f1a\u63d0\u793a\u5b89\u88c5\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u3002  \u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u6211\u4eec\u70b9\u51fb \u59cb\u7ec8\u5b89\u88c5\u6b64\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6 \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\u3002 </p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f1a\u63d0\u793a\uff0cWindows\u5df2\u6210\u529f\u66f4\u65b0\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002 </p> <p>\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8bbe\u5907\u7ba1\u7406\u5668 \u91cc\u9762\u7684\u672a\u77e5\u8bbe\u5907 \u53d8\u6210\u4e86\u4e00\u4e2a <code>USB Device(VID_1f3a_efe8)</code>\u7684\u8bbe\u5907\uff0c\u8fd9\u65f6\u5c31\u8868\u660e\u8bbe\u5907\u9a71\u52a8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002 </p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_6","title":"\u8fd0\u884c\u8f6f\u4ef6\u70e7\u5199","text":"<p>\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684\u5168\u5fd7\u7ebf\u5237\u5de5\u5177 AllwinnertechPhoeniSuit \u89e3\u538b\u7f29\uff0c\u540c\u65f6\u5c06**SPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf**\u4e0b\u8f7d\u4e0b\u6765\u4e5f\u8fdb\u884c\u89e3\u538b\u7f29\u3002</p> <p>\u89e3\u538b\u540e\uff0c\u5f97\u5230\u4e00\u4e2a tina_d1-h-nezha_uart0.img \u955c\u50cf\uff0c\u662f\u7528\u4e8e\u70e7\u5f55\u5230SPI NAND\u955c\u50cf\u5f97\u3002\u53e6\u4e00\u4e2a\u662f**AllwinnertechPhoeniSuit**\u6587\u4ef6\u5939\u3002</p> <p>\u9996\u5148\u6211\u4eec\u8fdb\u5165\u5230 AllwinnertechPhoeniSuit\\AllwinnertechPhoeniSuitRelease20201225 \u76ee\u5f55\u4e0b \u627e\u5230 PhoenixSuit.exe \u53cc\u51fb\u8fd0\u884c\u3002</p> <p>\u6253\u5f00\u8f6f\u4ef6\u540e \u8f6f\u4ef6\u4e3b\u754c\u9762\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p> <p>\u200b   \u63a5\u4e0b\u6765 \u6211\u4eec\u9700\u8981\u5207\u6362\u5230 \u4e00\u952e\u5237\u673a**\u7a97\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u70b9\u51fb\u7ea2\u6846\u6807\u53f71\uff0c\u5728\u5f39\u51fa\u7684\u65b0\u7a97\u53e3\u5185\uff0c\u6211\u4eec\u70b9\u51fb \u7ea2\u68462 **\u6d4f\u89c8 \u627e\u5230\u6211\u4eec\u521a\u624d\u89e3\u538b\u8fc7\u7684 SPI NAND \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf  tina_d1-h-nezha_uart0.img \uff0c\u9009\u4e2d\u955c\u50cf\u540e\uff0c\u70b9\u51fb\u7ea2\u68463 \u5168\u76d8\u64e6\u9664\u5347\u7ea7 \uff0c\u6700\u540e\u70b9\u51fb\u7ea2\u68464  \u7acb\u5373\u5347\u7ea7\u3002</p> <p>\u200b   \u70b9\u51fb\u5b8c\u6210\u540e\uff0c\u4e0d\u9700\u8981\u7406\u4f1a \u5f39\u51fa\u7684\u4fe1\u606f\uff0c\u8fd9\u65f6 \u6211\u4eec\u62ff\u8d77\u5df2\u7ecf\u8fde\u63a5\u597d\u7684\u5f00\u53d1\u677f\uff0c\u5148\u6309\u4f4f FEL \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b RESET \u7cfb\u7edf\u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u5e76\u5f00\u59cb\u70e7\u5199\u3002</p> <p></p> <p>\u200b   \u70e7\u5199\u65f6\u4f1a\u63d0\u793a\u70e7\u5199\u8fdb\u5ea6\u6761\uff0c\u70e7\u5199\u5b8c\u6210\u540e \u5f00\u53d1\u677f\u4f1a\u81ea\u5df1\u91cd\u542f\u3002</p> <p></p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_7","title":"\u542f\u52a8\u7cfb\u7edf","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u70e7\u5199\u6210\u529f\u540e \u90fd\u4f1a\u81ea\u52a8\u91cd\u542f \u542f\u52a8\u7cfb\u7edf\uff0c\u6b64\u65f6\u6211\u4eec\u8fdb\u5165\u5230 \u4e32\u53e3\u7ec8\u7aef\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u7684\u542f\u52a8\u4fe1\u606f\uff0c\u7b49\u6240\u6709\u542f\u52a8\u4fe1\u606f\u52a0\u8f7d\u5b8c\u6210\uff0c\u8f93\u5165 root \u7528\u6237\u540d\u5373\u53ef\u767b\u5f55\u70e7\u5199\u597d\u7684\u7cfb\u7edf\u5185\u3002</p> <p></p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#tf","title":"\u70e7\u5199\u56fa\u4ef6\u81f3TF\u5361","text":""},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_8","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ol> <li>\u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u4e3b\u677f x1</li> <li>Type-C\u7ebf X1</li> <li>TF\u5361\u8bfb\u5361\u5668  x1</li> <li>8GB\u4ee5\u4e0a\u7684 micro TF\u5361 x1</li> <li>win32diskimage\u5de5\u5177 : https://gitlab.com/dongshanpi/tools/-/raw/main/win32diskimager-1.0.0-install.exe</li> <li>SDcard\u4e13\u7528\u683c\u5f0f\u5316\u5de5\u5177\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/SDCardFormatter5.0.1Setup.exe</li> <li>TF\u5361\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/dongshannezhastu-sdcard.zip</li> </ol>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_9","title":"\u8fd0\u884c\u70e7\u5199\u8f6f\u4ef6\u70e7\u5199","text":"<p>\u9996\u5148\u9700\u8981\u4e0b\u8f7d  win32diskimage  SDcard\u4e13\u7528\u683c\u5f0f\u5316 \u8fd9\u4e24\u4e2a\u70e7\u5199TF\u5361\u7684\u5de5\u5177\uff0c\u7136\u540e\u83b7\u53d6\u5230TF\u5361\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6**dongshannezhastu-sdcard.zip**\uff0c\u83b7\u53d6\u5230\u4ee5\u540e\uff0c\u5148\u5b89\u88c5 win32diskimage  SDcard\u4e13\u7528\u683c\u5f0f\u5316  \u8fd9\u4e24\u4e2a\u5de5\u5177\uff0c\u540c\u65f6\u53ef\u4ee5\u89e3\u538b \u4e00\u4e0bTF\u5361\u7cfb\u7edf\u7684\u955c\u50cf\u6587\u4ef6 dongshannezhastu-sdcard.zip\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a  **dongshannezhastu-sdcard.img**\u6587\u4ef6 \u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u8981\u70e7\u5199\u7684\u955c\u50cf\u3002</p> <ul> <li>\u4f7f\u7528SD CatFormat\u683c\u5f0f\u5316TF\u5361\uff0c\u6ce8\u610f\u5907\u4efd\u5361\u5185\u6570\u636e\u3002\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u70b9\u51fb\u5237\u65b0\u627e\u5230TF\u5361\uff0c\u7136\u540e\u70b9\u51fb Format \u5728\u5f39\u51fa\u7684 \u5bf9\u8bdd\u6846 \u70b9\u51fb **\u662f(Yes)**\u7b49\u5f85\u683c\u5f0f\u5b8c\u6210\u5373\u53ef\u3002</li> </ul> <p></p> <ul> <li>\u683c\u5f0f\u5316\u5b8c\u6210\u540e\uff0c\u4f7f\u7528**Win32diskimage**\u5de5\u5177\u6765\u70e7\u5f55\u955c\u50cf\uff0c\u53c2\u8003\u4e0b\u5c5e\u6b65\u9aa4\uff0c\u627e\u5230\u81ea\u5df1\u7684TF\u5361\u76d8\u7b26\uff0c\u7136\u540e\u70b9\u51fb2 \u7bad\u5934 \u6587\u4ef6\u5939\u7684\u7b26\u53f7 \u627e\u5230 \u521a\u624d\u89e3\u538b\u7684 TF\u5361\u955c\u50cf\u6587\u4ef6  dongshannezhastu-sdcard.img \u6700\u540e \u70b9\u51fb \u5199\u5165\uff0c\u7b49\u5f85\u5199\u5165\u5b8c\u6210\u5373\u53ef\u3002</li> </ul> <p></p> <p>\u5b8c\u6210\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f39\u51faTF\u5361\uff0c\u5e76\u5c06\u5176\u63d2\u5230 \u4e1c\u5c71\u54ea\u5412STU \u6700\u5c0f\u677f\u80cc\u9762\u7684TF\u5361\u69fd\u4f4d\u7f6e\u5904\uff0c\u6b64\u65f6\u8fde\u63a5 \u4e32\u53e3\u7ebf \u5e76\u4f7f\u7528 \u4e32\u53e3\u5de5\u5177\u6253\u5f00\u4e32\u53e3\u8bbe\u5907\uff0c\u6309\u4e0b\u5f00\u53d1\u677f\u7684 **RESET**\u590d\u4f4d\u6309\u952e\u5c31\u53ef\u4ee5\u91cd\u542f\u8fdb\u5165TF\u5361\u7cfb\u7edf\u5185\u4e86\u3002</p>"},{"location":"YuzukiHD-Chameleon/03-QuickStart/#_10","title":"\u542f\u52a8\u7cfb\u7edf","text":"<p>\u7cfb\u7edf\u7684\u767b\u5f55\u7528\u6237\u540d root \u5bc6\u7801\u4e3a\u7a7a</p> <p>\u7cfb\u7edf\u7684\u767b\u5f55\u7528\u6237\u540d root \u5bc6\u7801\u4e3a\u7a7a</p> <p>\u7cfb\u7edf\u7684\u767b\u5f55\u7528\u6237\u540d root \u5bc6\u7801\u4e3a\u7a7a</p>"},{"location":"YuzukiHD-Chameleon/04-StudyPath/","title":"\u5b66\u4e60\u8def\u7ebf","text":""},{"location":"YuzukiHD-Chameleon/04-StudyPath/#_2","title":"\u57fa\u7840\u60c5\u51b5","text":""},{"location":"YuzukiHD-Chameleon/04-StudyPath/#linux","title":"\u7eaf\u5c0f\u767d\u540c\u5b66\u4e0d\u61c2Linux","text":"<ul> <li>\u5b66\u4e60\u64cd\u4f5c\u4f7f\u7528ubuntu\u7cfb\u7edf\uff1a https://www.bilibili.com/video/BV1dU4y1D7fz</li> <li>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</li> <li>\u5b66\u4e60Linux C\u7f16\u7a0b\uff1a \u53c2\u8003\u5c0f\u7532\u9c7c\u8bfe\u7a0b</li> <li>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</li> </ul>"},{"location":"YuzukiHD-Chameleon/04-StudyPath/#linux_1","title":"\u61c2\u4e00\u70b9Linux\u6982\u5ff5","text":"<ul> <li> <p>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</p> </li> <li> <p>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</p> </li> </ul>"},{"location":"YuzukiHD-Chameleon/04-StudyPath/#linux_2","title":"\u719f\u6089\u5d4c\u5165\u5f0fLinux\u5f00\u53d1","text":"<ul> <li>\u5b66\u4e60Tina-SDK\u5f00\u53d1</li> <li>\u5b66\u4e60Linux\u9a71\u52a8\u5f00\u53d1</li> <li>\u5b66\u4e60\u4e13\u9898\u8bfe\u7a0b\uff08\u6bd4\u5982RISC-V\u67b6\u6784\u4e13\u9898\uff09</li> </ul>"},{"location":"YuzukiHD-Chameleon/04-StudyPath/#_3","title":"\u5de5\u4f5c\u5c97\u4f4d","text":""},{"location":"YuzukiHD-Chameleon/04-StudyPath/#linux_3","title":"\u5d4c\u5165\u5f0fLinux \u5e94\u7528\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"YuzukiHD-Chameleon/04-StudyPath/#linux_4","title":"\u5d4c\u5165\u5f0fLinux\u9a71\u52a8\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u4e2d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"YuzukiHD-Chameleon/04-StudyPath/#_4","title":"\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1","text":"<p>\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f18\u5316\u5de5\u7a0b\u5e08</p>"},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/","title":"\u8fd0\u884c\u8f93\u51fahello word","text":""},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u4e1c\u5c71\u54ea\u5412STU \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002\u56e0\u4e3a\u6700\u521d\u7684\u5de5\u5177\u94fe\u662f \u963f\u91cc\u5e73\u5934\u54e5\u63d0\u4f9b\uff0c\u4ed6\u4eec\u7684\u5de5\u5177\u94fe \u4e0e GNU\u793e\u533a\u6807\u51c6\u7684\u5de5\u5177\u94fe\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u6240\u4ee5\u6211\u4eec\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528 \u793e\u533a\u7248\u672c\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\uff0c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p>"},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/#_2","title":"\u83b7\u53d6\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe","text":"<p>\u6211\u4eec\u7684\u6e90\u7801\u90fd\u5b58\u653e\u5728\u4e0d\u540c\u7684git\u4ed3\u5e93\u5185\uff0c\u5176\u4e2d\u4ee5github\u4e3a\u4e3b\u8981\u6258\u7ba1\uff0c\u4e5f\u662f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u540c\u65f6\u4e5f\u4f1a\u4f7f\u7528 gitee\u4f5c\u4e3a\u5907\u7528\u7ad9\u70b9\uff0c\u6839\u636e\u5927\u5bb6\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u6765\u8fdb\u884c\u9009\u62e9\u3002</p> <ul> <li>\u5bf9\u4e8e\u53ef\u4ee5\u8bbf\u95eegithub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801</li> </ul> <pre><code>git clone https://github.com/DongshanPI/eLinuxCore_dongshannezhastu\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <ul> <li>\u5bf9\u4e8e\u65e0\u6cd5\u8bbf\u95eeGitHub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801\u3002</li> </ul> <pre><code>git clone https://gitee.com/weidongshan/eLinuxCore_dongshannezhastu.git\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <p>\u83b7\u53d6\u5b8c\u6210\u6e90\u7801\u540e\uff0c\u9700\u8981\u8fdb\u5165\u5230\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u8def\u5f84\u5230 \u5185\uff0c\u7528\u4e8e\u9a8c\u8bc1\u662f\u5426\u53ef\u7528\u3002</p> <pre><code>book@virtual-machine:~/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin$ ./riscv64-unknown-linux-gnu-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=./riscv64-unknown-linux-gnu-gcc\nCOLLECT_LTO_WRAPPER=/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin/../libexec/gcc/riscv64-unknown-linux-gnu/8.1.0/lto-wrapper\nTarget: riscv64-unknown-linux-gnu\nConfigured with: /ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/build/../source/riscv/riscv-gcc/configure --target=riscv64-unknown-linux-gnu --with-mpc=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --with-mpfr=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --with-gmp=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/lib-for-gcc-x86_64-linux/ --prefix=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/install --with-sysroot=/ldhome/software/toolsbuild/slave/workspace/riscv64_build_linux_x86_64/install/sysroot --with-system-zlib --enable-shared --enable-tls --enable-languages=c,c++,fortran --disable-libmudflap --disable-libssp --disable-libquadmath --disable-nls --disable-bootstrap --src=../../source/riscv/riscv-gcc --enable-checking=yes --with-pkgversion='C-SKY RISCV Tools V1.8.4 B20200702' --enable-multilib --with-abi=lp64d --with-arch=rv64gcxthead 'CFLAGS_FOR_TARGET=-O2  -mcmodel=medany' 'CXXFLAGS_FOR_TARGET=-O2  -mcmodel=medany' CC=gcc CXX=g++\nThread model: posix\ngcc version 8.1.0 (C-SKY RISCV Tools V1.8.4 B20200702)\n</code></pre> <p>\u5b8c\u6210\u4ee5\u540e \u6211\u4eec\u5c31\u53ef\u4ee5\u52a0\u5165\u5230 \u7cfb\u7edf\u7684 PATH\u73af\u5883\u53d8\u91cf\u5185\u3002</p> <p>\u9996\u5148 \u9700\u8981\u83b7\u53d6 \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u8fdb\u5165\u5230  <code>eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin</code>\u76ee\u5f55\u4e0b\u6267\u884c pwd \u547d\u4ee4\uff0c\u5373\u53ef\u5f97\u5230\u7edd\u5bf9\u8def\u5f84 <code>/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin</code> \u3002</p> <pre><code>book@virtual-machine:~/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin$ pwd\n/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u8bb2\u8fd9\u4e2a\u52a0\u5165\u5230\u7cfb\u7edf \u73af\u5883\u53d8\u91cf\u5185\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6267\u884c  \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4e86\u3002</p> <pre><code>export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\n</code></pre> <p>\u6ce8\u610f\uff1a\u6b64\u65b9\u5f0f\u53ea\u9488\u5bf9\u5f53\u524d\u7684\u7ec8\u7aef\u6709\u6548\uff0c\u5982\u679c\u4f60\u5173\u95ed\u4e86\u8fd9\u4e2a\u7ec8\u7aef\uff0c\u518d\u6b21\u5f00\u542f\u7ec8\u7aef \u9700\u8981\u91cd\u65b0\u6267\u884c\u624d\u53ef\u4ee5\u3002</p> <p>\u8fd8\u6709\u53e6\u4e00\u79cd\u6c38\u4e45\u751f\u6548\u7684\u65b9\u5f0f \u5c31\u662f\u5199\u5165\u5230 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u91cc\u9762\uff0c\u9700\u8981\u4fee\u6539  /etc/environment \u5728\u672b\u5c3e\u52a0\u4e0a \u4f60\u83b7\u53d6\u5230\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7edd\u5bf9\u8def\u5f84,\u6ce8\u610f\u4fee\u6539\u9700\u8981\u4f7f\u7528 sudo \u547d\u4ee4\u3002</p> <pre><code>book@virtual-machine:~$ cat /etc/environment\nPATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\"\n</code></pre>"},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/#hello-word_1","title":"\u7f16\u5199Hello word\u7a0b\u5e8f","text":"<ul> <li>\u914d\u7f6e\u597d\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff0c\u5982\u4e0b\u4e3a\u4e00\u4e2a\u6700\u7b80\u5355\u7684 hello word\u6253\u5370\u793a\u4f8b\u7a0b\u5e8f\u3002</li> </ul> <pre><code>#include &lt;stdio.h&gt;\nint main (void)\n{\n    printf(\"hello word!\\n\");\n    return 0;\n}    \n</code></pre> <p>\u7f16\u5199\u5b8c\u6210\u540e\uff0c\u4fdd\u5b58\u5230 helloword.c</p> <p>\u4e4b\u540e\u6211\u4eec\u6267\u884c \u5982\u4e0b\u7f16\u8bd1\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1 </p> <pre><code>book@virtual-machine:~$ vim helloword.c \nbook@virtual-machine:~$ riscv64-unknown-linux-gnu-gcc -o helloword helloword.c\nbook@virtual-machine:~$ file helloword\nhelloword: ELF 64-bit LSB executable, UCB RISC-V, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-riscv64xthead-lp64d.so.1, for GNU/Linux 4.15.0, with debug_info, not stripped\n</code></pre>"},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/#_3","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u63a8\u8fdb\u4f7f\u7528 \u7f51\u7edc\u65b9\u5f0f\uff0c\u7f51\u7edc\u4e5f\u6709\u5f88\u591a\uff0c\u6709TFTP\u4f20\u8f93\uff0c\u6709nfs\u4f20\u8f93\uff0c\u6709SFTP\u4f20\u8f93\uff0c\u5176\u4e2dnfs\u4f20\u8f93\u9700\u8981\u5185\u6838\u652f\u6301 nfs\u6587\u4ef6\u7cfb\u7edf\uff0cSFTP\u9700\u8981\u6839\u6587\u4ef6\u7cfb\u7edf\u652f\u6301 openssh\u7ec4\u4ef6\u670d\u52a1\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u8fd8\u662f\u9009\u7528tftp\u670d\u52a1\u3002</p>"},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/#tftp","title":"\u4f7f\u7528tftp\u7f51\u7edc\u670d\u52a1","text":"<ol> <li>\u9996\u5148\uff0c\u9700\u8981\u4f60\u7684ubuntu\u7cfb\u7edf\u652f\u6301 tftp\u670d\u52a1\uff0c\u5df2\u7ecf\u914d\u7f6e\u5e76\u4e14\u5b89\u88c5\u597d\uff0c\u7136\u540e\u8bb2\u7f16\u8bd1\u51fa\u6765\u7684 helloword\u7a0b\u5e8f \u62f7\u8d1d\u5230 tftp\u76ee\u5f55\u4e0b\u3002</li> </ol> <pre><code>book@virtual-machine:~$ cp helloword ~/tftpboot/\nbook@virtual-machine:~$ ls ~/tftpboot/helloword\n/home/book/tftpboot/helloword\nbook@virtual-machine:~$\n</code></pre> <ol> <li>\u8fdb\u5165\u5230\u5f00\u53d1\u677f\u5185\uff0c\u9996\u5148\u8ba9\u5f00\u53d1\u677f\u53ef\u4ee5\u83b7\u53d6\u5230IP\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u548c ubuntu\u7cfb\u7edfping\u901a(\u8fd9\u91cc\u6307\u7684\u662f\u7f16\u8bd1helloword\u4e3b\u673a)\uff0c\u4e4b\u540e\u6211\u4eec\u5728\u5f00\u53d1\u677f\u4e0a \u83b7\u53d6 helloword \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6267\u884c\u3002</li> </ol> <pre><code># udhcpc\nudhcpc: started, v1.35.0\nudhcpc: broadcasting discover\nudhcpc: broadcasting select for 192.168.1.47, server 192.168.1.1\nudhcpc: lease of 192.168.1.47 obtained from 192.168.1.1, lease time 86400\ndeleting routers\nadding dns 192.168.1.1\n# tftp -g -r helloword 192.168.1.133\n# ls\nhelloword\n</code></pre> <p>\u5982\u4e0a\u6240\u793a\uff0c\u6211\u7684ubuntu\u4e3b\u673aIP\u5730\u5740\u662f 192.168.1.133 \uff0c\u6240\u4ee5\u4f7f\u7528tftp \u4ece ubuntu\u83b7\u53d6helloword \u7a0b\u5e8f\uff0c\u83b7\u53d6\u901f\u5ea6\u6839\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/#usb-adb","title":"\u4f7f\u7528usb adb\u65b9\u5f0f","text":"<ul> <li>\u540e\u9762\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 usb otg  adb\u547d\u4ee4\u4f20\u8f93\u6587\u4ef6\u3002</li> </ul>"},{"location":"YuzukiHD-Chameleon/05-1_RunHelloword/#_4","title":"\u8fd0\u884c","text":"<p>\u4e0b\u8f7d\u597d\u7a0b\u5e8f\u4ee5\u540e\uff0c\u9700\u8981\u4f7f\u7528chmod +x \u547d\u4ee4\u6765\u7ed9\u7a0b\u5e8f\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\uff0c\u4e4b\u540e \u6211\u4eec\u5c31\u53ef\u4ee5\u6267\u884c \u8fd9\u4e2ahelloword\u5e94\u7528\u4e86\u3002</p> <pre><code># chmod +x helloword\n# ./helloword\nhello word!\n#\n</code></pre>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/","title":"\u7f16\u8bd1\u8fd0\u884cHelloword\u9a71\u52a8","text":""},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u4e1c\u5c71\u54ea\u5412STU \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002\u56e0\u4e3a\u6700\u521d\u7684\u5de5\u5177\u94fe\u662f \u963f\u91cc\u5e73\u5934\u54e5\u63d0\u4f9b\uff0c\u4ed6\u4eec\u7684\u5de5\u5177\u94fe \u4e0e GNU\u793e\u533a\u6807\u51c6\u7684\u5de5\u5177\u94fe\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u6240\u4ee5\u6211\u4eec\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528 \u793e\u533a\u7248\u672c\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\uff0c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#kernel","title":"\u83b7\u53d6kernel\u6e90\u7801\u5de5\u7a0b","text":"<p>\u6211\u4eec\u7684\u6e90\u7801\u90fd\u5b58\u653e\u5728\u4e0d\u540c\u7684git\u4ed3\u5e93\u5185\uff0c\u5176\u4e2d\u4ee5github\u4e3a\u4e3b\u8981\u6258\u7ba1\uff0c\u4e5f\u662f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u540c\u65f6\u4e5f\u4f1a\u4f7f\u7528 gitee\u4f5c\u4e3a\u5907\u7528\u7ad9\u70b9\uff0c\u6839\u636e\u5927\u5bb6\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u6765\u8fdb\u884c\u9009\u62e9\u3002</p> <ul> <li>\u5bf9\u4e8e\u53ef\u4ee5\u8bbf\u95eegithub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801</li> </ul> <pre><code>git clone https://github.com/DongshanPI/eLinuxCore_dongshannezhastu\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre> <ul> <li>\u5bf9\u4e8e\u65e0\u6cd5\u8bbf\u95eeGitHub\u7684\u540c\u5b66 \u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\u6e90\u7801\u3002</li> </ul> <pre><code>git clone https://gitee.com/weidongshan/eLinuxCore_dongshannezhastu.git\ncd  eLinuxCore_dongshannezhastu\ngit submodule update  --init --recursive\n</code></pre>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#_2","title":"\u914d\u7f6e\u5185\u6838\u7f16\u8bd1\u73af\u5883","text":"<p><pre><code>export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\nexport ARCH=riscv\nexport CROSS_COMPILE=riscv64-unknown-linux-gnu-\n</code></pre> <pre><code>book@100ask:~/eLinuxCore_dongshannezhastu/linux$ export ARCH=riscv\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ export CROSS_COMPILE=riscv64-unknown-linux-gnu-\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ export PATH=$PATH:/home/book/eLinuxCore_dongshannezhastu/toolchain/riscv64-glibc-gcc-thead_20200702/bin\nbook@100ask:~/NezhaSTU/eLinuxCore_dongshannezhastu/linux$ make sun20iw1p1_d1_defconfig\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  HOSTCC  scripts/kconfig/confdata.o\n  HOSTCC  scripts/kconfig/expr.o\n  LEX     scripts/kconfig/lexer.lex.c\n  YACC    scripts/kconfig/parser.tab.[ch]\n  HOSTCC  scripts/kconfig/lexer.lex.o\n  HOSTCC  scripts/kconfig/parser.tab.o\n  HOSTCC  scripts/kconfig/preprocess.o\n  HOSTCC  scripts/kconfig/symbol.o\n  HOSTLD  scripts/kconfig/conf\n#\n# configuration written to .config\n#\nbook@100ask:~/eLinuxCore_dongshannezhastu/linux$ make Image  -j8\n</code></pre></p>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#helloword_1","title":"\u7f16\u5199 helloword\u9a71\u52a8","text":"<p>hello_drv.c</p> <pre><code>#include &lt;linux/module.h&gt;\n\n#include &lt;linux/fs.h&gt;\n#include &lt;linux/errno.h&gt;\n#include &lt;linux/miscdevice.h&gt;\n#include &lt;linux/kernel.h&gt;\n#include &lt;linux/major.h&gt;\n#include &lt;linux/mutex.h&gt;\n#include &lt;linux/proc_fs.h&gt;\n#include &lt;linux/seq_file.h&gt;\n#include &lt;linux/stat.h&gt;\n#include &lt;linux/init.h&gt;\n#include &lt;linux/device.h&gt;\n#include &lt;linux/tty.h&gt;\n#include &lt;linux/kmod.h&gt;\n#include &lt;linux/gfp.h&gt;\n\n/* 1. \u786e\u5b9a\u4e3b\u8bbe\u5907\u53f7                                                                 */\nstatic int major = 0;\nstatic char kernel_buf[1024];\nstatic struct class *hello_class;\n\n\n#define MIN(a, b) (a &lt; b ? a : b)\n\n/* 3. \u5b9e\u73b0\u5bf9\u5e94\u7684open/read/write\u7b49\u51fd\u6570\uff0c\u586b\u5165file_operations\u7ed3\u6784\u4f53                   */\nstatic ssize_t hello_drv_read (struct file *file, char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_to_user(buf, kernel_buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic ssize_t hello_drv_write (struct file *file, const char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_from_user(kernel_buf, buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic int hello_drv_open (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\nstatic int hello_drv_close (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\n/* 2. \u5b9a\u4e49\u81ea\u5df1\u7684file_operations\u7ed3\u6784\u4f53                                              */\nstatic struct file_operations hello_drv = {\n    .owner   = THIS_MODULE,\n    .open    = hello_drv_open,\n    .read    = hello_drv_read,\n    .write   = hello_drv_write,\n    .release = hello_drv_close,\n};\n\n/* 4. \u628afile_operations\u7ed3\u6784\u4f53\u544a\u8bc9\u5185\u6838\uff1a\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f                                */\n/* 5. \u8c01\u6765\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f\u554a\uff1f\u5f97\u6709\u4e00\u4e2a\u5165\u53e3\u51fd\u6570\uff1a\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u5165\u53e3\u51fd\u6570 */\nstatic int __init hello_init(void)\n{\n    int err;\n\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    major = register_chrdev(0, \"hello\", &amp;hello_drv);  /* /dev/hello */\n\n\n    hello_class = class_create(THIS_MODULE, \"hello_class\");\n    err = PTR_ERR(hello_class);\n    if (IS_ERR(hello_class)) {\n        printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n        unregister_chrdev(major, \"hello\");\n        return -1;\n    }\n\n    device_create(hello_class, NULL, MKDEV(major, 0), NULL, \"hello\"); /* /dev/hello */\n\n    return 0;\n}\n\n/* 6. \u6709\u5165\u53e3\u51fd\u6570\u5c31\u5e94\u8be5\u6709\u51fa\u53e3\u51fd\u6570\uff1a\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u51fa\u53e3\u51fd\u6570           */\nstatic void __exit hello_exit(void)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    device_destroy(hello_class, MKDEV(major, 0));\n    class_destroy(hello_class);\n    unregister_chrdev(major, \"hello\");\n}\n\n\n/* 7. \u5176\u4ed6\u5b8c\u5584\uff1a\u63d0\u4f9b\u8bbe\u5907\u4fe1\u606f\uff0c\u81ea\u52a8\u521b\u5efa\u8bbe\u5907\u8282\u70b9                                     */\n\nmodule_init(hello_init);\nmodule_exit(hello_exit);\n\nMODULE_LICENSE(\"GPL\");\n</code></pre> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n/*\n * ./hello_drv_test -w abc\n * ./hello_drv_test -r\n */\nint main(int argc, char **argv)\n{\n    int fd;\n    char buf[1024];\n    int len;\n\n    /* 1. \u5224\u65ad\u53c2\u6570 */\n    if (argc &lt; 2) \n    {\n        printf(\"Usage: %s -w &lt;string&gt;\\n\", argv[0]);\n        printf(\"       %s -r\\n\", argv[0]);\n        return -1;\n    }\n\n    /* 2. \u6253\u5f00\u6587\u4ef6 */\n    fd = open(\"/dev/hello\", O_RDWR);\n    if (fd == -1)\n    {\n        printf(\"can not open file /dev/hello\\n\");\n        return -1;\n    }\n\n    /* 3. \u5199\u6587\u4ef6\u6216\u8bfb\u6587\u4ef6 */\n    if ((0 == strcmp(argv[1], \"-w\")) &amp;&amp; (argc == 3))\n    {\n        len = strlen(argv[2]) + 1;\n        len = len &lt; 1024 ? len : 1024;\n        write(fd, argv[2], len);\n    }\n    else\n    {\n        len = read(fd, buf, 1024);      \n        buf[1023] = '\\0';\n        printf(\"APP read : %s\\n\", buf);\n    }\n\n    close(fd);\n\n    return 0;\n}\n</code></pre> <p>Makefile:</p> <pre><code># 1. \u4f7f\u7528\u4e0d\u540c\u7684\u5f00\u53d1\u677f\u5185\u6838\u65f6, \u4e00\u5b9a\u8981\u4fee\u6539KERN_DIR\n# 2. KERN_DIR\u4e2d\u7684\u5185\u6838\u8981\u4e8b\u5148\u914d\u7f6e\u3001\u7f16\u8bd1, \u4e3a\u4e86\u80fd\u7f16\u8bd1\u5185\u6838, \u8981\u5148\u8bbe\u7f6e\u4e0b\u5217\u73af\u5883\u53d8\u91cf:\n# 2.1 ARCH,          \u6bd4\u5982: export ARCH=arm64\n# 2.2 CROSS_COMPILE, \u6bd4\u5982: export CROSS_COMPILE=aarch64-linux-gnu-\n# 2.3 PATH,          \u6bd4\u5982: export PATH=$PATH:/home/book/100ask_roc-rk3399-pc/ToolChain-6.3.1/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin \n# \u6ce8\u610f: \u4e0d\u540c\u7684\u5f00\u53d1\u677f\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u4e0a\u8ff03\u4e2a\u73af\u5883\u53d8\u91cf\u4e0d\u4e00\u5b9a\u76f8\u540c,\n#       \u8bf7\u53c2\u8003\u5404\u5f00\u53d1\u677f\u7684\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u624b\u518c\n\nKERN_DIR = /home/book/eLinuxCore_dongshannezhastu/linux/\n\nall:\n    make -C $(KERN_DIR) M=`pwd` modules \n    $(CROSS_COMPILE)gcc -o hello_drv_test hello_drv_test.c \n\nclean:\n    make -C $(KERN_DIR) M=`pwd` modules clean\n    rm -rf modules.order\n    rm -f hello_drv_test\n\nobj-m   += hello_drv.o\n</code></pre>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#_3","title":"\u7f16\u8bd1","text":"<pre><code>book@100ask:~$ make\nmake -C /home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux/ M=`pwd` modules\nmake[1]: Entering directory '/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux'\n  CC [M]  /home/book/NezhaSTU/hello_drv.o\n  Building modules, stage 2.\n  MODPOST 1 modules\n  CC [M]  /home/book/NezhaSTU/hello_drv.mod.o\n  LD [M]  /home/book/NezhaSTU/hello_drv.ko\nmake[1]: Leaving directory '/home/book/NezhaSTU/eLinuxCore_dongshannezhastu/linux'\nriscv64-unknown-linux-gnu-gcc -o hello_drv_test hello_drv_test.c\nbook@100ask:~$\n</code></pre>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#_4","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u63a8\u8fdb\u4f7f\u7528 \u7f51\u7edc\u65b9\u5f0f\uff0c\u7f51\u7edc\u4e5f\u6709\u5f88\u591a\uff0c\u6709TFTP\u4f20\u8f93\uff0c\u6709nfs\u4f20\u8f93\uff0c\u6709SFTP\u4f20\u8f93\uff0c\u5176\u4e2dnfs\u4f20\u8f93\u9700\u8981\u5185\u6838\u652f\u6301 nfs\u6587\u4ef6\u7cfb\u7edf\uff0cSFTP\u9700\u8981\u6839\u6587\u4ef6\u7cfb\u7edf\u652f\u6301 openssh\u7ec4\u4ef6\u670d\u52a1\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u8fd8\u662f\u9009\u7528tftp\u670d\u52a1\u3002</p>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#tftp","title":"\u4f7f\u7528tftp\u7f51\u7edc\u670d\u52a1","text":"<ol> <li>\u9996\u5148\uff0c\u9700\u8981\u4f60\u7684ubuntu\u7cfb\u7edf\u652f\u6301 tftp\u670d\u52a1\uff0c\u5df2\u7ecf\u914d\u7f6e\u5e76\u4e14\u5b89\u88c5\u597d\uff0c\u7136\u540e\u8bb2\u7f16\u8bd1\u51fa\u6765\u7684 helloword\u7a0b\u5e8f \u62f7\u8d1d\u5230 tftp\u76ee\u5f55\u4e0b\u3002</li> </ol> <pre><code>book@100ask:~$ cp hello_drv_test hello_drv.ko ~/tftpboot/\n</code></pre> <ol> <li>\u8fdb\u5165\u5230\u5f00\u53d1\u677f\u5185\uff0c\u9996\u5148\u8ba9\u5f00\u53d1\u677f\u53ef\u4ee5\u83b7\u53d6\u5230IP\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u548c ubuntu\u7cfb\u7edfping\u901a(\u8fd9\u91cc\u6307\u7684\u662f\u7f16\u8bd1helloword\u4e3b\u673a)\uff0c\u4e4b\u540e\u6211\u4eec\u5728\u5f00\u53d1\u677f\u4e0a \u83b7\u53d6 helloword \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6267\u884c\u3002</li> </ol> <pre><code># udhcpc\nudhcpc: started, v1.35.0\n[  974.154486] libphy: 4500000.eth: probed\n[  974.159083] sunxi-gmac 4500000.eth eth0: eth0: Type(8) PHY ID 001cc916 at 0 IRQ poll (4500000.eth-0:00)\nudhcpc: broadcasting discover\nudhcpc: broadcasting discover\n[  979.331180] sunxi-gmac 4500000.eth eth0: Link is Up - 1Gbps/Full - flow control off\n[  979.340154] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready\nudhcpc: broadcasting discover\nudhcpc: broadcasting select for 192.168.1.47, server 192.168.1.1\nudhcpc: lease of 192.168.1.47 obtained from 192.168.1.1, lease time 86400\ndeleting routers\nadding dns 192.168.1.1\n# [  992.315224] random: crng init done\n[  992.319022] random: 2 urandom warning(s) missed due to ratelimiting\n\n# tftp -g -r hello_drv.ko 192.168.1.133\n# tftp -g -r hello_drv_test  192.168.1.133\n# ls\nhello_drv.ko    hello_drv_test  helloword\n</code></pre> <p>\u5982\u4e0a\u6240\u793a\uff0c\u6211\u7684ubuntu\u4e3b\u673aIP\u5730\u5740\u662f 192.168.1.133 \uff0c\u6240\u4ee5\u4f7f\u7528tftp \u4ece ubuntu\u83b7\u53d6helloword \u7a0b\u5e8f\uff0c\u83b7\u53d6\u901f\u5ea6\u6839\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"YuzukiHD-Chameleon/05-2_RunHellowordDriver/#_5","title":"\u8fd0\u884c","text":"<pre><code># insmod hello_drv.ko\n[ 1007.072991] hello_drv: loading out-of-tree module taints kernel.\n[ 1007.081285] /home/book/NezhaSTU/hello_drv.c hello_init line 70\n# chmod +x hello_drv_test\n# ls /dev/h\nhdmi   hello\n# ls /dev/hello\n/dev/hello\n# ./hello_drv\nhello_drv.ko    hello_drv_test\n# ./hello_drv_test  -w abc\n[ 1060.000621] /home/book/NezhaSTU/hello_drv.c hello_drv_open line 45\n[ 1060.007613] /home/book/NezhaSTU/hello_drv.c hello_drv_write line 38\n[ 1060.015194] /home/book/NezhaSTU/hello_drv.c hello_drv_close line 51\n# ./hello_drv_test  -r\n[ 1062.312864] /home/book/NezhaSTU/hello_drv.c hello_drv_open line 45\n[ 1062.319853] /home/book/NezhaSTU/hello_drv.c hello_drv_read line 30\nAPP read : abc[ 1062.327680] /home/book/NezhaSTU/hello_drv.c hello_drv_close line 51\n\n#\n</code></pre>"},{"location":"YuzukiHD-Chameleon/06-ConfigHostEnv/","title":"\u5b89\u88c5\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":""},{"location":"YuzukiHD-Chameleon/06-ConfigHostEnv/#_2","title":"\u83b7\u53d6\u865a\u62df\u673a\u7cfb\u7edf","text":""},{"location":"YuzukiHD-Chameleon/06-ConfigHostEnv/#vmware","title":"\u4e0b\u8f7dvmware\u865a\u62df\u673a\u5de5\u5177","text":"<p>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u7f51\u5740    https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html   \u53c2\u8003\u4e0b\u56fe\u7bad\u5934\u6240\u793a\uff0c\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5 Windows\u7248\u672c\u7684VMware Workstation \uff0c\u70b9\u51fb DOWNLOAD NOW  \u5373\u53ef\u5f00\u59cb\u4e0b\u8f7d\u3002</p> <p></p> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u5168\u90e8\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u4e00\u6b65\u6b65\u5b89\u88c5\u5373\u53ef\u3002</p>"},{"location":"YuzukiHD-Chameleon/06-ConfigHostEnv/#ubuntu","title":"\u83b7\u53d6Ubuntu\u7cfb\u7edf\u955c\u50cf","text":"<ul> <li>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00  https://www.linuxvmimages.com/images/ubuntu-1804/     \u627e\u5230\u5982\u4e0b\u7bad\u5934\u6240\u793a\u4f4d\u7f6e\uff0c\u70b9\u51fb VMware Image \u4e0b\u8f7d\u3002</li> </ul> <p>\u4e0b\u8f7d\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u6301\u7eed 10 \u5230 30 \u5206\u949f\uff0c\u5177\u4f53\u8981\u4f9d\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"YuzukiHD-Chameleon/06-ConfigHostEnv/#_3","title":"\u8fd0\u884c\u865a\u62df\u673a\u7cfb\u7edf","text":"<ol> <li>\u89e3\u538b\u7f29 \u865a\u62df\u673a\u7cfb\u7edf\u955c\u50cf\u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u5982\u4e0b\u4e24\u4e2a\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 \u540e\u7f00\u540d\u4e3a .vmx \u8fd9\u4e2a \u914d\u7f6e\u6587\u4ef6\u3002</li> </ol> <ol> <li>\u6253\u5f00\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 vmware workstation \u8f6f\u4ef6 \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684 \u6587\u4ef6 \u2192 \u6253\u5f00 \u627e\u5230\u4e0a\u9762\u7684 Ubuntu_18.04.6_VM_LinuxVMImages.COM.vmx  \u6587\u4ef6\uff0c\u4e4b\u540e\u4f1a\u5f39\u51fa\u65b0\u7684\u865a\u62df\u673a\u5bf9\u8bdd\u6846\u9875\u9762\u3002</li> </ol> <ol> <li>\u5982\u4e0b\u56fe\u6240\u793a\u4e3a  \u4e3a\u6211\u4eec\u5df2\u7ecf\u865a\u62df\u673a\u7684\u914d\u7f6e\u754c\u9762\uff0c\u90a3\u9762\u6211\u4eec\u53ef\u4ee5 \u70b9\u51fb \u7ea2\u6846 2 \u7f16\u8f91\u865a\u62df\u673a\u8bbe\u7f6e \u91cc\u9762 \u53bb\u8c03\u6b63 \u6211\u4eec\u865a\u62df\u673a\u7684 \u5185\u5b58 \u5927\u5c0f \u548c\u5904\u7406\u5668\u4e2a\u6570\uff0c\u5efa\u8bae \u6700\u597d \u5185\u5b58\u4e3a 4GB \u53ca\u4ee5\u4e0a\uff0c\u5904\u7406\u5668\u81f3\u5c114 \u4e2a\u3002 \u8c03\u6574\u597d\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5 \u70b9\u51fb \u5f00\u542f\u6b64\u865a\u62df\u673a \u6765\u8fd0\u884c\u6b64\u865a\u62df\u673a\u4e86</li> </ol> <p>\u7b2c\u4e00\u6b21\u6253\u5f00\u4f1a\u63d0\u793a  \u4e00\u4e2a \u865a\u62df\u673a\u5df2\u7ecf\u590d\u5236\u7684 \u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u8fd9\u65f6\uff0c\u53ea\u9700\u8981 \u70b9\u51fb  \u6211\u5df2\u590d\u5236\u865a\u62df\u673a  \u5c31\u53ef\u4ee5\u7ee7\u7eed\u542f\u52a8\u865a\u62df\u673a\u7cfb\u7edf\u4e86\u3002</p> <p></p> <p>\u7b49\u5f85\u6570\u79d2\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u542f\u52a8\u4e86\uff0c\u542f\u52a8\u4ee5\u540e \u9f20\u6807\u70b9\u51fb   Ubuntu  \u5b57\u6837\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u767b\u5f55\u5bf9\u8bdd\u6846\uff0c\u8f93\u5165  \u5bc6\u7801 ubuntu \u5373\u53ef\u767b\u5f55\u8fdb\u5165ubuntu\u7cfb\u7edf\u5185\u3002</p> <p>\u6ce8\u610f\uff1a </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>ubuntu\u9ed8\u8ba4\u9700\u8981\u8054\u7f51\uff0c\u5982\u679c\u4f60\u7684 Windows\u7535\u8111\u5df2\u7ecf\u53ef\u4ee5\u8bbf\u95eeInternet \u4e92\u8054\u7f51\uff0cubuntu\u7cfb\u7edf\u540e\u5c31\u4f1a\u81ea\u52a8\u5171\u4eab Windows\u7535\u8111\u7684\u7f51\u7edc \u8fdb\u884c\u8fde\u63a5internet \u7f51\u7edc\u3002</p>"},{"location":"YuzukiHD-Chameleon/06-ConfigHostEnv/#_4","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li>\u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\u5305, \u9f20\u6807\u70b9\u51fb\u8fdb\u5165 ubuntu\u754c\u9762\u5185\uff0c\u952e\u76d8\u540c\u65f6 \u6309\u4e0b ctrl + alt + t \u4e09\u4e2a\u6309\u952e\u4f1a\u5feb\u901f\u5524\u8d77\uff0c\u7ec8\u7aef\u754c\u9762\uff0c\u5524\u8d77\u6210\u529f\u540e\uff0c\u5728\u7ec8\u7aef\u91cc\u9762\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305\u3002</li> </ul> <pre><code>sudo apt-get install -y  sed make binutils build-essential  gcc g++ bash patch gzip bzip2 perl  tar cpio unzip rsync file  bc wget python  cvs git mercurial rsync  subversion android-tools-mkbootimg vim  libssl-dev  android-tools-fastboot\n</code></pre> <p>\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684ubuntu\u865a\u62df\u673a \u7b2c\u4e00\u6b21\u542f\u52a8 \u65e0\u6cd5 \u901a\u8fc7 windows\u4e0b\u590d\u5236 \u547d\u4ee4 \u7c98\u8d34\u5230 ubuntu\u5185\uff0c\u5219\u9700\u8981\u5148\u624b\u6572 \u6267\u884c\u5982\u4e0b\u547d\u4ee4 \u5b89\u88c5\u4e00\u4e2a \u7528\u4e8e \u865a\u62df\u673a\u548c windows\u5171\u4eab\u526a\u5207\u677f\u7684\u5de5\u5177\u5305\u3002</p> <pre><code>sudo apt install open-vm-tools-desktop \n</code></pre> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u7535\u6e90\u6309\u94ae\uff0c\u91cd\u542fubuntu\u7cfb\u7edf\uff0c\u6216\u8005 \u76f4\u63a5\u8f93\u5165 sudo reboot \u547d\u4ee4\u8fdb\u884c\u91cd\u542f\u3002</p> <p>\u8fd9\u65f6\u5c31\u53ef\u4ee5 \u901a\u8fc7windows\u7aef\u5411ubuntu\u5185\u7c98\u8d34\u6587\u4ef6\uff0c\u6216\u8005\u62f7\u8d1d\u62f7\u51fa\u6587\u4ef6\u4e86\u3002</p> <p></p> <p>\u505a\u5b8c\u8fd9\u4e00\u6b65\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\uff0c\u83b7\u53d6\u6e90\u7801 \u5f00\u59cbRISC-V \u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u7684\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002</p>"},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#_1","title":"\u7b80\u4ecb","text":"<ul> <li>\u6b64\u5957\u6784\u5efa\u7cfb\u7edf\u57fa\u4e8e\u5168\u5fd7RISCV-64 Linux D1-H  \u82af\u7247\uff0c\u9002\u914d\u4e86buildroot 2022lts\u4e3b\u7ebf\u7248\u672c\uff0c\u517c\u5bb9\u4e86\u767e\u95ee\u7f51\u7684\u9879\u76ee\u8bfe\u7a0b\u4ee5\u53ca\u76f8\u5173\u7ec4\u4ef6\uff0c\u771f\u6b63\u505a\u5230\u4e86\u4f4e\u8026\u5408\uff0c\u9ad8\u53ef\u7528\uff0c\u4f7f\u7528\u4e0d\u540c\u7684buildroot external tree\u89c4\u683c\uff0c\u8bb2\u4e0d\u540c\u7684\u9879\u76ee \u4e0d\u540c\u7684\u7ec4\u4ef6\u5206\u522b\u7ba1\u7406\uff0c\u6765\u5b9e\u73b0\u66f4\u5bb9\u6613\u4e0a\u624b \u4e5f\u66f4\u5bb9\u6613\u5b66\u4e60\u7406\u89e3\u3002</li> </ul>"},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#sdk","title":"\u83b7\u53d6sdk\u6e90\u7801","text":"<ul> <li>\u9ed8\u8ba4\u6e90\u7801\u90fd\u5b58\u653e\u5728github\u4ed3\u5e93\u5185\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6</li> </ul> <pre><code>book@virtual-machine:~$ git clone  https://github.com/DongshanPI/buildroot_dongshannezhastu\nbook@virtual-machine:~$ cd buildroot_dshannezhastu\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --init --recursive\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --recursive --remote\n</code></pre> <ul> <li>\u5bf9\u4e8e\u56fd\u5185\u65e0\u6cd5\u8bbf\u95eegithub\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u4f7f\u7528\u56fd\u5185\u5907\u7528gitee\u7ad9\u70b9\uff0c \u5982\u4e0b\u547d\u4ee4\u3002</li> </ul> <pre><code>book@virtual-machine:~$ git clone  https://gitee.com/weidognshan/buildroot_dongshannezhastu\nbook@virtual-machine:~$ cd buildroot_dshannezhastu\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --init --recursive\nbook@virtual-machine:~/buildroot_dongshannezhastu$ git submodule update --recursive --remote\n</code></pre>"},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#_2","title":"\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305","text":""},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#ubuntu-1804","title":"ubuntu-18.04","text":"<p>\u8fd0\u884c\u73af\u5883\u914d\u7f6e\uff1a \u6b64\u7cfb\u7edf\u57fa\u4e8eubuntu18.04\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5728\u4e4b\u524d\u7684\u57fa\u7840\u4e4b\u4e0a\u8fd8\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5fc5\u8981\u4f9d\u8d56</p> <pre><code> sudo apt-get install -y  libncurses5-dev   u-boot-tools\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5f00\u59cb\u7f16\u8bd1\u64cd\u4f5c\u3002</p>"},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#_3","title":"\u6700\u5c0f\u7cfb\u7edf\u7f16\u8bd1\u70e7\u5199","text":""},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#sdcard","title":"\u7f16\u8bd1sdcard \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<pre><code>book@virtual-machine:~/buildroot_dongshannezhastu$ cd buildroot-awol/\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make  BR2_EXTERNAL=\"../br2lvgl  ../br2qt5 ../br2nezhastu\"  dongshannezhastu_sdcard_core_defconfig\n\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make \n</code></pre>"},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#sdcard_1","title":"\u70e7\u5199sdcard \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u5728 output/images\u76ee\u5f55\u4e0b\u8f93\u51fa dongshannezhastu-sdcard.img \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230Windows\u7cfb\u7edf\u4e0b\u4f7f\u7528 wind32diskimage\u70e7\u5199\uff0c\u6216\u8005\u4f7f\u7528dd if \u70e7\u5f55\u5230tf\u5361\u5185\uff0c \u4e4b\u540e\u63d2\u5230\u5f00\u53d1\u677f\u4e0a\uff0c\u5373\u53ef\u542f\u52a8\u3002 \u8bf7\u53c2\u8003\u5de6\u4fa7 \u5feb\u901f\u542f\u52a8 \u9875\u9762</p>"},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#spi-nand","title":"\u7f16\u8bd1spi nand\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<pre><code>book@virtual-machine:~/buildroot_dongshannezhastu$ cd buildroot-awol/\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make  BR2_EXTERNAL=\"../br2lvgl  ../br2qt5 ../br2nezhastu\"  dongshannezhastu_spinand_core_defconfig\n\nbook@virtual-machine:~/buildroot_dongshannezhastu/buildroot-awol$ make \n</code></pre>"},{"location":"YuzukiHD-Chameleon/07-Buildroot-SDK_DevelopmentGuide/#spi-nand_1","title":"\u70e7\u5199spi nand\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u5728 output/images\u76ee\u5f55\u4e0b\u8f93\u51fa d1-h-nezhastu_uart0.img \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230Windows\u7cfb\u7edf\u4e0b\u4f7f\u7528 \u4f7f\u7528 \u5168\u5fd7\u5b98\u65b9\u7684  AllwinnertechPhoeniSuit \u8fdb\u884c\u70e7\u5199\u3002 \u8be6\u7ec6\u70e7\u5199\u6b65\u9aa4\u8bf7\uff0c\u8bf7\u53c2\u8003\u5de6\u4fa7 \u5feb\u901f\u542f\u52a8 \u9875\u9762\u3002</p>"},{"location":"YuzukiHD-Chameleon/08-BuildBootloader/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efaBootloader","text":"<ul> <li>\u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\uff0cBootloader\u75314\u90e8\u5206\u7ec4\u6210\uff0c \u7b2c\u4e00\u90e8\u5206\u662f boot0 \u9636\u6bb5\uff0c\u7528\u4e8e\u521d\u59cb\u5316CPU DDR UART \u65f6\u949f\u7b49\u4e00\u4e9b\u5fc5\u8981\u5916\u8bbe\u548c\u5f15\u811a\u5206\u914d\uff0c\u4e4b\u540e\u8fdb\u5165\u7b2c\u4e8c\u90e8\u5206\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f opensbi  uboot  board.dtb \u8fd9\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u4e3a\u4e00\u4e2a boot_package.fex \u6587\u4ef6\u3002</li> <li>\u6240\u4ee5Bootloader\u7684\u6574\u4f53\u7684\u542f\u52a8\u6d41\u7a0b\u662f\uff0cboot0\u2192opensbi\u2192u-boot\u2192board.dtb</li> </ul>"},{"location":"YuzukiHD-Chameleon/08-BuildBootloader/#_1","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e00\u90e8\u5206","text":""},{"location":"YuzukiHD-Chameleon/08-BuildBootloader/#_2","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e8c\u90e8\u5206","text":""},{"location":"YuzukiHD-Chameleon/08-BuildBootloader/#opensbi","title":"\u5355\u72ec\u7f16\u8bd1 opensbi","text":"<ul> <li>\u5355\u72ec\u7f16\u8bd1 opensbi\u9636\u6bb5 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$  make opensbi-rebuild V=1\n</code></pre></li> </ul>"},{"location":"YuzukiHD-Chameleon/08-BuildBootloader/#uboot","title":"\u5355\u72ec\u7f16\u8bd1 uboot","text":"<ul> <li>\u5355\u72ec\u7f16\u8bd1 uboot\u9636\u6bb5 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$  make uboot-rebuild V=1\n</code></pre></li> </ul>"},{"location":"YuzukiHD-Chameleon/08-BuildBootloader/#boarddtb","title":"\u5355\u72ec\u7f16\u8bd1 board.dtb","text":""},{"location":"YuzukiHD-Chameleon/09-BuildLinuxKernel/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6253\u5305Linux Kernel","text":""},{"location":"YuzukiHD-Chameleon/09-BuildLinuxKernel/#_1","title":"\u5355\u72ec\u7f16\u8bd1\u5404\u4e2a\u90e8\u5206","text":"<ul> <li> <p>\u5355\u72ec\u7f16\u8bd1 kernel\u9636\u6bb5 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$  make linux-rebuild V=1\n</code></pre></p> </li> <li> <p>\u5355\u72ec\u7f16\u8bd1\u6587\u4ef6\u7cfb\u7edf</p> </li> <li>\u6307\u5b9a\u5b8c\u6210\u5de5\u5177\u94fe \u7cfb\u7edf\u914d\u7f6e \u9700\u8981\u5b89\u88c5\u7684\u5305 \u4ee5\u53ca\u6240\u9700\u7684\u683c\u5f0f \u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u6700\u540e\u751f\u6210\u7684\u955c\u50cf\u5728 output/image\u76ee\u5f55\u4e0b\u3002 <pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  all //\u5b8c\u6574\u7f16\u8bd1\u7cfb\u7edf\n</code></pre></li> </ul>"},{"location":"YuzukiHD-Chameleon/10-1_BuildrootSupportWifiBluetooth/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"YuzukiHD-Chameleon/10-1_BuildrootSupportWifiBluetooth/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6ebusybox","text":"<pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  busybox-menuconfig\n</code></pre>"},{"location":"YuzukiHD-Chameleon/10-1_BuildrootSupportWifiBluetooth/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>rm -rf  output/target;    find output/build/ -name .stamp_target_installed | xargs rm ; make\n</code></pre>"},{"location":"YuzukiHD-Chameleon/10-BuildRootfs/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":""},{"location":"YuzukiHD-Chameleon/10-BuildRootfs/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6ebusybox","text":"<pre><code>book@virtual-machine:~/Neza-D1/buildroot-2021$ make  busybox-menuconfig\n</code></pre>"},{"location":"YuzukiHD-Chameleon/10-BuildRootfs/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>rm -rf  output/target;    find output/build/ -name .stamp_target_installed | xargs rm ; make\n</code></pre>"},{"location":"YuzukiHD-Chameleon/11-Tina-SDK_DevelopmentGuide/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"YuzukiHD-Chameleon/11-Tina-SDK_DevelopmentGuide/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li> <p>\u8bbf\u95ee https://d1.docs.aw-ol.com/study/study_1tina/</p> </li> <li> <p>\u4f7f\u7528\u6211\u4eec\u63d0\u524d\u6574\u7406\u597d\u7684\u8d44\u6599\u5149\u76d8 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/13uKlqDXImmMl9cgKc41tZg?pwd=qcw7  \u63d0\u53d6\u7801\uff1aqcw7 </p> </li> </ul>"},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/","title":"\u67da\u6728PI\u8725\u8734\u786c\u4ef6\u7b80\u8ff0","text":"<ul> <li>\u6b64\u5f00\u53d1\u677f\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u793e\u533a\u8ba8\u8bba  https://forums.100ask.net/c/aw/v851s/70</li> </ul>"},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_1","title":"\u786c\u4ef6\u7b80\u8ff0","text":"<p>\u67da\u6728PI-\u8725\u8734\u5f00\u53d1\u677f\u662f\u5d4c\u5165\u5f0f\u5708\u5185YuzuKi\u5927\u4f6c\u8bbe\u8ba1\uff0c\u767e\u95ee\u7f51\u91cf\u4ea7\u5e76\u63d0\u4f9b\u914d\u5957\u786c\u4ef6\u6a21\u5757\u4ee5\u53ca\u5feb\u901f\u4e0a\u624b\u6587\u6863\u652f\u6301\uff0c\u67da\u6728PI-\u8725\u8734\u57fa\u4e8e\u5168\u5fd7V851s\u82af\u7247\uff0c\u662f\u4e00\u6b3e\u4e13\u7528\u4e8eIPC\u7f51\u7edc\u6444\u50cf\u5934\u65b9\u6848\u8bbe\u8ba1\u7684\u82af\u7247\u3002\u4e3b\u8981\u7528\u4e8e\u5d4c\u5165\u5f0fLinux AI\u5b66\u4e60\u5f00\u53d1\u3002</p> <ul> <li>SOC\uff1a\u5355\u6838ARM Cortex-A7@900Mhz \u8fd0\u884clinux \u5355\u6838RISC-V E907@600Mhz\u8fd0\u884cRTOS</li> <li>NPU: \u6700\u5927\u7b97\u529b0.5Tops\u652f\u6301 \u652f\u6301TensorFlow\u3001Caffe\u3001Tflite\u3001\u548cOnnx\u7b49\u591a\u79cd\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6</li> <li>DDR\uff1a\u5185\u7f6eSIP 64 MB DDR2</li> <li>Flash: 128MB SPI NandFlash \u53e6\u5916\u652f\u6301 \u6700\u5927\u5bb9\u91cf128G TF\u5361</li> <li>Audio: \u652f\u6301\u5916\u63a5\u529f\u653e\u6a21\u5757</li> <li>Display\uff1a \u652f\u63011*2-lane MIPI DSI\u8f93\u51fa\uff0c\u6700\u5927\u652f\u63011280x720@60fps</li> <li>Camera: \u652f\u63012-lan MIPI CSI\u63a5\u53e3\u6444\u50cf\u5934\uff0c\u6700\u9ad8\u89c6\u9891\u91c7\u96c6\u5206\u8fa8\u7387 4M@30fps</li> <li>Wireless: \u652f\u63012.4GHz WIFI\u65e0\u7ebf\u7f51\u7edc\u534f\u8bae\uff0c\u4ee5\u53ca\u6807\u51c6\u84dd\u7259\u53ca\u4f4e\u529f\u8017\u84dd\u7259\u534f\u8bae\u3002</li> <li>Other:  GPIO\u652f\u63012\u8defIIC\uff0c\u4e00\u8defSPI\uff0c\u4e00\u8defuart\uff0c\u4e09\u8defPWM</li> </ul> <p></p> <p>V851S\u62e5\u6709\u5168\u65b0\u4e00\u4ee3\u9ad8\u6027\u80fd\u7684ISP\u56fe\u50cf\u5904\u7406\u6a21\u5757\u53ca\u89c6\u9891\u7f16\u7801\u5668\uff0c\u5177\u5907\u8f83\u9ad8\u7684\u7f16\u7801\u8d28\u91cf\u3001\u8f83\u4f4e\u7684\u7f16\u7801\u7801\u7387\u548c\u884c\u4e1a\u4e3b\u6d41\u6c34\u51c6\u7684\u56fe\u50cf\u5904\u7406\u80fd\u529b\u3002\u540c\u65f6\uff0c\u8be5\u82af\u7247\u5185\u90e8\u96c6\u6210\u4e8664MBDDR2\u5b58\u50a8\u5668\uff0c\u62e5\u6709\u5b8c\u5907\u7684\u5e94\u7528\u6240\u9700\u5916\u8bbe\u63a5\u53e3\uff0c\u5305\u62ecUSB\uff0cSDIO\u548cEthernet\u7b49\uff0c\u53ef\u9002\u7528\u4e8e\u591a\u79cd\u7f51\u7edc\u6444\u50cf\u673a\u4ea7\u54c1\u3002</p>"},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_2","title":"\u82af\u7247\u67b6\u6784","text":""},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_3","title":"\u82af\u7247\u67b6\u6784\u6846\u56fe","text":""},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_4","title":"\u82af\u7247\u5e94\u7528\u6846\u56fe","text":""},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_5","title":"\u652f\u6301\u7684\u6269\u5c55\u6a21\u5757","text":""},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#mipi","title":"MIPI\u6444\u50cf\u5934","text":"<ul> <li>\u652f\u6301GC2053 MIPI\u6444\u50cf\u5934\uff0c\u73b0\u5df2\u4e0a\u67b6</li> </ul>"},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#mipi_1","title":"MIPI\u663e\u793a\u5c4f","text":"<ul> <li>\u652f\u6301MIPI \u53ccLANE 480x800\u5206\u8fa8\u7387\u663e\u793a\u5c4f\uff0c\u5e26\u7535\u5bb9\u89e6\u6478(\u6682\u672a\u4e0a\u67b6)\u3002</li> </ul>"},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_6","title":"\u5176\u5b83\u6269\u5c55\u6a21\u5757","text":"<ul> <li>\u626c\u58f0\u5668</li> <li>\u6392\u9488 I2C SPI GPIO\u7b49\u6269\u5c55\u6a21\u5757</li> </ul>"},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_7","title":"\u5546\u54c1\u8d2d\u4e70","text":"<ul> <li>\u56fd\u5185\uff1a https://item.taobao.com/item.htm?&amp;id=692970888824</li> <li>\u56fd\u5916\uff1a https://www.aliexpress.com/item/1005005034517794.html</li> </ul>"},{"location":"YuzukiHD-Lizard/01-BoardIntroduction/#_8","title":"\u4f7f\u7528\u6307\u5357","text":""},{"location":"YuzukiHD-Lizard/02-SupportingResources/","title":"\u914d\u5957\u8d44\u6e90","text":""},{"location":"YuzukiHD-Lizard/02-SupportingResources/#_1","title":"\u914d\u5957\u8d44\u6e90","text":""},{"location":"YuzukiHD-Lizard/02-SupportingResources/#v851s","title":"V851s\u82af\u7247\u624b\u518c","text":"<ul> <li> <p>V851s\u82af\u7247Brief: https://github.com/YuzukiHD/Yuzukilizard/blob/master/Hardware/Datasheets/V851S_Brief_EN_V1.0.pdf</p> </li> <li> <p>V851s\u6570\u636e\u624b\u518c: https://github.com/YuzukiHD/Yuzukilizard/blob/master/Hardware/Datasheets/V851S%26V851SE_Datasheet_V1.0.pdf</p> </li> </ul>"},{"location":"YuzukiHD-Lizard/02-SupportingResources/#_2","title":"\u5f00\u53d1\u677f\u786c\u4ef6\u8d44\u6e90","text":"<ul> <li> <p>\u539f\u7406\u56fe\u8d44\u6e90\uff1ahttps://github.com/YuzukiHD/Yuzukilizard/blob/master/Hardware/Schematic/SCH_Schematic1_2022-11-23.pdf</p> </li> <li> <p>\u5f00\u53d1\u677f\u5c3a\u5bf8\u56fe\uff1a</p> </li> </ul>"},{"location":"YuzukiHD-Lizard/02-SupportingResources/#sdk","title":"\u5f00\u53d1\u677f\u914d\u5957SDK\u6e90\u7801","text":"<p>\u67da\u6728PI-\u8725\u8734\u5f00\u53d1\u677f\u662f\u57fa\u4e8e\u5168\u5fd7V851s\u8bbe\u8ba1\uff0c\u5168\u5fd7\u539f\u5382\u63d0\u4f9b\u7684\u6e90\u7801\u662f\u5185\u90e8\u5728openwrt\u57fa\u7840\u4e0a\u81ea\u5b9a\u4e49\u7684\u4e00\u5957 Linux\u7cfb\u7edf\uff0c\u6211\u4eec\u8981\u9488\u5bf9\u4e8eV851s\u5f00\u53d1 \u5c31\u9700\u8981\u5148\u83b7\u53d6\u5bf9\u5e94\u7684sdk \u7136\u540e\u5728Ubuntu\u5185\u8fdb\u884c\u89e3\u538b\u7f29 \u6765\u7f16\u8bd1\u3002 tina-sdk\u538b\u7f29\u5305\uff0c\u538b\u7f29\u5305\u5206\u4e3a\u56fd\u5185\u56fd\u5916\u4e24\u4e2a\u5b58\u653e\u4f4d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5927\u5c0f\u5927\u698211G\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u62f7\u8d1d\u5230\u63d0\u524d\u914d\u7f6e\u597dHost\u5f00\u53d1\u73af\u5883\u7684ubuntu\u7cfb\u7edf\u5185\uff0c\u7136\u540e\u53c2\u8003 \u4e0b\u8f7d\u7684\u76ee\u5f55\u5185\u7684README.txt\u6587\u6863 \u8fdb\u884c\u89e3\u538b\u7f29\u3002</p> <ul> <li>\u56fd\u5916- GoogleDriver\uff1a https://drive.google.com/drive/folders/1_HAZRddR69hRMZAVrxFrPZXFFQiV3vE0?usp=share_link</li> <li>\u56fd\u5185- BaiduYun:  https://pan.baidu.com/s/115gVK-8Pt-vJi8jn2AWMYw?pwd=7n4q \u63d0\u53d6\u7801\uff1a7n4q </li> </ul>"},{"location":"YuzukiHD-Lizard/02-SupportingResources/#tina-sdk","title":"Tina-SDK\u5f00\u53d1\u6587\u6863","text":"<p>\u4e3a\u4e86\u8ba9\u5927\u5bb6\u53ef\u4ee5\u66f4\u597d\u7684\u4f7f\u7528\u6b64\u5f00\u53d1\u677f\uff0c\u6211\u4eec\u4e13\u95e8\u63d0\u4f9b\u4e86\u4e00\u4e2a \u9488\u5bf9\u4e8e Tina-sdk\u7684\u5728\u7ebf\u5f00\u53d1\u6587\u6863\u7ad9\u70b9 tina.100ask.net</p>"},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/","title":"\u66f4\u65b0\u7cfb\u7edf\u56fa\u4ef6","text":""},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/#_2","title":"\u652f\u6301\u7684\u7cfb\u7edf\u955c\u50cf","text":"<ul> <li>\u8bbf\u95ee\u955c\u50cf\u53d1\u5e03\u7ad9\u70b9\u83b7\u53d6\uff1a https://github.com/YuzukiHD/Yuzukilizard/releases</li> <li>https://github.com/YuzukiHD/Yuzukilizard/releases/tag/1.0.2</li> <li>https://github.com/YuzukiHD/Yuzukilizard/releases/tag/1.0.0</li> <li>https://github.com/YuzukiHD/Yuzukilizard/releases/tag/1.0.1</li> </ul>"},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/#spi-nand","title":"\u70e7\u5199\u56fa\u4ef6\u81f3SPI NAND","text":""},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/#_3","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ol> <li>\u67da\u6728PI-\u8725\u8734\u5f00\u53d1\u677f\u4e3b\u677f x1</li> <li>\u4e0b\u8f7d\u5168\u5fd7\u7ebf\u5237\u5de5\u5177AllwinnertechPhoeniSuit\uff1a https://gitlab.com/dongshanpi/tools/-/raw/main/AllwinnertechPhoeniSuit.zip</li> <li>TypeC\u7ebf X1</li> <li>\u4e0b\u8f7dSPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/v851s_linux_lizard_uart0.7z</li> <li>\u4e0b\u8f7d\u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8\uff1ahttps://gitlab.com/dongshanpi/tools/-/raw/main/AllwinnerUSBFlashDeviceDriver.zip</li> </ol>"},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/#_4","title":"\u8fde\u63a5\u5f00\u53d1\u677f","text":"<p>\u53c2\u8003\u4e0b\u56fe\u6240\u793a\uff0c\u5c06TypeC\u7ebf**\u53cd\u63a5**\u81f3 \u5f00\u53d1\u677f OTG\u70e7\u5199\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef \u8fde\u63a5\u81f3 \u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u5c06\u4e0b\u8f7d\u597d\u7684 \u70e7\u5199\u5de5\u5177\u548c SPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf\u89e3\u538b\u7f29 \u4f7f\u7528\u3002 </p>"},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/#usb","title":"\u5b89\u88c5usb\u9a71\u52a8","text":"<p>\u5728\u6211\u4eec**\u53cd\u63a5**\u5f00\u53d1\u677f\u4ee5\u540e\uff0c\u5148\u6309\u4f4f FEL \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b RESET \u7cfb\u7edf\u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u3002</p> <p>\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8bbe\u5907\u7ba1\u7406\u5668  \u901a\u7528\u4e32\u884c\u603b\u7ebf\u63a7\u5236\u5668 \u5f39\u51fa\u4e00\u4e2a  \u672a\u77e5\u8bbe\u5907 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u628a\u6211\u4eec\u63d0\u524d\u4e0b\u8f7d\u597d\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8 \u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u5c06\u89e3\u538b\u7f29\u8fc7\u7684 \u5168\u5fd7USB\u70e7\u5f55\u9a71\u52a8  \u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u8fd9\u4e48\u51e0\u4e2a\u6587\u4ef6\u3002</p> <pre><code>InstallUSBDrv.exe\ndrvinstaller_IA64.exe\ndrvinstaller_X86.exe\nUsbDriver/          \ndrvinstaller_X64.exe   \ninstall.bat\n</code></pre> <p>\u5bf9\u4e8ewind7\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u53ea\u9700\u8981\u4ee5\u7ba1\u7406\u5458 \u6253\u5f00   <code>install.bat</code> \u811a\u672c\uff0c\u7b49\u5f85\u5b89\u88c5\uff0c\u5728\u5f39\u51fa\u7684 \u662f\u5426\u5b89\u88c5\u9a71\u52a8\u7684\u5bf9\u8bdd\u6846\u91cc\u9762\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8ewind10/wind11\u7cfb\u7edf\u7684\u540c\u5b66\uff0c\u9700\u8981\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u91cc\u9762\u8fdb\u884c\u624b\u52a8\u5b89\u88c5\u9a71\u52a8\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5728\u7b2c\u4e00\u6b21\u63d2\u5165OTG\u8bbe\u5907\uff0c\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u8bbe\u5907\u7ba1\u7406\u5668\u4f1a\u5f39\u51fa\u4e00\u4e2a\u672a\u77e5\u8bbe\u5907\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\u9f20\u6807\u53f3\u952e\u70b9\u51fb\u8fd9\u4e2a\u672a\u77e5\u8bbe\u5907\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c \u70b9\u51fb\u6d4f\u89c8\u6211\u8ba1\u7b97\u673a\u4ee5\u67e5\u627e\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\u3002</p> <p></p> <p>\u4e4b\u540e\u5728\u5f39\u51fa\u65b0\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u70b9\u51fb\u6d4f\u89c8\u627e\u5230\u6211\u4eec\u4e4b\u524d\u4e0b\u8f7d\u597d\u7684 usb\u70e7\u5f55\u9a71\u52a8\u6587\u4ef6\u5939\u5185\uff0c\u627e\u5230 <code>UsbDriver/</code> \u8fd9\u4e2a\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\uff0c\u4e4b\u540e\u70b9\u51fb\u786e\u5b9a\u5373\u53ef\u3002</p> <p></p> <p>\u6ce8\u610f\u8fdb\u5165\u5230  <code>UsbDriver/</code>  \u6587\u4ef6\u5939\uff0c\u7136\u540e\u70b9\u51fb\u786e\u5b9a\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u7ee7\u7eed\u70b9\u51fb \u4e0b\u4e00\u9875 \u6309\u94ae\uff0c\u8fd9\u65f6\u7cfb\u7edf\u5c31\u4f1a\u63d0\u793a\u5b89\u88c5\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u3002  \u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u91cc\uff0c\u6211\u4eec\u70b9\u51fb \u59cb\u7ec8\u5b89\u88c5\u6b64\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6 \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\u3002</p> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f1a\u63d0\u793a\uff0cWindows\u5df2\u6210\u529f\u66f4\u65b0\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002</p> <p></p> <p>\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8bbe\u5907\u7ba1\u7406\u5668 \u91cc\u9762\u7684\u672a\u77e5\u8bbe\u5907 \u53d8\u6210\u4e86\u4e00\u4e2a <code>USB Device(VID_1f3a_efe8)</code>\u7684\u8bbe\u5907\uff0c\u8fd9\u65f6\u5c31\u8868\u660e\u8bbe\u5907\u9a71\u52a8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002</p> <p></p>"},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/#_5","title":"\u8fd0\u884c\u8f6f\u4ef6\u70e7\u5199","text":"<p>\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684\u5168\u5fd7\u7ebf\u5237\u5de5\u5177 AllwinnertechPhoeniSuit \u89e3\u538b\u7f29\uff0c\u540c\u65f6\u5c06**SPI NAND\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf**\u4e0b\u8f7d\u4e0b\u6765\u4e5f\u8fdb\u884c\u89e3\u538b\u7f29\u3002</p> <p>\u89e3\u538b\u540e\uff0c\u5f97\u5230\u4e00\u4e2a tina_v851s-perf1_uart0.img \u955c\u50cf\uff0c\u662f\u7528\u4e8e\u70e7\u5f55\u5230SPI NAND\u955c\u50cf\u5f97\u3002\u53e6\u4e00\u4e2a\u662f**AllwinnertechPhoeniSuit**\u6587\u4ef6\u5939\u3002</p> <p>\u9996\u5148\u6211\u4eec\u8fdb\u5165\u5230 AllwinnertechPhoeniSuit\\AllwinnertechPhoeniSuitRelease20201225 \u76ee\u5f55\u4e0b \u627e\u5230 PhoenixSuit.exe \u53cc\u51fb\u8fd0\u884c\u3002</p> <p>\u6253\u5f00\u8f6f\u4ef6\u540e \u8f6f\u4ef6\u4e3b\u754c\u9762\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p> <p>\u200b   \u63a5\u4e0b\u6765 \u6211\u4eec\u9700\u8981\u5207\u6362\u5230 \u4e00\u952e\u5237\u673a**\u7a97\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u70b9\u51fb\u7ea2\u6846\u6807\u53f71\uff0c\u5728\u5f39\u51fa\u7684\u65b0\u7a97\u53e3\u5185\uff0c\u6211\u4eec\u70b9\u51fb \u7ea2\u68462 **\u6d4f\u89c8 \u627e\u5230\u6211\u4eec\u521a\u624d\u89e3\u538b\u8fc7\u7684 SPI NAND \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf  tina_v851s-perf1_uart0.img \uff0c\u9009\u4e2d\u955c\u50cf\u540e\uff0c\u70b9\u51fb\u7ea2\u68463 \u5168\u76d8\u64e6\u9664\u5347\u7ea7 \uff0c\u6700\u540e\u70b9\u51fb\u7ea2\u68464  \u7acb\u5373\u5347\u7ea7\u3002</p> <p>\u200b   \u70b9\u51fb\u5b8c\u6210\u540e\uff0c\u4e0d\u9700\u8981\u7406\u4f1a \u5f39\u51fa\u7684\u4fe1\u606f\uff0c\u8fd9\u65f6 \u6211\u4eec\u62ff\u8d77\u5df2\u7ecf\u8fde\u63a5\u597d\u7684\u5f00\u53d1\u677f\uff0c\u5148\u6309\u4f4f FEL \u70e7\u5199\u6a21\u5f0f\u6309\u952e\uff0c\u4e4b\u540e\u6309\u4e00\u4e0b RESET \u7cfb\u7edf\u590d\u4f4d\u952e\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u8fdb\u5165\u70e7\u5199\u6a21\u5f0f\u5e76\u5f00\u59cb\u70e7\u5199\u3002</p> <p></p> <p>\u200b   \u70e7\u5199\u65f6\u4f1a\u63d0\u793a\u70e7\u5199\u8fdb\u5ea6\u6761\uff0c\u7b49\u5f85\u70e7\u5199\u5b8c\u6210\u3002</p> <p></p>"},{"location":"YuzukiHD-Lizard/03-1_FlashSystem/#_6","title":"\u542f\u52a8\u7cfb\u7edf","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u70e7\u5199\u6210\u529f\u540e \uff0c**\u6b63\u63a5**\u81f3\u67da\u6728PI-\u8725\u8734\u5f00\u53d1\u677f\u3002\u91cd\u65b0\u4e0a\u7535\u90fd\u4f1a\u81ea\u52a8\u91cd\u542f \u542f\u52a8\u7cfb\u7edf\uff0c\u6b64\u65f6\u6211\u4eec\u8fdb\u5165\u5230 \u4e32\u53e3\u7ec8\u7aef\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u7684\u542f\u52a8\u4fe1\u606f\uff0c\u7b49\u6240\u6709\u542f\u52a8\u4fe1\u606f\u52a0\u8f7d\u5b8c\u6210\uff0c\u53ef\u76f4\u63a5\u70e7\u5199\u597d\u7684\u7cfb\u7edf\u5185\u3002</p>"},{"location":"YuzukiHD-Lizard/03-2_SomeQustion/","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"YuzukiHD-Lizard/03-2_SomeQustion/#1make","title":"1.\u7f16\u8bd1\u6267\u884cmake\u65f6\u62a5\u6587\u4ef6\u7cfb\u7edf\u6743\u9650\u4e0d\u591f\u7684\u95ee\u9898","text":"<pre><code>==================================================\ntarget/allwinner/v851s-lizard/tina_busybox-init-basefiles.mk is called to generate shell scripts\n==================================================\n(/home/book/workspace/tina-v853/openwrt/target/v851s/v851s-lizard/busybox-init-base-files_generate/rootfs_hook_squash.sh /home/book/workspace/tina-v853/openwrt/target/v851s/v851s-lizard/busybox-init-base-files &gt;/dev/null) || { \\\n    echo \"Execute the /home/book/workspace/tina-v853/openwrt/target/v851s/v851s-lizard/busybox-init-base-files_generate/rootfs_hook_squash.sh is failed\"; \\\n    exit 1; \\\n}\n/bin/sh: 1: /home/book/workspace/tina-v853/openwrt/target/v851s/v851s-lizard/busybox-init-base-files_generate/rootfs_hook_squash.sh: Permission denied\nExecute the /home/book/workspace/tina-v853/openwrt/target/v851s/v851s-lizard/busybox-init-base-files_generate/rootfs_hook_squash.sh is failed\ntina_busybox-init-base-files.mk:14: recipe for target 'all' failed\nmake[4]: *** [all] Error 1\nmake[4]: Leaving directory '/home/book/workspace/tina-v853/openwrt/target/v851s/v851s-lizard'\nMakefile:228: recipe for target '/home/book/workspace/tina-v853/out/v851s/lizard/openwrt/build_dir/target/linux-v851s-lizard/busybox-init-base-files/.built' failed\nmake[3]: *** [/home/book/workspace/tina-v853/out/v851s/lizard/openwrt/build_dir/target/linux-v851s-lizard/busybox-init-base-files/.built] Error 2\nmake[3]: Leaving directory '/home/book/workspace/tina-v853/openwrt/package/allwinner/system/busybox-init-base-files'\ntime: package/subpackage/allwinner/system/busybox-init-base-files/compile#0.32#0.25#0.55\n    ERROR: package/subpackage/allwinner/system/busybox-init-base-files failed to build.\npackage/Makefile:114: recipe for target 'package/subpackage/allwinner/system/busybox-init-base-files/compile' failed\nmake[2]: *** [package/subpackage/allwinner/system/busybox-init-base-files/compile] Error 1\nmake[2]: Leaving directory '/home/book/workspace/tina-v853/openwrt/openwrt'\npackage/Makefile:110: recipe for target '/home/book/workspace/tina-v853/openwrt/openwrt/staging_dir/target/stamp/.package_compile' failed\nmake[1]: *** [/home/book/workspace/tina-v853/openwrt/openwrt/staging_dir/target/stamp/.package_compile] Error 2\nmake[1]: Leaving directory '/home/book/workspace/tina-v853/openwrt/openwrt'\n/home/book/workspace/tina-v853/openwrt/openwrt/include/toplevel.mk:236: recipe for target 'world' failed\nmake: *** [world] Error 2\nmake: Leaving directory '/home/book/workspace/tina-v853/openwrt/openwrt'\nINFO: build_openwrt_rootfs failed\n</code></pre> <p>\u89e3\u51b3\u529e\u6cd5\u662f\u6309\u5982\u4e0b\u65b9\u5f0f\u589e\u52a0\u6587\u4ef6\u6743\u9650</p> <pre><code>book@100ask:~/workspace/tina-v853$ chmod 755 /home/book/workspace/tina-v853/openwrt/target/v851s/v851s-lizard/busybox-init-base-files_generate/mk_extra_dir.sh\n</code></pre>"},{"location":"YuzukiHD-Lizard/03-2_SomeQustion/#2pack","title":"2.\u6253\u5305pack\u65f6\u63d0\u793a\u6587\u4ef6\u7cfb\u7edf\u5927\u5c0f\u592a\u5927","text":"<pre><code>ERROR: dl file rootfs.fex size too large\nERROR: filename = rootfs.fex\nERROR: dl_file_size = 53760 sector\nERROR: part_size = 45360 sector\nupdate_for_part_info -1\nERROR: update mbr file fail\nERROR: update_mbr failed\n</code></pre> <p>\u539f\u672c\u7684part_size\u7684\u503c\u4e3a45360\uff0c\u9700\u8981\u4fee\u6539\u6210dl_file_size\u7684\u503c53760</p> <pre><code>book@100ask:~/tina-v853$ vim device/config/chips/v851s/configs/lizard/linux-4.9/sys_partition.fex\n</code></pre> <p></p>"},{"location":"YuzukiHD-Lizard/03-2_SomeQustion/#3nand","title":"3.\u5f00\u53d1\u677f\u542f\u52a8\u65f6\uff0c\u542f\u52a8nand\u5931\u8d25","text":"<pre><code>[    4.087239]\n[    4.087836] device_chose finished 122!\n[    4.133404] Please append a correct \"root=\" boot option; here are the available partitions:\n[    4.142801] Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(0,0)\n[    4.152057] CPU: 0 PID: 1 Comm: swapper Not tainted 4.9.191 #1\n[    4.158582] Hardware name: sun8iw21\n[    4.162517] [&lt;c010d5a0&gt;] (unwind_backtrace) from [&lt;c010a694&gt;] (show_stack+0x10/0x14)\n[    4.171192] [&lt;c010a694&gt;] (show_stack) from [&lt;c017050c&gt;] (panic+0xac/0x2b8)\n[    4.178899] [&lt;c017050c&gt;] (panic) from [&lt;c09012cc&gt;] (mount_block_root+0x258/0x300)\n[    4.187284] [&lt;c09012cc&gt;] (mount_block_root) from [&lt;c0901500&gt;] (prepare_namespace+0x118/0x178)\n[    4.196834] [&lt;c0901500&gt;] (prepare_namespace) from [&lt;c0900eb4&gt;] (kernel_init_freeable+0x144/0x178)\n[    4.206771] [&lt;c0900eb4&gt;] (kernel_init_freeable) from [&lt;c067464c&gt;] (kernel_init+0x8/0x118)\n[    4.215932] [&lt;c067464c&gt;] (kernel_init) from [&lt;c0106e08&gt;] (ret_from_fork+0x14/0x2c)\n[    4.224410] ---[ end Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(0,0)\n[    4.234532] sunxi dump enabled\n[    4.237944] dump regs done\n[    4.241001] flush cache done\n[    4.244239] crashdump enter\n</code></pre> <p>\u5728/tina-v853/kernel/linux-4.9/drivers/mtd/awnand/spinand/physic/\u76ee\u5f55\u4e0b\uff0c\u5c06\u6211\u4eec\u63d0\u4f9b\u7684id.c\u6587\u4ef6\u66ff\u6362\u539f\u672c\u76ee\u5f55\u4e2d\u7684id.c\u6587\u4ef6\u3002id.c\u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a</p> <pre><code>// SPDX-License-Identifier: GPL-2.0\n\n#define pr_fmt(fmt) \"sunxi-spinand-phy: \" fmt\n\n#include &lt;linux/kernel.h&gt;\n#include &lt;linux/module.h&gt;\n#include &lt;linux/mtd/aw-spinand.h&gt;\n#include &lt;linux/of.h&gt;\n\n#include \"physic.h\"\n\n#define KB (1024)\n#define MB (KB * 1024)\n#define to_kb(size) (size / KB)\n#define to_mb(size) (size / MB)\n\n/* manufacture num */\n#define MICRON_MANUFACTURE  0x2c\n#define GD_MANUFACTURE      0xc8\n#define ATO_MANUFACTURE     0x9b\n#define WINBOND_MANUFACTURE 0xef\n#define MXIC_MANUFACTURE    0xc2\n#define TOSHIBA_MANUFACTURE 0x98\n#define ETRON_MANUFACTURE   0xd5\n#define XTXTECH_MANUFACTURE 0x0b\n#define DSTECH_MANUFACTURE  0xe5\n#define FORESEE_MANUFACTURE 0xcd\n#define ZETTA_MANUFACTURE   0xba\n#define FM_MANUFACTURE      0xa1\n\nstruct spinand_manufacture m;\n\nstruct aw_spinand_phy_info gigadevice[] = {\n    {\n        .Model      = \"GD5F1GQ4UCYIG\",\n        .NandID     = {0xc8, 0xb1, 0x48, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ | SPINAND_ONEDUMMY_AFTER_RANDOMREAD,\n        .MaxEraseTimes  = 50000,\n        .EccType    = BIT3_LIMIT2_TO_6_ERR7,\n        .EccProtectedType = SIZE16_OFF0_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        .Model      = \"GD5F1GQ4UBYIG\",\n        .NandID     = {0xc8, 0xd1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccFlag    = HAS_EXT_ECC_SE01,\n        .EccType    = BIT4_LIMIT5_TO_7_ERR8_LIMIT_12,\n        .EccProtectedType = SIZE16_OFF4_LEN8_OFF4,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        /* GD5F2GQ4UB9IG did not check yet */\n        .Model      = \"GD5F2GQ4UB9IG\",\n        .NandID     = {0xc8, 0xd2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 2048,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccFlag    = HAS_EXT_ECC_SE01,\n        .EccType    = BIT4_LIMIT5_TO_7_ERR8_LIMIT_12,\n        .EccProtectedType = SIZE16_OFF4_LEN12,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        .Model    = \"GD5F1GQ5UEYIG\",\n        .NandID    = {0xc8, 0x51, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie  = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt  = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccFlag  = HAS_EXT_ECC_SE01,\n        .EccType  = BIT4_LIMIT5_TO_7_ERR8_LIMIT_12,\n        .EccProtectedType = SIZE16_OFF4_LEN12,\n        .BadBlockFlag  = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        .Model      = \"F50L1G41LB(2M)\",\n        .NandID     = {0xc8, 0x01, 0x7f, 0x7f, 0x7f, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ | SPINAND_QUAD_NO_NEED_ENABLE,\n        .MaxEraseTimes  = 65000,\n        .EccType    = BIT2_LIMIT1_ERR2,\n        .EccProtectedType = SIZE16_OFF4_LEN4_OFF8,\n        .BadBlockFlag   = BAD_BLK_FLAG_FIRST_2_PAGE,\n    },\n    {\n        .Model      = \"GD5F2GM7UEYI\",\n        .NandID     = {0xc8, 0x92, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 2048,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccFlag    = HAS_EXT_ECC_SE01,\n        .EccType    = BIT4_LIMIT5_TO_7_ERR8_LIMIT_12,\n        .EccProtectedType = SIZE16_OFF0_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n};\n\nstruct aw_spinand_phy_info micron[] = {\n    {\n        .Model      = \"MT29F1G01ABAGDWB\",\n        .NandID     = {0x2c, 0x14, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ | SPINAND_QUAD_NO_NEED_ENABLE,\n        .MaxEraseTimes  = 65000,\n        .EccType    = BIT3_LIMIT5_ERR2,\n        .EccProtectedType = SIZE16_OFF32_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        .Model      = \"MT29F2G01ABAGDWB\",\n        .NandID     = {0x2c, 0x24, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 2048,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ | SPINAND_QUAD_NO_NEED_ENABLE,\n        .MaxEraseTimes  = 65000,\n        .EccType    = BIT3_LIMIT5_ERR2,\n        .EccProtectedType = SIZE16_OFF32_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n};\n\nstruct aw_spinand_phy_info xtx[] = {\n    {\n        /* XTX26G02A */\n        .Model      = \"XTX26G02A\",\n        .NandID     = {0x0B, 0xE2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 2048,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .ecc_status_shift = ECC_STATUS_SHIFT_2,\n        .EccType    = BIT4_LIMIT5_TO_7_ERR8_LIMIT_12,\n        .EccProtectedType = SIZE16_OFF8_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        /* XTX26G02A */\n        .Model      = \"XTX26G01A\",\n        .NandID     = {0x0B, 0xE1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .ecc_status_shift = ECC_STATUS_SHIFT_2,\n        .EccType    = BIT4_LIMIT5_TO_7_ERR8_LIMIT_12,\n        .EccProtectedType = SIZE16_OFF8_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        /* XT26G01C */\n        .Model      = \"XT26G01C\",\n        .NandID     = {0x0B, 0x11, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .ecc_status_shift = ECC_STATUS_SHIFT_4,\n        .EccType    = BIT4_LIMIT5_TO_8_ERR9_TO_15,\n        .EccProtectedType = SIZE16_OFF0_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        /* XT26G02C */\n        .Model      = \"XT26G02CWSIG\",\n        .NandID     = {0x0B, 0x12, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 2048,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_DUAL_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .ecc_status_shift = ECC_STATUS_SHIFT_2,\n        .EccType    = BIT4_LIMIT5_TO_7_ERR8_LIMIT_12,\n        .EccProtectedType = SIZE16_OFF8_LEN16,\n        .BadBlockFlag   = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n};\n\nstruct aw_spinand_phy_info fm[] = {\n    {\n        /* only rw stress test */\n        .Model      = \"FM25S01\",\n        .NandID     = {0xa1, 0xa1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ | SPINAND_QUAD_NO_NEED_ENABLE,\n        .MaxEraseTimes  = 65000,\n        .EccType    = BIT2_LIMIT1_ERR2,\n        .EccProtectedType = SIZE16_OFF0_LEN16,\n        .BadBlockFlag = BAD_BLK_FLAG_FIRST_2_PAGE,\n    },\n};\n\nstruct aw_spinand_phy_info etron[] = {\n\n};\n\nstruct aw_spinand_phy_info toshiba[] = {\n\n};\n\nstruct aw_spinand_phy_info ato[] = {\n\n};\n\nstruct aw_spinand_phy_info mxic[] = {\n    {\n        .Model      = \"MX35LF1GE4AB\",\n        .NandID     = {0xc2, 0x12, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 65000,\n        .EccFlag    = HAS_EXT_ECC_STATUS,\n        .EccType    = BIT4_LIMIT3_TO_4_ERR15,\n        /**\n         * MX35LF1GE4AB should use SIZE16_OFF4_LEN12, however, in order\n         * to compatibility with versions already sent to customers,\n         * which do not use general physical layout, we used\n         * SIZE16_OFF4_LEN4_OFF8 instead.\n         */\n        .EccProtectedType = SIZE16_OFF4_LEN4_OFF8,\n        .BadBlockFlag = BAD_BLK_FLAG_FIRST_2_PAGE,\n    },\n    {\n        .Model      = \"MX35LF2GE4AD\",\n        .NandID     = {0xc2, 0x26, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 2048,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 65000,\n        .EccFlag    = HAS_EXT_ECC_STATUS,\n        .EccType    = BIT4_LIMIT5_TO_8_ERR9_TO_15,\n        .EccProtectedType = SIZE16_OFF4_LEN4_OFF8,\n        .BadBlockFlag = BAD_BLK_FLAG_FIRST_2_PAGE,\n    },\n};\n\nstruct aw_spinand_phy_info winbond[] = {\n    {\n        .Model      = \"W25N01GVZEIG\",\n        .NandID     = {0xef, 0xaa, 0x21, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 65000,\n        .EccType    = BIT2_LIMIT1_ERR2,\n        .EccProtectedType = SIZE16_OFF4_LEN4_OFF8,\n        .BadBlockFlag = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n};\n\nstruct aw_spinand_phy_info dosilicon[] = {\n    {\n        .Model      = \"DS35X1GAXXX\",\n        .NandID     = {0xe5, 0x71, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 65000,\n        .EccType    = BIT2_LIMIT1_ERR2,\n        .EccProtectedType = SIZE16_OFF4_LEN4_OFF8,\n        .BadBlockFlag = BAD_BLK_FLAG_FIRST_2_PAGE,\n    },\n};\n\nstruct aw_spinand_phy_info foresee[] = {\n    {\n        .Model      = \"FS35ND01G-S1F1QWFI000\",\n        .NandID     = {0xcd, 0xb1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccType    = BIT3_LIMIT3_TO_4_ERR7,\n        .EccProtectedType = SIZE16_OFF0_LEN16,\n        .BadBlockFlag = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        .Model      = \"FS35ND01G-S1Y2QWFI000\",\n        .NandID     = {0xcd, 0xea, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccType    = BIT2_LIMIT1_ERR2,\n        .EccProtectedType = SIZE16_OFF0_LEN16,\n        .BadBlockFlag = BAD_BLK_FLAG_FRIST_1_PAGE,\n    },\n    {\n        .Model      = \"FS35SQA001G\",\n        .NandID     = {0xcd, 0x71, 0x71, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccType    = BIT2_LIMIT1_ERR2,\n        .EccProtectedType = SIZE16_OFF0_LEN16,\n        .BadBlockFlag = BAD_BLK_FLAG_FRIST_1_PAGE,\n    }\n};\n\nstruct aw_spinand_phy_info zetta[] = {\n    {\n        .Model      = \"ZD35Q1GAIB\",\n        .NandID     = {0xba, 0x71, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n        .DieCntPerChip  = 1,\n        .SectCntPerPage = 4,\n        .PageCntPerBlk  = 64,\n        .BlkCntPerDie   = 1024,\n        .OobSizePerPage = 64,\n        .OperationOpt   = SPINAND_QUAD_READ | SPINAND_QUAD_PROGRAM |\n            SPINAND_DUAL_READ,\n        .MaxEraseTimes  = 50000,\n        .EccType    = BIT2_LIMIT1_ERR2,\n        .EccProtectedType = SIZE16_OFF4_LEN4_OFF8,\n        .BadBlockFlag = BAD_BLK_FLAG_FIRST_2_PAGE,\n    },\n};\n\nstatic const char *aw_spinand_info_model(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;Model;\n}\n\nstatic void aw_spinand_info_nandid(struct aw_spinand_chip *chip,\n        unsigned char *id, int cnt)\n{\n    int i;\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    cnt = min(cnt, MAX_ID_LEN);\n    for (i = 0; i &lt; cnt; i++)\n        id[i] = pinfo-&gt;NandID[i];\n}\n\nstatic unsigned int aw_spinand_info_sector_size(struct aw_spinand_chip *chip)\n{\n    return 1 &lt;&lt; SECTOR_SHIFT;\n}\n\nstatic unsigned int aw_spinand_info_phy_page_size(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;SectCntPerPage * aw_spinand_info_sector_size(chip);\n}\n\nstatic unsigned int aw_spinand_info_page_size(struct aw_spinand_chip *chip)\n{\n#if IS_ENABLED(CONFIG_AW_SPINAND_SIMULATE_MULTIPLANE)\n    return aw_spinand_info_phy_page_size(chip) * 2;\n#else\n    return aw_spinand_info_phy_page_size(chip);\n#endif\n}\n\nstatic unsigned int aw_spinand_info_phy_block_size(\n        struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;PageCntPerBlk * aw_spinand_info_phy_page_size(chip);\n}\n\nstatic unsigned int aw_spinand_info_block_size(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;PageCntPerBlk * aw_spinand_info_page_size(chip);\n}\n\nstatic unsigned int aw_spinand_info_phy_oob_size(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;OobSizePerPage;\n}\n\nstatic unsigned int aw_spinand_info_oob_size(struct aw_spinand_chip *chip)\n{\n#if IS_ENABLED(CONFIG_AW_SPINAND_SIMULATE_MULTIPLANE)\n    return aw_spinand_info_phy_oob_size(chip) * 2;\n#else\n    return aw_spinand_info_phy_oob_size(chip);\n#endif\n}\n\nstatic unsigned int aw_spinand_info_die_cnt(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;DieCntPerChip;\n}\n\nstatic unsigned int aw_spinand_info_total_size(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;DieCntPerChip * pinfo-&gt;BlkCntPerDie *\n        aw_spinand_info_phy_block_size(chip);\n}\n\nstatic int aw_spinand_info_operation_opt(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;OperationOpt;\n}\n\nstatic int aw_spinand_info_max_erase_times(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo = chip-&gt;info-&gt;phy_info;\n\n    return pinfo-&gt;MaxEraseTimes;\n}\n\nstruct spinand_manufacture {\n    unsigned char id;\n    const char *name;\n    struct aw_spinand_phy_info *info;\n    unsigned int cnt;\n};\n\n#define SPINAND_FACTORY_INFO(_id, _name, _info)         \\\n    {                           \\\n        .id = _id,                  \\\n        .name = _name,                  \\\n        .info = _info,                  \\\n        .cnt = ARRAY_SIZE(_info),           \\\n    }\nstatic struct spinand_manufacture spinand_factory[] = {\n    SPINAND_FACTORY_INFO(MICRON_MANUFACTURE, \"Micron\", micron),\n    SPINAND_FACTORY_INFO(GD_MANUFACTURE, \"GD\", gigadevice),\n    SPINAND_FACTORY_INFO(ATO_MANUFACTURE, \"ATO\", ato),\n    SPINAND_FACTORY_INFO(WINBOND_MANUFACTURE, \"Winbond\", winbond),\n    SPINAND_FACTORY_INFO(MXIC_MANUFACTURE, \"Mxic\", mxic),\n    SPINAND_FACTORY_INFO(TOSHIBA_MANUFACTURE, \"Toshiba\", toshiba),\n    SPINAND_FACTORY_INFO(ETRON_MANUFACTURE, \"Etron\", etron),\n    SPINAND_FACTORY_INFO(XTXTECH_MANUFACTURE, \"XTX\", xtx),\n    SPINAND_FACTORY_INFO(DSTECH_MANUFACTURE, \"Dosilicon\", dosilicon),\n    SPINAND_FACTORY_INFO(FORESEE_MANUFACTURE, \"Foresee\", foresee),\n    SPINAND_FACTORY_INFO(ZETTA_MANUFACTURE, \"Zetta\", zetta),\n    SPINAND_FACTORY_INFO(FM_MANUFACTURE, \"FM\", fm),\n};\n\n\nstatic int spinand_get_chip_munufacture(struct aw_spinand_chip *chip, const char **m)\n{\n    struct aw_spinand_phy_info *info = chip-&gt;info-&gt;phy_info;\n\n    switch (info-&gt;NandID[0]) {\n    case MICRON_MANUFACTURE:\n        *m = \"Micron\";\n    break;\n    case GD_MANUFACTURE:\n        *m = \"GD\";\n    break;\n    case ATO_MANUFACTURE:\n        *m = \"ATO\";\n    break;\n    case WINBOND_MANUFACTURE:\n        *m = \"Winbond\";\n    break;\n    case MXIC_MANUFACTURE:\n        *m = \"Mxic\";\n    break;\n    case TOSHIBA_MANUFACTURE:\n        *m = \"Toshiba\";\n    break;\n    case ETRON_MANUFACTURE:\n        *m = \"Etron\";\n    break;\n    case XTXTECH_MANUFACTURE:\n        *m = \"XTX\";\n    break;\n    case DSTECH_MANUFACTURE:\n        *m = \"Dosilicon\";\n    break;\n    case FORESEE_MANUFACTURE:\n        *m = \"Foresee\";\n    break;\n    case ZETTA_MANUFACTURE:\n        *m = \"Zetta\";\n    break;\n    default:\n        *m = NULL;\n    break;\n    }\n\n    if (*m == NULL)\n        return false;\n    else\n        return true;\n\n}\nstatic const char *aw_spinand_info_manufacture(struct aw_spinand_chip *chip)\n{\n    int i, j;\n    struct spinand_manufacture *m;\n    struct aw_spinand_phy_info *pinfo;\n    const char *m_name = NULL;\n    int ret = 0;\n\n    for (i = 0; i &lt; ARRAY_SIZE(spinand_factory); i++) {\n        m = &amp;spinand_factory[i];\n        pinfo = chip-&gt;info-&gt;phy_info;\n        for (j = 0; j &lt; m-&gt;cnt; j++)\n            if (pinfo == &amp;m-&gt;info[j])\n                return m-&gt;name;\n    }\n\n    /*for compatible fdt support spi-nand*/\n    ret = spinand_get_chip_munufacture(chip, &amp;m_name);\n    if (ret &lt; 0)\n        return NULL;\n    else\n        return m_name;\n}\n\nstatic struct spinand_manufacture *spinand_detect_munufacture(unsigned char id)\n{\n    int index;\n    struct spinand_manufacture *m;\n\n    for (index = 0; index &lt; ARRAY_SIZE(spinand_factory); index++) {\n        m = &amp;spinand_factory[index];\n        if (m-&gt;id == id) {\n            pr_info(\"detect munufacture from id table: %s\\n\", m-&gt;name);\n            return m;\n        }\n    }\n\n    pr_err(\"not detect any munufacture from id table\\n\");\n    return NULL;\n}\n\nstatic struct aw_spinand_phy_info *spinand_match_id(\n        struct spinand_manufacture *m,\n        unsigned char *id)\n{\n    int i, j, match_max = 1, match_index = 0;\n    struct aw_spinand_phy_info *pinfo;\n\n    for (i = 0; i &lt; m-&gt;cnt; i++) {\n        int match = 1;\n\n        pinfo = &amp;m-&gt;info[i];\n        for (j = 1; j &lt; MAX_ID_LEN; j++) {\n            /* 0xFF matching all ID value */\n            if (pinfo-&gt;NandID[j] != id[j] &amp;&amp;\n                    pinfo-&gt;NandID[j] != 0xFF)\n                break;\n\n            if (pinfo-&gt;NandID[j] != 0xFF)\n                match++;\n        }\n\n        if (match &gt; match_max) {\n            match_max = match;\n            match_index = i;\n        }\n    }\n\n    if (match_max &gt; 1)\n        return &amp;m-&gt;info[match_index];\n    return NULL;\n}\n\nstruct aw_spinand_phy_info *spinand_get_phy_info_from_fdt(struct aw_spinand_chip *chip)\n{\n    static struct aw_spinand_phy_info info;\n    static int had_get;\n    int ret = 0;\n    const char *bad_blk_mark_pos = NULL;\n    const char *quad_read_not_need_enable = NULL;\n    const char *read_seq_need_onedummy = NULL;\n    int len = 0;\n    u32 id = 0xffffffff;\n    struct device_node *node = chip-&gt;spi-&gt;dev.of_node;\n    u32 rx_bus_width = 0;\n    u32 tx_bus_width = 0;\n\n\n    if (had_get == true)\n        return &amp;info;\n\n#define BAD_BLK_MARK_POS1 \"first_1_page\"\n#define BAD_BLK_MARK_POS2 \"first_2_page\"\n#define BAD_BLK_MARK_POS3 \"last_1_page\"\n#define BAD_BLK_MARK_POS4 \"last_2_page\"\n    memset(&amp;info, 0, sizeof(struct aw_spinand_phy_info));\n\n    ret = of_property_read_string(node, \"model\", &amp;(info.Model));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand Model from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"id-0\", &amp;id);\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand id Low 4 Byte from fdt fail\\n\");\n        goto err;\n    }\n    len = sizeof(id);\n    memmove(info.NandID, &amp;id, min(MAX_ID_LEN, len));\n\n    id = 0xffffffff;\n    ret = of_property_read_u32(node, \"id-1\", &amp;id);\n    if (ret &lt; 0) {\n        pr_info(\"can't get spi-nand id high 4 Byte from fdt, may be not need\\n\");\n    }\n    memmove(info.NandID + min(MAX_ID_LEN, len), &amp;id, max(MAX_ID_LEN, len) - min(MAX_ID_LEN, len));\n\n    ret = of_property_read_u32(node, \"die_cnt_per_chip\", &amp;(info.DieCntPerChip));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand DieCntPerChip from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"blk_cnt_per_die\", &amp;(info.BlkCntPerDie));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand BlkCntPerDie from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"page_cnt_per_blk\", &amp;(info.PageCntPerBlk));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand PageCntPerBlk from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"sect_cnt_per_page\", &amp;(info.SectCntPerPage));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand SectCntPerPage from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"oob_size_per_page\", &amp;(info.OobSizePerPage));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand OobSizePerPage from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_string(node, \"bad_block_mark_pos\", &amp;bad_blk_mark_pos);\n    if (ret &lt; 0 || NULL == bad_blk_mark_pos) {\n        pr_err(\"get spi-nand BadBlockFlag from fdt fail\\n\");\n        goto err;\n    } else {\n        if (!memcmp(bad_blk_mark_pos, BAD_BLK_MARK_POS1, strlen(BAD_BLK_MARK_POS1)))\n            info.BadBlockFlag = BAD_BLK_FLAG_FRIST_1_PAGE;\n        else if (!memcmp(bad_blk_mark_pos, BAD_BLK_MARK_POS2, strlen(BAD_BLK_MARK_POS2)))\n            info.BadBlockFlag = BAD_BLK_FLAG_FRIST_1_PAGE;\n        else if (!memcmp(bad_blk_mark_pos, BAD_BLK_MARK_POS3, strlen(BAD_BLK_MARK_POS3)))\n            info.BadBlockFlag = BAD_BLK_FLAG_LAST_1_PAGE;\n        else if (!memcmp(bad_blk_mark_pos, BAD_BLK_MARK_POS4, strlen(BAD_BLK_MARK_POS4)))\n            info.BadBlockFlag = BAD_BLK_FLAG_LAST_2_PAGE;\n        else {\n            pr_err(\"get spi-nand BadBlockFlag pattern is not right\\n\");\n            goto err;\n        }\n    }\n\n    ret = of_property_read_s32(node, \"max_erase_times\", &amp;(info.MaxEraseTimes));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand MaxEraseTimes from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"ecc_type\", &amp;(info.EccType));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand EccFlag from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"ecc_protected_type\", &amp;(info.EccProtectedType));\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand ecc_protected_type from fdt fail\\n\");\n        goto err;\n    }\n\n    ret = of_property_read_u32(node, \"spi-rx-bus-width\", &amp;rx_bus_width);\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand spi-rx-bus-width from fdt fail\\n\");\n        goto err;\n    } else {\n        switch (rx_bus_width) {\n        case SPI_NBITS_DUAL:\n            info.OperationOpt |= SPINAND_DUAL_READ;\n        break;\n        case SPI_NBITS_QUAD:\n            info.OperationOpt |= SPINAND_QUAD_READ;\n        break;\n        default:\n            info.OperationOpt |= 0;\n        break;\n        }\n    }\n\n    ret = of_property_read_u32(node, \"spi-tx-bus-width\", &amp;tx_bus_width);\n    if (ret &lt; 0) {\n        pr_err(\"get spi-nand spi-tx-bus-width from fdt fail\\n\");\n        goto err;\n    } else {\n        switch (tx_bus_width) {\n        case SPI_NBITS_QUAD:\n            info.OperationOpt |= SPINAND_QUAD_PROGRAM;\n        break;\n        default:\n            info.OperationOpt |= 0;\n        break;\n        }\n    }\n\n    ret = of_property_read_string(node, \"read_from_cache_x4_not_need_enable\",\n            &amp;quad_read_not_need_enable);\n    pr_info(\"%d quad_read_not_need_enable:%s\\n\", __LINE__, quad_read_not_need_enable);\n    if (ret &lt; 0 || NULL == quad_read_not_need_enable) {\n        pr_info(\"can't get spi-nand read_from_cache_x4_need_enable or it is null,\"\n                \" maybe not need enable quad read before read from cache x4\\n\");\n    } else {\n        if (!memcmp(quad_read_not_need_enable, \"yes\", strlen(\"yes\")))\n            info.OperationOpt |= SPINAND_QUAD_NO_NEED_ENABLE;\n    }\n\n    ret = of_property_read_string(node, \"read_from_cache_need_onedummy\",\n            &amp;read_seq_need_onedummy);\n    if (ret &lt; 0 || NULL == read_seq_need_onedummy) {\n        pr_info(\"can't get spi-nand read_from_cache_need_onedummy or it is null,\"\n                \" maybe read from cache sequence not need one dummy in second Byte\\n\");\n    } else {\n        if (!memcmp(read_seq_need_onedummy, \"yes\", strlen(\"yes\")))\n            info.OperationOpt |= SPINAND_ONEDUMMY_AFTER_RANDOMREAD;\n    }\n\n\n    ret = of_property_read_s32(node, \"ecc_flag\", &amp;(info.EccFlag));\n    if (ret &lt; 0) {\n        pr_err(\"can't get spi-nand EccFlag from fdt,\"\n                \" maybe(default) use 0FH + C0H to get feature,wich obtain ecc status\\n\");\n    }\n\n    ret = of_property_read_u32(node, \"ecc_status_shift\", &amp;(info.ecc_status_shift));\n    if (ret &lt; 0) {\n        pr_info(\"can't get spi-nand ecc_status_shift from fdt,\"\n                \" use default ecc_status_shift_4 to get ecc status in C0H\\n\");\n    }\n\n    pr_debug(\"get spinand phy info from fdt\\n\");\n    pr_debug(\"Model:%s\\n\", info.Model);\n    pr_debug(\"ID:%02x %02x %02x %02x %02x %02x %02x %02x\\n\",\n            info.NandID[0], info.NandID[1], info.NandID[2], info.NandID[3],\n            info.NandID[4], info.NandID[5], info.NandID[6], info.NandID[7]);\n    pr_debug(\"DieCntPerChip:%d\\n\", info.DieCntPerChip);\n    pr_debug(\"BlkCntPerDie:%d\\n\", info.BlkCntPerDie);\n    pr_debug(\"PageCntPerBlk:%d\\n\", info.PageCntPerBlk);\n    pr_debug(\"SectCntPerPage:%d\\n\", info.SectCntPerPage);\n    pr_debug(\"OobSizePerPage:%d\\n\", info.OobSizePerPage);\n    pr_debug(\"BadBlockFlag:%d\\n\", info.BadBlockFlag);\n    pr_debug(\"OperationOpt:0x%x\\n\", info.OperationOpt);\n    pr_debug(\"MaxEraseTimes:%d\\n\", info.MaxEraseTimes);\n    pr_debug(\"EccFlag:%x\\n\", info.EccFlag);\n    pr_debug(\"ecc_status_shift:%x\\n\", info.ecc_status_shift);\n    pr_debug(\"EccType:%x\\n\", info.EccType);\n    pr_debug(\"EccProtectedType:%x\\n\", info.EccProtectedType);\n\n    had_get = true;\n\n    return &amp;info;\nerr:\n    had_get = false;\n    return NULL;\n}\n\nstatic struct aw_spinand_info aw_spinand_info = {\n    .model = aw_spinand_info_model,\n    .manufacture = aw_spinand_info_manufacture,\n    .nandid = aw_spinand_info_nandid,\n    .die_cnt = aw_spinand_info_die_cnt,\n    .oob_size = aw_spinand_info_oob_size,\n    .page_size = aw_spinand_info_page_size,\n    .block_size = aw_spinand_info_block_size,\n    .phy_oob_size = aw_spinand_info_phy_oob_size,\n    .phy_page_size = aw_spinand_info_phy_page_size,\n    .phy_block_size = aw_spinand_info_phy_block_size,\n    .sector_size = aw_spinand_info_sector_size,\n    .total_size = aw_spinand_info_total_size,\n    .operation_opt = aw_spinand_info_operation_opt,\n    .max_erase_times = aw_spinand_info_max_erase_times,\n};\n\nstatic struct spinand_manufacture *spinand_detect_munufacture_from_fdt(struct aw_spinand_chip *chip, unsigned char id)\n{\n    struct aw_spinand_phy_info *info = NULL;\n    struct spinand_manufacture *pm = &amp;m;\n    int ret = 0;\n\n    info = spinand_get_phy_info_from_fdt(chip);\n    if (info == NULL) {\n        pr_err(\"get phy info from fdt fail\\n\");\n        goto err;\n    }\n\n    if (id == info-&gt;NandID[0]) {\n        pm-&gt;id = info-&gt;NandID[0];\n        pm-&gt;info = info;\n        chip-&gt;info = &amp;aw_spinand_info;\n        chip-&gt;info-&gt;phy_info = info;\n        ret = spinand_get_chip_munufacture(chip, &amp;(pm-&gt;name));\n        if (ret &lt; 0)\n            goto err;\n        else\n            pr_info(\"detect munufacture from fdt: %s \\n\", pm-&gt;name);\n    } else {\n        goto err;\n    }\n\n    return pm;\nerr:\n    pr_info(\"not detect munufacture from fdt\\n\");\n    return NULL;\n}\n\nstatic struct aw_spinand_phy_info *spinand_match_id_from_fdt(struct aw_spinand_chip *chip,\n        struct spinand_manufacture *m,\n        unsigned char *id)\n{\n    struct aw_spinand_phy_info *info = NULL;\n    int i = 0;\n\n    info = spinand_get_phy_info_from_fdt(chip);\n    if (info == NULL) {\n        pr_err(\"get phy info from fdt fail\\n\");\n        goto err;\n    }\n\n    for (i = 0; i &lt; MAX_ID_LEN; i++) {\n        /*0xff match all id value*/\n        if (id[i] != info-&gt;NandID[i] &amp;&amp; info-&gt;NandID[i] != 0xff)\n            goto err;\n    }\n\n    return info;\n\nerr:\n    return NULL;\n}\nstatic int aw_spinand_info_init(struct aw_spinand_chip *chip,\n        struct aw_spinand_phy_info *pinfo)\n{\n    chip-&gt;info = &amp;aw_spinand_info;\n    chip-&gt;info-&gt;phy_info = pinfo;\n\n    pr_info(\"========== arch info ==========\\n\");\n    pr_info(\"Model:               %s\\n\", pinfo-&gt;Model);\n    pr_info(\"Munufacture:         %s\\n\", aw_spinand_info_manufacture(chip));\n    pr_info(\"DieCntPerChip:       %u\\n\", pinfo-&gt;DieCntPerChip);\n    pr_info(\"BlkCntPerDie:        %u\\n\", pinfo-&gt;BlkCntPerDie);\n    pr_info(\"PageCntPerBlk:       %u\\n\", pinfo-&gt;PageCntPerBlk);\n    pr_info(\"SectCntPerPage:      %u\\n\", pinfo-&gt;SectCntPerPage);\n    pr_info(\"OobSizePerPage:      %u\\n\", pinfo-&gt;OobSizePerPage);\n    pr_info(\"BadBlockFlag:        0x%x\\n\", pinfo-&gt;BadBlockFlag);\n    pr_info(\"OperationOpt:        0x%x\\n\", pinfo-&gt;OperationOpt);\n    pr_info(\"MaxEraseTimes:       %d\\n\", pinfo-&gt;MaxEraseTimes);\n    pr_info(\"EccFlag:             0x%x\\n\", pinfo-&gt;EccFlag);\n    pr_info(\"EccType:             %d\\n\", pinfo-&gt;EccType);\n    pr_info(\"EccProtectedType:    %d\\n\", pinfo-&gt;EccProtectedType);\n    pr_info(\"========================================\\n\");\n    pr_info(\"\\n\");\n    pr_info(\"========== physical info ==========\\n\");\n    pr_info(\"TotalSize:    %u M\\n\", to_mb(aw_spinand_info_total_size(chip)));\n    pr_info(\"SectorSize:   %u B\\n\", aw_spinand_info_sector_size(chip));\n    pr_info(\"PageSize:     %u K\\n\", to_kb(aw_spinand_info_phy_page_size(chip)));\n    pr_info(\"BlockSize:    %u K\\n\", to_kb(aw_spinand_info_phy_block_size(chip)));\n    pr_info(\"OOBSize:      %u B\\n\", aw_spinand_info_phy_oob_size(chip));\n    pr_info(\"========================================\\n\");\n    pr_info(\"\\n\");\n    pr_info(\"========== logical info ==========\\n\");\n    pr_info(\"TotalSize:    %u M\\n\", to_mb(aw_spinand_info_total_size(chip)));\n    pr_info(\"SectorSize:   %u B\\n\", aw_spinand_info_sector_size(chip));\n    pr_info(\"PageSize:     %u K\\n\", to_kb(aw_spinand_info_page_size(chip)));\n    pr_info(\"BlockSize:    %u K\\n\", to_kb(aw_spinand_info_block_size(chip)));\n    pr_info(\"OOBSize:      %u B\\n\", aw_spinand_info_oob_size(chip));\n    pr_info(\"========================================\\n\");\n\n    return 0;\n}\n\nint aw_spinand_chip_detect(struct aw_spinand_chip *chip)\n{\n    struct aw_spinand_phy_info *pinfo;\n    struct spinand_manufacture *m;\n    unsigned char id[MAX_ID_LEN] = {0xFF};\n    struct aw_spinand_chip_ops *ops = chip-&gt;ops;\n    int ret, dummy = 1;\n\nretry:\n    /*first read with dummy/address@0x00*/\n    ret = ops-&gt;read_id(chip, id, MAX_ID_LEN, dummy);\n    if (ret) {\n        pr_err(\"read id failed : %d\\n\", ret);\n        return ret;\n    }\n\n    m = spinand_detect_munufacture(id[0]);\n    if (!m)\n        goto detect_from_fdt;\n\n    pinfo = spinand_match_id(m, id);\n    if (pinfo)\n        goto detect;\n\ndetect_from_fdt:\n        m = spinand_detect_munufacture_from_fdt(chip, id[0]);\n        if (!m)\n            goto not_detect;\n\n        pinfo = spinand_match_id_from_fdt(chip, m, id);\n        if (pinfo)\n            goto detect;\n\nnot_detect:\n    /* retry without dummy/address@0x00 */\n    if (dummy) {\n        dummy = 0;\n        goto retry;\n    }\n    pr_info(\"not match spinand: %x %x\\n\",\n            *(__u32 *)id,\n            *((__u32 *)id + 1));\n    return -ENODEV;\ndetect:\n    pr_info(\"detect spinand id: %x %x\\n\",\n            *((__u32 *)pinfo-&gt;NandID),\n            *((__u32 *)pinfo-&gt;NandID + 1));\n    return aw_spinand_info_init(chip, pinfo);\n}\n\nMODULE_AUTHOR(\"liaoweixiong &lt;liaoweixiong@allwinnertech.com&gt;\");\nMODULE_DESCRIPTION(\"Commond physic layer for Allwinner's spinand driver\");\n</code></pre> <p>\u91cd\u65b0\u7f16\u8bd1\u6253\u5305</p> <pre><code>book@100ask:~/tina-v853$ make\n...\nbook@100ask:~/tina-v853$ pack\n...\n</code></pre>"},{"location":"YuzukiHD-Lizard/03-QuickStart/","title":"\u5feb\u901f\u5f00\u59cb\u4f7f\u7528","text":""},{"location":"YuzukiHD-Lizard/03-QuickStart/#_2","title":"\u4e0a\u7535\u542f\u52a8\u7cfb\u7edf","text":"<p>\u6ce8\u610f\u5f00\u53d1\u677f\u7684OTG\u53e3\u548c\u4e32\u53e3\u662f\u590d\u7528\u7684\uff0c\u4e00\u822c\u901a\u8fc7OTG\u53e3\u8fdb\u884c\u70e7\u5199\uff0c\u4e32\u53e3\u8fdb\u884c\u901a\u4fe1\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u4ee5\u4e0b\u9762\u7684\u56fe\u7247\u533a\u5206typeC\u7ebf\u7684\u6b63\u53cd\u9762\uff0c\u6b63\u63a5\u4e3atpyeC\u6b63\u9762\u671d\u4e0a\u63a5\u5165\uff0c\u53cd\u63a5\u4e3aTpyeC\u53cd\u9762\u671d\u4e0a\u63a5\u5165\u3002\u6b63\u63a5\u4e3a\u4e32\u53e3\u6a21\u5f0f\uff0c\u53cd\u63a5\u4e3aOTG\u6a21\u5f0f\u3002</p> <p>typeC\u6b63\u9762\u56fe\uff1a</p> <p></p> <p>typeC\u53cd\u9762\u56fe\uff1a</p> <p></p>"},{"location":"YuzukiHD-Lizard/03-QuickStart/#1","title":"1. \u8fde\u63a5\u4e32\u53e3\u7ebf","text":"<p>\u5c06\u914d\u5957\u7684TypeC\u7ebf\u4e00\u6bb5**\u6b63\u63a5**\u81f3\u5f00\u53d1\u677f\u7684\u4e32\u53e3/\u4f9b\u7535\u63a5\u53e3\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u81f3\u7535\u8111USB\u63a5\u53e3\uff0c\u8fde\u63a5\u6210\u529f\u540e\u677f\u8f7d\u7684\u7535\u6e90\u706f\u4f1a\u95ea\u70c1\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5b89\u88c5\u4e32\u53e3\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u52a8\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u6765\u81ea\u52a8\u5b89\u88c5\u3002</p> <ul> <li>\u5bf9\u4e8eWindows\u7cfb\u7edf \u6b64\u65f6Windows\u8bbe\u5907\u7ba1\u7406\u5668 \u5728 \u7aef\u53e3(COM\u548cLPT) \u5904\u4f1a\u591a\u51fa\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u4e00\u822c\u662f\u4ee5 <code>USB-Enhanced-SERIAL CH9102</code>\u5f00\u5934\uff0c\u60a8\u9700\u8981\u7559\u610f\u4e00\u4e0b\u540e\u9762\u7684\u5177\u4f53COM\u7f16\u53f7\uff0c\u7528\u4e8e\u540e\u7eed\u8fde\u63a5\u4f7f\u7528\u3002</li> </ul> <p></p> <p>\u5982\u4e0a\u56fe\uff0cCOM\u53f7\u662f96\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8fde\u63a5\u6240\u4f7f\u7528\u7684\u4e32\u53e3\u53f7\u5c31\u662f96\u3002</p> <ul> <li>\u5bf9\u4e8eLinux\u7cfb\u7edf \u53ef\u4ee5\u67e5\u770b\u662f\u5426\u591a\u51fa\u4e00\u4e2a/dev/tty&lt;&gt; \u8bbe\u5907,\u4e00\u822c\u60c5\u51b5\u8bbe\u5907\u8282\u70b9\u4e3a /dev/ttyACM0  \u3002</li> </ul> <p></p>"},{"location":"YuzukiHD-Lizard/03-QuickStart/#2","title":"2. \u6253\u5f00\u4e32\u53e3\u63a7\u5236\u53f0","text":""},{"location":"YuzukiHD-Lizard/03-QuickStart/#_3","title":"\u83b7\u53d6\u4e32\u53e3\u5de5\u5177","text":"<p>\u4f7f\u7528Putty\u6216\u8005MobaXterm\u7b49\u4e32\u53e3\u5de5\u5177\u6765\u5f00\u53d1\u677f\u8bbe\u5907\u3002</p> <ul> <li>\u5176\u4e2dputty\u5de5\u5177\u53ef\u4ee5\u8bbf\u95ee\u9875\u9762  https://www.chiark.greenend.org.uk/~sgtatham/putty/  \u6765\u83b7\u53d6\u3002</li> <li>MobaXterm\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u9875\u9762 https://mobaxterm.mobatek.net/ \u83b7\u53d6 (\u63a8\u8350\u4f7f\u7528)\u3002</li> </ul>"},{"location":"YuzukiHD-Lizard/03-QuickStart/#putty","title":"\u4f7f\u7528putty\u767b\u5f55\u4e32\u53e3","text":""},{"location":"YuzukiHD-Lizard/03-QuickStart/#mobaxterm","title":"\u4f7f\u7528Mobaxterm\u767b\u5f55\u4e32\u53e3","text":"<p>\u6253\u5f00MobaXterm\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u201cSession\u201d\uff0c\u5728\u5f39\u51fa\u7684\u754c\u9762\u9009\u4e2d\u201cSerial\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u9009\u62e9\u7aef\u53e3\u53f7\uff08\u524d\u9762\u8bbe\u5907\u7ba1\u7406\u5668\u663e\u793a\u7684\u7aef\u53e3\u53f7COM21\uff09\u3001\u6ce2\u7279\u7387\uff08Speed 115200\uff09\u3001\u6d41\u63a7\uff08Flow Control: none\uff09,\u6700\u540e\u70b9\u51fb\u201cOK\u201d\u5373\u53ef\u3002\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6ce8\u610f\uff1a\u6d41\u63a7\uff08Flow Control\uff09\u4e00\u5b9a\u8981\u9009\u62e9none\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u5728MobaXterm\u4e2d\u5411\u4e32\u53e3\u8f93\u5165\u6570\u636e</p> <p></p>"},{"location":"YuzukiHD-Lizard/03-QuickStart/#3-shell","title":"3. \u8fdb\u5165\u7cfb\u7edfshell","text":"<p>\u4f7f\u7528\u4e32\u53e3\u5de5\u5177\u6210\u529f\u6253\u5f00\u4e32\u53e3\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u4e0b Enter \u952e \u8fdb\u5165shell\uff0c\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u6309\u4e0b\u677f\u5b50\u4e0a\u7684 <code>Reset</code>\u590d\u4f4d\u952e\uff0c\u6765\u67e5\u770b\u5b8c\u6574\u7684\u7cfb\u7edf\u4fe1\u606f\u3002</p> <p></p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u6ca1\u6709\u7528\u6237\u540d\u6ca1\u6709\u5bc6\u7801\uff0c\u53ef\u76f4\u63a5\u8fdb\u5165\u7cfb\u7edf</p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u6ca1\u6709\u7528\u6237\u540d\u6ca1\u6709\u5bc6\u7801\uff0c\u53ef\u76f4\u63a5\u8fdb\u5165\u7cfb\u7edf</p> <p>\u7cfb\u7edf\u9ed8\u8ba4\u6ca1\u6709\u7528\u6237\u540d\u6ca1\u6709\u5bc6\u7801\uff0c\u53ef\u76f4\u63a5\u8fdb\u5165\u7cfb\u7edf</p>"},{"location":"YuzukiHD-Lizard/04-StudyPath/","title":"\u5b66\u4e60\u8def\u7ebf","text":""},{"location":"YuzukiHD-Lizard/04-StudyPath/#_2","title":"\u57fa\u7840\u60c5\u51b5","text":""},{"location":"YuzukiHD-Lizard/04-StudyPath/#linux","title":"\u7eaf\u5c0f\u767d\u540c\u5b66\u4e0d\u61c2Linux","text":"<ul> <li>\u5b66\u4e60\u64cd\u4f5c\u4f7f\u7528ubuntu\u7cfb\u7edf\uff1a https://www.bilibili.com/video/BV1dU4y1D7fz</li> <li>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</li> <li>\u5b66\u4e60Linux C\u7f16\u7a0b\uff1a \u53c2\u8003\u5c0f\u7532\u9c7c\u8bfe\u7a0b</li> <li>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</li> </ul>"},{"location":"YuzukiHD-Lizard/04-StudyPath/#linux_1","title":"\u61c2\u4e00\u70b9Linux\u6982\u5ff5","text":"<ul> <li> <p>\u5b66\u4e60Git\u5de5\u5177\uff1a https://www.bilibili.com/video/BV1CL4y1A7YG</p> </li> <li> <p>\u5b66\u4e60\u5d4c\u5165\u5f0fLinux \u57fa\u672c\u77e5\u8bc6 \uff1a https://www.bilibili.com/video/BV1VN4y137Tf</p> </li> </ul>"},{"location":"YuzukiHD-Lizard/04-StudyPath/#linux_2","title":"\u719f\u6089\u5d4c\u5165\u5f0fLinux\u5f00\u53d1","text":"<ul> <li>\u5b66\u4e60Tina-SDK\u5f00\u53d1</li> <li>\u5b66\u4e60Linux\u9a71\u52a8\u5f00\u53d1</li> <li>\u5b66\u4e60\u4e13\u9898\u8bfe\u7a0b\uff08\u6bd4\u5982RISC-V\u67b6\u6784\u4e13\u9898\uff09</li> </ul>"},{"location":"YuzukiHD-Lizard/04-StudyPath/#_3","title":"\u5de5\u4f5c\u5c97\u4f4d","text":""},{"location":"YuzukiHD-Lizard/04-StudyPath/#linux_3","title":"\u5d4c\u5165\u5f0fLinux \u5e94\u7528\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"YuzukiHD-Lizard/04-StudyPath/#linux_4","title":"\u5d4c\u5165\u5f0fLinux\u9a71\u52a8\u5f00\u53d1","text":"<p>\u521d\u7ea7 \u4e2d\u7ea7 \u9ad8\u7ea7</p>"},{"location":"YuzukiHD-Lizard/04-StudyPath/#_4","title":"\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1","text":"<p>\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f18\u5316\u5de5\u7a0b\u5e08</p>"},{"location":"YuzukiHD-Lizard/05-1_RunHelloword/","title":"\u8fd0\u884c\u8f93\u51fahello word","text":""},{"location":"YuzukiHD-Lizard/05-1_RunHelloword/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u67da\u6728PI-\u8725\u8734 \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\uff0c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p> <p>\u83b7\u53d6\u5b8c\u6210\u6e90\u7801\u540e\uff0c\u9700\u8981\u5c06\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u8def\u5f84\u52a0\u5165\u5230 \u7cfb\u7edf\u7684 PATH\u73af\u5883\u53d8\u91cf\u5185\u3002</p> <p>\u9996\u5148 \u9700\u8981\u83b7\u53d6 \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe \u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u8fdb\u5165\u5230  <code>tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/arm-openwrt-linux-muslgnueabi</code>\u76ee\u5f55\u4e0b\u6267\u884c pwd \u547d\u4ee4\uff0c\u5373\u53ef\u5f97\u5230\u7edd\u5bf9\u8def\u5f84 <code>/home/book/tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/arm-openwrt-linux-muslgnueabi&lt;/code&gt;</code> \u3002</p> <pre><code>book@100ask:~/tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/bin$ pwd\n/home/book/tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/bin\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u8bb2\u8fd9\u4e2a\u52a0\u5165\u5230\u7cfb\u7edf \u73af\u5883\u53d8\u91cf\u5185\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6267\u884c  \u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4e86\u3002</p> <pre><code>export STAGING_DIR=/home/book/tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/bin\n</code></pre> <p>\u6ce8\u610f\uff1a\u6b64\u65b9\u5f0f\u53ea\u9488\u5bf9\u5f53\u524d\u7684\u7ec8\u7aef\u6709\u6548\uff0c\u5982\u679c\u4f60\u5173\u95ed\u4e86\u8fd9\u4e2a\u7ec8\u7aef\uff0c\u518d\u6b21\u5f00\u542f\u7ec8\u7aef \u9700\u8981\u91cd\u65b0\u6267\u884c\u624d\u53ef\u4ee5\u3002</p> <p>\u8fd8\u6709\u53e6\u4e00\u79cd\u6c38\u4e45\u751f\u6548\u7684\u65b9\u5f0f \u5c31\u662f\u5199\u5165\u5230 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u91cc\u9762\uff0c\u9700\u8981\u4fee\u6539  /etc/environment \u5728\u672b\u5c3e\u52a0\u4e0a \u4f60\u83b7\u53d6\u5230\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7edd\u5bf9\u8def\u5f84,\u6ce8\u610f\u4fee\u6539\u9700\u8981\u4f7f\u7528 sudo \u547d\u4ee4\u3002</p> <pre><code>book@100ask:~$ cat /etc/environment\nPATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/book/tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/bin\"\nbook@100ask:~$ source /etc/environment\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-1_RunHelloword/#hello-word_1","title":"\u7f16\u5199Hello word\u7a0b\u5e8f","text":"<ul> <li>\u914d\u7f6e\u597d\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff0c\u5982\u4e0b\u4e3a\u4e00\u4e2a\u6700\u7b80\u5355\u7684 hello word\u6253\u5370\u793a\u4f8b\u7a0b\u5e8f\u3002</li> </ul> <pre><code>#include &lt;stdio.h&gt;\nint main (void)\n{\n    printf(\"hello word!\\n\");\n    return 0;\n}    \n</code></pre> <p>\u7f16\u5199\u5b8c\u6210\u540e\uff0c\u4fdd\u5b58\u5230 helloword.c</p> <p>\u4e4b\u540e\u6211\u4eec\u6267\u884c \u5982\u4e0b\u7f16\u8bd1\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1 </p> <pre><code>book@100ask:~/workspace/V851sTest/helloword$ vim helloword.c \nbook@100ask:~/workspace/V851sTest/helloword$ arm-openwrt-linux-gcc -o helloword helloword.c\nbook@100ask:~/workspace/V851sTest/helloword$ file helloword\nhelloword: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-musl-armhf.so.1, with debug_info, not stripped\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-1_RunHelloword/#_2","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p>"},{"location":"YuzukiHD-Lizard/05-1_RunHelloword/#usb-adb","title":"\u4f7f\u7528usb adb\u65b9\u5f0f","text":"<p>typeC\u7ebf\u53cd\u63a5\u81f3\u5f00\u53d1\u677f\uff0c\u70b9\u51fbVMware\u83dc\u5355\u680f\u4e2d\u7684\u865a\u62df\u673a-&gt;\u53ef\u79fb\u52a8\u8bbe\u5907-&gt;Google Tina ADB -&gt;\u8fde\u63a5\uff08\u65ad\u5f00\u4e0e \u4e3b\u673a \u7684\u8fde\u63a5\uff09\uff0c\u4f7f\u865a\u62df\u673a\u8fde\u63a5\u4e0a\u67da\u6728PI-\u8725\u8734 \u5f00\u53d1\u677f\u3002</p> <p></p> <p>\u4e4b\u540e\u6211\u4eec\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u67e5\u8be2\u865a\u62df\u673a\u662f\u5426\u80fd\u8fde\u63a5\u5230\u5f00\u53d1\u677f\uff0c\u5982\u679c\u51fa\u73b0\u8bbe\u5907\u53f7\u5373\u4e3a\u8fde\u63a5\u6210\u529f\u3002</p> <pre><code>book@100ask:~$ adb devices\nList of devices attached\n* daemon not running; starting now at tcp:5037\n* daemon started successfully\n20080411    device\n</code></pre> <p>\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u547d\u4ee4\u5c06\u751f\u6210\u7684helloword\u4f7f\u7528adb\u4f20\u8f93\u5230\u5f00\u53d1\u677f\u7684\u6839\u76ee\u5f55\u4e0b\u3002</p> <pre><code>book@100ask:~/workspace/V851sTest/helloworld$ adb push helloword /\nhelloword: 1 file pushed. 0.2 MB/s (25024 bytes in 0.126s)\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-1_RunHelloword/#tf","title":"\u4f7f\u7528TF\u5361\u65b9\u5f0f","text":"<p>\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230TF\u5361\u4e2d\uff0c\u5c06TF\u5361\u63d2\u5165 \u67da\u6728PI-\u8725\u8734 \u5f00\u53d1\u677f\u4e2d\uff0c**\u6b63\u63a5**\u81f3\u5f00\u53d1\u677f\u4e2d\uff0c\u542f\u52a8\u7cfb\u7edf\u540e\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5c06TF\u5361\u6302\u8f7d\u81f3tina\u7cfb\u7edf\u4e0a\u3002\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f4G\u7684\u5185\u5b58\u5361\uff0c\u6240\u4ee5\u4e3a/dev/mmcblk0p1\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u8bbe\u5907\u53f7\u6302\u8f7d\u5bf9\u5e94\u7684\u8bbe\u5907\u3002</p> <pre><code>root@TinaLinux:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\n/dev/root                16.3M     16.3M         0 100% /rom\ndevtmpfs                 26.0M         0     26.0M   0% /dev\ntmpfs                    27.2M         0     27.2M   0% /tmp\n/dev/by-name/rootfs_data\n                         43.5M     48.0K     41.2M   0% /overlay\noverlayfs:/overlay       43.5M     48.0K     41.2M   0% /\ntmpfs                    27.2M         0     27.2M   0% /run\n/dev/ubi0_6              29.9M     24.0K     28.3M   0% /mnt/UDISK\n/dev/mmcblk0p1            3.7G    160.0K      3.7G   0% /mnt/extsd\nroot@TinaLinux:/# mount /dev/mmcblk0p1 /mnt/\n</code></pre> <p>\u5c06helloword\u53ef\u6267\u884c\u7a0b\u5e8f\u62f7\u8d1d\u5230\u6839\u76ee\u5f55\u4e0b\u5907\u7528\u3002</p> <pre><code>root@TinaLinux:/# cd /mnt/\nroot@TinaLinux:/mnt# ls\nSystem Volume Information  helloword\nroot@TinaLinux:/mnt# cp helloword /\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-1_RunHelloword/#_3","title":"\u8fd0\u884c","text":"<p>\u4e0b\u8f7d\u597d\u7a0b\u5e8f\u4ee5\u540e\uff0c\u9700\u8981\u4f7f\u7528chmod +x \u547d\u4ee4\u6765\u7ed9\u7a0b\u5e8f\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\uff0c\u4e4b\u540e \u6211\u4eec\u5c31\u53ef\u4ee5\u6267\u884c \u8fd9\u4e2ahelloword\u5e94\u7528\u4e86\u3002</p> <pre><code>root@TinaLinux:~# cd /\nroot@TinaLinux:/# chmod +x helloword\nroot@TinaLinux:/# ./helloword\nhello word!\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/","title":"\u7f16\u8bd1\u8fd0\u884cHelloword\u9a71\u52a8","text":""},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u83b7\u53d6 \u67da\u6728PI-\u8725\u8734 \u5f00\u53d1\u677f \u914d\u5957\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u3002</p> <p>\u7531\u4e8e\u76ee\u524d\u5de5\u5177\u94fe\u6ca1\u6709\u63d0\u4f9bwindows\u7248\u672c\uff0c\u6240\u4ee5\u53ea\u80fd\u5728 Linux\u4e0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u8bf7\u5148\u53c2\u8003\u4e0a\u8ff0\u7ae0\u8282 \u914d\u7f6eubuntu \u865a\u62df\u673a\u7ae0\u8282\uff0c\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u914d\u7f6e\u597d\u3002</p>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#_2","title":"\u914d\u7f6e\u5185\u6838\u7f16\u8bd1\u73af\u5883","text":"<p><pre><code>export PATH=$PATH:/home/book/tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/bin\nexport ARCH=arm\nexport CROSS_COMPILE=arm-openwrt-linux-\n</code></pre> <pre><code>book@100ask:~/workspace/V851sTest/hello_drv$ export PATH=$PATH:/home/book/tina-v853/prebuilt/gcc/linux-x86/arm/toolchain-sunxi-musl/toolchain/bin\nbook@100ask:~/workspace/V851sTest/hello_drv$ export ARCH=arm\nbook@100ask:~/workspace/V851sTest/hello_drv$ export CROSS_COMPILE=arm-openwrt-linux-\n</code></pre></p>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#helloword_1","title":"\u7f16\u5199 helloword\u9a71\u52a8","text":"<p>hello_drv.c</p> <pre><code>#include &lt;linux/module.h&gt;\n\n#include &lt;linux/fs.h&gt;\n#include &lt;linux/errno.h&gt;\n#include &lt;linux/miscdevice.h&gt;\n#include &lt;linux/kernel.h&gt;\n#include &lt;linux/major.h&gt;\n#include &lt;linux/mutex.h&gt;\n#include &lt;linux/proc_fs.h&gt;\n#include &lt;linux/seq_file.h&gt;\n#include &lt;linux/stat.h&gt;\n#include &lt;linux/init.h&gt;\n#include &lt;linux/device.h&gt;\n#include &lt;linux/tty.h&gt;\n#include &lt;linux/kmod.h&gt;\n#include &lt;linux/gfp.h&gt;\n\n/* 1. \u786e\u5b9a\u4e3b\u8bbe\u5907\u53f7                                                                 */\nstatic int major = 0;\nstatic char kernel_buf[1024];\nstatic struct class *hello_class;\n\n\n#define MIN(a, b) (a &lt; b ? a : b)\n\n/* 3. \u5b9e\u73b0\u5bf9\u5e94\u7684open/read/write\u7b49\u51fd\u6570\uff0c\u586b\u5165file_operations\u7ed3\u6784\u4f53                   */\nstatic ssize_t hello_drv_read (struct file *file, char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_to_user(buf, kernel_buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic ssize_t hello_drv_write (struct file *file, const char __user *buf, size_t size, loff_t *offset)\n{\n    int err;\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    err = copy_from_user(kernel_buf, buf, MIN(1024, size));\n    return MIN(1024, size);\n}\n\nstatic int hello_drv_open (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\nstatic int hello_drv_close (struct inode *node, struct file *file)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    return 0;\n}\n\n/* 2. \u5b9a\u4e49\u81ea\u5df1\u7684file_operations\u7ed3\u6784\u4f53                                              */\nstatic struct file_operations hello_drv = {\n    .owner   = THIS_MODULE,\n    .open    = hello_drv_open,\n    .read    = hello_drv_read,\n    .write   = hello_drv_write,\n    .release = hello_drv_close,\n};\n\n/* 4. \u628afile_operations\u7ed3\u6784\u4f53\u544a\u8bc9\u5185\u6838\uff1a\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f                                */\n/* 5. \u8c01\u6765\u6ce8\u518c\u9a71\u52a8\u7a0b\u5e8f\u554a\uff1f\u5f97\u6709\u4e00\u4e2a\u5165\u53e3\u51fd\u6570\uff1a\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u5165\u53e3\u51fd\u6570 */\nstatic int __init hello_init(void)\n{\n    int err;\n\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    major = register_chrdev(0, \"hello\", &amp;hello_drv);  /* /dev/hello */\n\n\n    hello_class = class_create(THIS_MODULE, \"hello_class\");\n    err = PTR_ERR(hello_class);\n    if (IS_ERR(hello_class)) {\n        printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n        unregister_chrdev(major, \"hello\");\n        return -1;\n    }\n\n    device_create(hello_class, NULL, MKDEV(major, 0), NULL, \"hello\"); /* /dev/hello */\n\n    return 0;\n}\n\n/* 6. \u6709\u5165\u53e3\u51fd\u6570\u5c31\u5e94\u8be5\u6709\u51fa\u53e3\u51fd\u6570\uff1a\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5c31\u4f1a\u53bb\u8c03\u7528\u8fd9\u4e2a\u51fa\u53e3\u51fd\u6570           */\nstatic void __exit hello_exit(void)\n{\n    printk(\"%s %s line %d\\n\", __FILE__, __FUNCTION__, __LINE__);\n    device_destroy(hello_class, MKDEV(major, 0));\n    class_destroy(hello_class);\n    unregister_chrdev(major, \"hello\");\n}\n\n\n/* 7. \u5176\u4ed6\u5b8c\u5584\uff1a\u63d0\u4f9b\u8bbe\u5907\u4fe1\u606f\uff0c\u81ea\u52a8\u521b\u5efa\u8bbe\u5907\u8282\u70b9                                     */\n\nmodule_init(hello_init);\nmodule_exit(hello_exit);\n\nMODULE_LICENSE(\"GPL\");\n</code></pre> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n/*\n * ./hello_drv_test -w abc\n * ./hello_drv_test -r\n */\nint main(int argc, char **argv)\n{\n    int fd;\n    char buf[1024];\n    int len;\n\n    /* 1. \u5224\u65ad\u53c2\u6570 */\n    if (argc &lt; 2) \n    {\n        printf(\"Usage: %s -w &lt;string&gt;\\n\", argv[0]);\n        printf(\"       %s -r\\n\", argv[0]);\n        return -1;\n    }\n\n    /* 2. \u6253\u5f00\u6587\u4ef6 */\n    fd = open(\"/dev/hello\", O_RDWR);\n    if (fd == -1)\n    {\n        printf(\"can not open file /dev/hello\\n\");\n        return -1;\n    }\n\n    /* 3. \u5199\u6587\u4ef6\u6216\u8bfb\u6587\u4ef6 */\n    if ((0 == strcmp(argv[1], \"-w\")) &amp;&amp; (argc == 3))\n    {\n        len = strlen(argv[2]) + 1;\n        len = len &lt; 1024 ? len : 1024;\n        write(fd, argv[2], len);\n    }\n    else\n    {\n        len = read(fd, buf, 1024);      \n        buf[1023] = '\\0';\n        printf(\"APP read : %s\\n\", buf);\n    }\n\n    close(fd);\n\n    return 0;\n}\n</code></pre> <p>Makefile:</p> <pre><code># 1. \u4f7f\u7528\u4e0d\u540c\u7684\u5f00\u53d1\u677f\u5185\u6838\u65f6, \u4e00\u5b9a\u8981\u4fee\u6539KERN_DIR\n# 2. KERN_DIR\u4e2d\u7684\u5185\u6838\u8981\u4e8b\u5148\u914d\u7f6e\u3001\u7f16\u8bd1, \u4e3a\u4e86\u80fd\u7f16\u8bd1\u5185\u6838, \u8981\u5148\u8bbe\u7f6e\u4e0b\u5217\u73af\u5883\u53d8\u91cf:\n# 2.1 ARCH,          \u6bd4\u5982: export ARCH=arm64\n# 2.2 CROSS_COMPILE, \u6bd4\u5982: export CROSS_COMPILE=aarch64-linux-gnu-\n# 2.3 PATH,          \u6bd4\u5982: export PATH=$PATH:/home/book/100ask_roc-rk3399-pc/ToolChain-6.3.1/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin \n# \u6ce8\u610f: \u4e0d\u540c\u7684\u5f00\u53d1\u677f\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u4e0a\u8ff03\u4e2a\u73af\u5883\u53d8\u91cf\u4e0d\u4e00\u5b9a\u76f8\u540c,\n#       \u8bf7\u53c2\u8003\u5404\u5f00\u53d1\u677f\u7684\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u624b\u518c\n\nKERN_DIR = /home/book/tina-v853/lichee/linux-4.9\n\nall:\n    make -C $(KERN_DIR) M=`pwd` modules \n    $(CROSS_COMPILE)gcc -o hello_drv_test hello_drv_test.c \n\nclean:\n    make -C $(KERN_DIR) M=`pwd` modules clean\n    rm -rf modules.order\n    rm -f hello_drv_test\n\nobj-m   += hello_drv.o\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#_3","title":"\u7f16\u8bd1","text":"<pre><code>book@100ask:~/workspace/V851sTest/hello_drv$ make\nmake -C /home/book/tina-v853/lichee/linux-4.9 M=`pwd` modules \nmake[1]: Entering directory '/home/book/tina-v853/lichee/linux-4.9'\n  CC [M]  /home/book/workspace/V851sTest/hello_drv/hello_drv.o\n  Building modules, stage 2.\n  MODPOST 1 modules\n  CC      /home/book/workspace/V851sTest/hello_drv/hello_drv.mod.o\n  LD [M]  /home/book/workspace/V851sTest/hello_drv/hello_drv.ko\nmake[1]: Leaving directory '/home/book/tina-v853/lichee/linux-4.9'\narm-openwrt-linux-gcc -o hello_drv_test hello_drv_test.c \n</code></pre>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#_4","title":"\u62f7\u8d1d\u5230\u5f00\u53d1\u677f","text":"<p>\u600e\u4e48\u62f7\u8d1d\u6587\u4ef6\u5230\u5f00\u53d1\u677f\u4e0a\uff1f \u6709U\u76d8  ADB \u7f51\u7edc \u4e32\u53e3\u7b49\u7b49\u3002</p>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#usb-adb","title":"\u4f7f\u7528usb adb\u65b9\u5f0f","text":"<p>typeC\u7ebf\u53cd\u63a5\u81f3\u5f00\u53d1\u677f\uff0c\u70b9\u51fbVMware\u83dc\u5355\u680f\u4e2d\u7684\u865a\u62df\u673a-&gt;\u53ef\u79fb\u52a8\u8bbe\u5907-&gt;Google Tina ADB -&gt;\u8fde\u63a5\uff08\u65ad\u5f00\u4e0e \u4e3b\u673a \u7684\u8fde\u63a5\uff09\uff0c\u4f7f\u865a\u62df\u673a\u8fde\u63a5\u4e0a\u67da\u6728PI-\u8725\u8734 \u5f00\u53d1\u677f\u3002</p> <p></p> <p>\u4e4b\u540e\u6211\u4eec\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u67e5\u8be2\u865a\u62df\u673a\u662f\u5426\u80fd\u8fde\u63a5\u5230\u5f00\u53d1\u677f\uff0c\u5982\u679c\u51fa\u73b0\u8bbe\u5907\u53f7\u5373\u4e3a\u8fde\u63a5\u6210\u529f\u3002</p> <pre><code>book@100ask:~$ adb devices\nList of devices attached\n* daemon not running; starting now at tcp:5037\n* daemon started successfully\n20080411    device\n</code></pre> <p>\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u547d\u4ee4\u5c06\u751f\u6210\u7684helloword\u4f7f\u7528adb\u4f20\u8f93\u5230\u5f00\u53d1\u677f\u7684\u6839\u76ee\u5f55\u4e0b\u3002</p> <pre><code>book@100ask:~/workspace/V851sTest/hello_drv$ adb push hello_drv.ko /\nhello_drv.ko: 1 file pushed. 1.2 MB/s (5616 bytes in 0.005s)\nbook@100ask:~/workspace/V851sTest/hello_drv$ adb push hello_drv_test /\nhello_drv_test: 1 file pushed. 1.7 MB/s (26024 bytes in 0.014s)\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#tf","title":"\u4f7f\u7528TF\u5361\u65b9\u5f0f","text":"<p>\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230TF\u5361\u4e2d\uff0c\u5c06TF\u5361\u63d2\u5165 \u67da\u6728PI-\u8725\u8734 \u5f00\u53d1\u677f\u4e2d\uff0c\u6b63\u63a5\u81f3\u5f00\u53d1\u677f\u4e2d\uff0c\u542f\u52a8\u7cfb\u7edf\u540e\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5c06TF\u5361\u6302\u8f7d\u81f3tina\u7cfb\u7edf\u4e0a\u3002\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f4G\u7684\u5185\u5b58\u5361\uff0c\u6240\u4ee5\u4e3a/dev/mmcblk0p1\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u8bbe\u5907\u53f7\u6302\u8f7d\u5bf9\u5e94\u7684\u8bbe\u5907\u3002</p> <pre><code>root@TinaLinux:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\n/dev/root                16.3M     16.3M         0 100% /rom\ndevtmpfs                 26.0M         0     26.0M   0% /dev\ntmpfs                    27.2M         0     27.2M   0% /tmp\n/dev/by-name/rootfs_data\n                         43.5M     48.0K     41.2M   0% /overlay\noverlayfs:/overlay       43.5M     48.0K     41.2M   0% /\ntmpfs                    27.2M         0     27.2M   0% /run\n/dev/ubi0_6              29.9M     24.0K     28.3M   0% /mnt/UDISK\n/dev/mmcblk0p1            3.7G    160.0K      3.7G   0% /mnt/extsd\nroot@TinaLinux:/# mount /dev/mmcblk0p1 /mnt/\n</code></pre> <p>\u5c06helloword\u53ef\u6267\u884c\u7a0b\u5e8f\u62f7\u8d1d\u5230\u6839\u76ee\u5f55\u4e0b\u5907\u7528\u3002</p> <pre><code>root@TinaLinux:/# cd /mnt/\nroot@TinaLinux:/mnt# cp hello_drv.ko /\nroot@TinaLinux:/mnt# cp hello_drv_test /\n</code></pre>"},{"location":"YuzukiHD-Lizard/05-2_RunHellowordDriver/#_5","title":"\u8fd0\u884c","text":"<pre><code>root@TinaLinux:~# cd /\nroot@TinaLinux:/# ls\nbin             hello_drv_test  proc            run             var\nconfig          helloworld      pseudo_init     sbin            www\ndata            home            ramparser       squashfs\ndev             lib             rdinit          sys\netc             mnt             rom             tmp\nhello_drv.ko    overlay         root            usr\nroot@TinaLinux:/# insmod hello_drv.ko\n[  131.474038] hello_drv: loading out-of-tree module taints kernel.\n[  131.481625] /home/book/workspace/V851sTest/hello_drv/hello_drv.c hello_init line 70\nroot@TinaLinux:/# chmod +x hello_drv_test\nroot@TinaLinux:/# ls /dev/hello\n/dev/hello\nroot@TinaLinux:/# ./hello_drv_test  -w abc\n[  172.500652] /home/book/workspace/V851sTest/hello_drv/hello_drv.c hello_drv_open line 45\n[  172.509956] /home/book/workspace/V851sTest/hello_drv/hello_drv.c hello_drv_write line 38\n[  172.519237] /home/book/workspace/V851sTest/hello_drv/hello_drv.c hello_drv_close line 51\nroot@TinaLinux:/# ./hello_drv_test  -r\n[  180.906833] /home/book/workspace/V851sTest/hello_drv/hello_drv.c hello_drv_open line 45\n[  180.916024] /home/book/workspace/V851sTest/hello_drv/hello_drv.c hello_drv_read line 30\nAPP read : abc[  180.925324] /home/book/workspace/V851sTest/hello_drv/hello_drv.c hello_drv_close line 51\n</code></pre>"},{"location":"YuzukiHD-Lizard/06-ConfigHostEnv/","title":"\u5b89\u88c5\u5e76\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":""},{"location":"YuzukiHD-Lizard/06-ConfigHostEnv/#_2","title":"\u83b7\u53d6\u865a\u62df\u673a\u7cfb\u7edf","text":""},{"location":"YuzukiHD-Lizard/06-ConfigHostEnv/#vmware","title":"\u4e0b\u8f7dvmware\u865a\u62df\u673a\u5de5\u5177","text":"<p>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u7f51\u5740    https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html   \u53c2\u8003\u4e0b\u56fe\u7bad\u5934\u6240\u793a\uff0c\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5 Windows\u7248\u672c\u7684VMware Workstation \uff0c\u70b9\u51fb DOWNLOAD NOW  \u5373\u53ef\u5f00\u59cb\u4e0b\u8f7d\u3002</p> <p></p> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u5168\u90e8\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u4e00\u6b65\u6b65\u5b89\u88c5\u5373\u53ef\u3002</p>"},{"location":"YuzukiHD-Lizard/06-ConfigHostEnv/#ubuntu","title":"\u83b7\u53d6Ubuntu\u7cfb\u7edf\u955c\u50cf","text":"<ul> <li>\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00  https://www.linuxvmimages.com/images/ubuntu-1804/     \u627e\u5230\u5982\u4e0b\u7bad\u5934\u6240\u793a\u4f4d\u7f6e\uff0c\u70b9\u51fb VMware Image \u4e0b\u8f7d\u3002</li> </ul> <p>\u4e0b\u8f7d\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u6301\u7eed 10 \u5230 30 \u5206\u949f\uff0c\u5177\u4f53\u8981\u4f9d\u636e\u7f51\u901f\u800c\u5b9a\u3002</p>"},{"location":"YuzukiHD-Lizard/06-ConfigHostEnv/#_3","title":"\u8fd0\u884c\u865a\u62df\u673a\u7cfb\u7edf","text":"<ol> <li>\u89e3\u538b\u7f29 \u865a\u62df\u673a\u7cfb\u7edf\u955c\u50cf\u538b\u7f29\u5305\uff0c\u89e3\u538b\u7f29\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u5982\u4e0b\u4e24\u4e2a\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 \u540e\u7f00\u540d\u4e3a .vmx \u8fd9\u4e2a \u914d\u7f6e\u6587\u4ef6\u3002</li> </ol> <ol> <li>\u6253\u5f00\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 vmware workstation \u8f6f\u4ef6 \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684 \u6587\u4ef6 \u2192 \u6253\u5f00 \u627e\u5230\u4e0a\u9762\u7684 Ubuntu_18.04.6_VM_LinuxVMImages.COM.vmx  \u6587\u4ef6\uff0c\u4e4b\u540e\u4f1a\u5f39\u51fa\u65b0\u7684\u865a\u62df\u673a\u5bf9\u8bdd\u6846\u9875\u9762\u3002</li> </ol> <ol> <li>\u5982\u4e0b\u56fe\u6240\u793a\u4e3a  \u4e3a\u6211\u4eec\u5df2\u7ecf\u865a\u62df\u673a\u7684\u914d\u7f6e\u754c\u9762\uff0c\u90a3\u9762\u6211\u4eec\u53ef\u4ee5 \u70b9\u51fb \u7ea2\u6846 2 \u7f16\u8f91\u865a\u62df\u673a\u8bbe\u7f6e \u91cc\u9762 \u53bb\u8c03\u6b63 \u6211\u4eec\u865a\u62df\u673a\u7684 \u5185\u5b58 \u5927\u5c0f \u548c\u5904\u7406\u5668\u4e2a\u6570\uff0c\u5efa\u8bae \u6700\u597d \u5185\u5b58\u4e3a 4GB \u53ca\u4ee5\u4e0a\uff0c\u5904\u7406\u5668\u81f3\u5c114 \u4e2a\u3002 \u8c03\u6574\u597d\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5 \u70b9\u51fb \u5f00\u542f\u6b64\u865a\u62df\u673a \u6765\u8fd0\u884c\u6b64\u865a\u62df\u673a\u4e86</li> </ol> <p>\u7b2c\u4e00\u6b21\u6253\u5f00\u4f1a\u63d0\u793a  \u4e00\u4e2a \u865a\u62df\u673a\u5df2\u7ecf\u590d\u5236\u7684 \u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u8fd9\u65f6\uff0c\u53ea\u9700\u8981 \u70b9\u51fb  \u6211\u5df2\u590d\u5236\u865a\u62df\u673a  \u5c31\u53ef\u4ee5\u7ee7\u7eed\u542f\u52a8\u865a\u62df\u673a\u7cfb\u7edf\u4e86\u3002</p> <p></p> <p>\u7b49\u5f85\u6570\u79d2\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u542f\u52a8\u4e86\uff0c\u542f\u52a8\u4ee5\u540e \u9f20\u6807\u70b9\u51fb   Ubuntu  \u5b57\u6837\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u767b\u5f55\u5bf9\u8bdd\u6846\uff0c\u8f93\u5165  \u5bc6\u7801 ubuntu \u5373\u53ef\u767b\u5f55\u8fdb\u5165ubuntu\u7cfb\u7edf\u5185\u3002</p> <p>\u6ce8\u610f\uff1a </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>Ubuntu\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ubuntu ubuntu </p> <p>ubuntu\u9ed8\u8ba4\u9700\u8981\u8054\u7f51\uff0c\u5982\u679c\u4f60\u7684 Windows\u7535\u8111\u5df2\u7ecf\u53ef\u4ee5\u8bbf\u95eeInternet \u4e92\u8054\u7f51\uff0cubuntu\u7cfb\u7edf\u540e\u5c31\u4f1a\u81ea\u52a8\u5171\u4eab Windows\u7535\u8111\u7684\u7f51\u7edc \u8fdb\u884c\u8fde\u63a5internet \u7f51\u7edc\u3002</p>"},{"location":"YuzukiHD-Lizard/06-ConfigHostEnv/#_4","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li>\u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\u5305, \u9f20\u6807\u70b9\u51fb\u8fdb\u5165 ubuntu\u754c\u9762\u5185\uff0c\u952e\u76d8\u540c\u65f6 \u6309\u4e0b ctrl + alt + t \u4e09\u4e2a\u6309\u952e\u4f1a\u5feb\u901f\u5524\u8d77\uff0c\u7ec8\u7aef\u754c\u9762\uff0c\u5524\u8d77\u6210\u529f\u540e\uff0c\u5728\u7ec8\u7aef\u91cc\u9762\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305\u3002</li> </ul> <pre><code>sudo apt-get install -y  sed make binutils build-essential  gcc g++ bash patch gzip bzip2 perl  tar cpio unzip rsync file  bc wget python  cvs git mercurial rsync  subversion android-tools-mkbootimg vim  libssl-dev  android-tools-fastboot\n</code></pre> <p>\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684ubuntu\u865a\u62df\u673a \u7b2c\u4e00\u6b21\u542f\u52a8 \u65e0\u6cd5 \u901a\u8fc7 windows\u4e0b\u590d\u5236 \u547d\u4ee4 \u7c98\u8d34\u5230 ubuntu\u5185\uff0c\u5219\u9700\u8981\u5148\u624b\u6572 \u6267\u884c\u5982\u4e0b\u547d\u4ee4 \u5b89\u88c5\u4e00\u4e2a \u7528\u4e8e \u865a\u62df\u673a\u548c windows\u5171\u4eab\u526a\u5207\u677f\u7684\u5de5\u5177\u5305\u3002</p> <pre><code>sudo apt install open-vm-tools-desktop \n</code></pre> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u7535\u6e90\u6309\u94ae\uff0c\u91cd\u542fubuntu\u7cfb\u7edf\uff0c\u6216\u8005 \u76f4\u63a5\u8f93\u5165 sudo reboot \u547d\u4ee4\u8fdb\u884c\u91cd\u542f\u3002</p> <p>\u8fd9\u65f6\u5c31\u53ef\u4ee5 \u901a\u8fc7windows\u7aef\u5411ubuntu\u5185\u7c98\u8d34\u6587\u4ef6\uff0c\u6216\u8005\u62f7\u8d1d\u62f7\u51fa\u6587\u4ef6\u4e86\u3002</p> <p></p> <p>\u505a\u5b8c\u8fd9\u4e00\u6b65\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\uff0c\u83b7\u53d6\u6e90\u7801 \u5f00\u59cbRISC-V \u4e1c\u5c71\u54ea\u5412STU\u5f00\u53d1\u677f\u7684\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002</p>"},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/#_1","title":"\u7b80\u4ecb","text":"<ul> <li>\u6b64\u5957\u6784\u5efa\u7cfb\u7edf\u57fa\u4e8e\u5168\u5fd7\u5355\u6838 Arm Cortex-A7 SoC\uff0c\u642d\u8f7d\u4e86 RISC-V \u5185\u6838\u7684V851s  \u82af\u7247\uff0c\u9002\u914d\u4e86Tina 5.0\u4e3b\u7ebf\u7248\u672c\uff0c\u662f\u4e13\u4e3a\u667a\u80fd IP \u6444\u50cf\u673a\u8bbe\u8ba1\u7684\uff0c\u652f\u6301\u4eba\u4f53\u68c0\u6d4b\u548c\u7a7f\u8d8a\u62a5\u8b66\u7b49\u529f\u80fd\u3002</li> </ul>"},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/#sdk","title":"\u83b7\u53d6sdk\u6e90\u7801","text":"<p>\u5f00\u59cb\u4e4b\u524d\u6211\u4eec\u9700\u8981\u5148\u83b7\u53d6 \u63d0\u524d\u51c6\u5907\u597d tina-sdk\u538b\u7f29\u5305\uff0c\u538b\u7f29\u5305\u5206\u4e3a\u56fd\u5185\u56fd\u5916\u4e24\u4e2a\u5b58\u653e\u4f4d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5927\u5c0f\u5927\u698211G\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u62f7\u8d1d\u5230\u63d0\u524d\u914d\u7f6e\u597dHost\u5f00\u53d1\u73af\u5883\u7684ubuntu\u7cfb\u7edf\u5185\uff0c\u7136\u540e\u53c2\u8003 \u4e0b\u8f7d\u7684\u76ee\u5f55\u5185\u7684README.txt\u6587\u6863 \u8fdb\u884c\u89e3\u538b\u7f29\u3002</p> <ul> <li>GoogleDriver\uff1a  https://drive.google.com/drive/folders/1_HAZRddR69hRMZAVrxFrPZXFFQiV3vE0?usp=share_link</li> <li>BaiduYun:   https://pan.baidu.com/s/115gVK-8Pt-vJi8jn2AWMYw?pwd=7n4q  \u63d0\u53d6\u7801\uff1a7n4q </li> </ul> <p>\u89e3\u538b\u7f29\u547d\u4ee4</p> <pre><code>cat tina-v853-open.tar.gz*| tar zx\n</code></pre> <p>\u89e3\u538b\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u591a\u51fa\u6765\u4e00\u4e2a tina-v853-open\u7684\u6587\u4ef6\u5939</p> <pre><code>book@100ask:~/tina-v853-open$ ls\nbrandy  build  buildroot  build.sh  device  kernel  openwrt  platform  prebuilt  README.md  target  tools\n</code></pre> <p>\u7531\u4e8e\u9ed8\u8ba4\u7684sdk\u5e76\u672a\u652f\u6301\u6b64\u5f00\u53d1\u677f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u652f\u6301\u6b64\u5f00\u53d1\u677f\u7684\u914d\u7f6e \u5355\u72ec\u62f7\u8d1d\u589e\u52a0\u5230tina-v853-open sdk\u5185\uff0c\u9996\u5148clone\u6b64\u5f00\u53d1\u677f\u8865\u4e01\u4ed3\u5e93\uff0c\u7136\u540e\u5355\u72ec\u8986\u76d6\u3002</p> <pre><code>book@100ask:~$ git clone  https://github.com/DongshanPI/Yzukilizard-v851s-TinaSDK\nbook@100ask:~$ cp -rfvd  Yuzukilizard-v851s-TinaSDK/* tina-v853-open/\n</code></pre>"},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/#_2","title":"\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5305","text":""},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/#ubuntu-1804","title":"ubuntu-18.04","text":"<p>\u8fd0\u884c\u73af\u5883\u914d\u7f6e\uff1a \u6b64\u7cfb\u7edf\u57fa\u4e8eubuntu18.04\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5728\u4e4b\u524d\u7684\u57fa\u7840\u4e4b\u4e0a\u8fd8\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5fc5\u8981\u4f9d\u8d56</p> <pre><code> sudo apt-get install -y  libncurses5-dev   u-boot-tools\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5f00\u59cb\u7f16\u8bd1\u64cd\u4f5c\u3002</p>"},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/#_3","title":"\u6700\u5c0f\u7cfb\u7edf\u7f16\u8bd1\u70e7\u5199","text":""},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/#spi-nand","title":"\u7f16\u8bd1spi nand\u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<pre><code>book@100ask:~/tina-v853$ source build/envsetup.sh \n\nYou're building on Linux\n\nLunch menu... pick a combo:\n     1  v851s-lizard-tina\n     2  v853-vision-tina\nWhich would you like?: 1 #\u8f93\u5165\u6570\u5b571 \u9009\u62e9v851s-lizard-tina\nJump to longan autoconfig\n/home/book/workspace/tina-v853/build.sh autoconfig -o openwrt -i v851s -b lizard        -n default \n\nBefore using this files, please make sure that you note the following important information.\n**********************************************************************\n\nCopyright (c) 2019-2022 Allwinner Technology Co., Ltd. ALL rights reserved.\n\nAllwinner is a trademark of Allwinner Technology Co.,Ltd., registered in\nthe the People's Republic of China and other countries.\nAll Allwinner Technology Co.,Ltd. trademarks are used with permission.\n\nDISCLAIMER\nTHIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.\nIF YOU NEED TO INTEGRATE THIRD PARTY'S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)\nIN ALLWINNERS'SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN\nALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.\nALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS\nCOVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.\nYOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY'S TECHNOLOGY.\n\n\nTHIS SOFTWARE IS PROVIDED BY ALLWINNER\"AS IS\" AND TO THE MAXIMUM EXTENT\nPERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,\nWHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING\nTHE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE\nOR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\nIN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n\n**********************************************************************\nYou can read /home/book/workspace/tina-v853/build/disclaimer/Allwinnertech_Disclaimer(Cn_En)_20181122.md for detailed information. \n\nYou read time left 8 seconds....\nI have already read, understood and accepted the above terms? [Y/N]y #\u8f93\u5165y\nYou select Yes, Build continue....\n========ACTION List: mk_autoconfig -o openwrt -i v851s -b lizard -n default;========\noptions : \nINFO: Prepare toolchain ...\nINFO: kernel defconfig: generate /home/book/workspace/tina-v853/kernel/linux-4.9/.config by /home/book/workspace/tina-v853/device/config/chips/v851s/configs/lizard/linux-4.9/config-4.9\nINFO: Prepare toolchain ...\nmake: Entering directory '/home/book/workspace/tina-v853/kernel/linux-4.9'\n  HOSTCC  scripts/basic/fixdep\n  HOSTCC  scripts/kconfig/conf.o\n  SHIPPED scripts/kconfig/zconf.tab.c\n  SHIPPED scripts/kconfig/zconf.lex.c\n  SHIPPED scripts/kconfig/zconf.hash.c\n  HOSTCC  scripts/kconfig/zconf.tab.o\n  HOSTLD  scripts/kconfig/conf\n*** Default configuration is based on '../../../../../device/config/chips/v851s/configs/lizard/linux-4.9/config-4.9'\n#\n# configuration written to .config\n#\nmake: Leaving directory '/home/book/workspace/tina-v853/kernel/linux-4.9'\nINFO: clean buildserver\n\nUsage:\n kill [options] &lt;pid&gt; [...]\n\nOptions:\n &lt;pid&gt; [...]            send signal to every &lt;pid&gt; listed\n -&lt;signal&gt;, -s, --signal &lt;signal&gt;\n                        specify the &lt;signal&gt; to be sent\n -l, --list=[&lt;signal&gt;]  list all signal names, or convert one to a name\n -L, --table            list all signal names in a nice table\n\n -h, --help     display this help and exit\n -V, --version  output version information and exit\n\nFor more details see kill(1).\nINFO: prepare_buildserver\nbook@100ask:~/tina-v853$ make\n...\nbook@100ask:~/tina-v853$ pack\n...\n</code></pre>"},{"location":"YuzukiHD-Lizard/07-TinaSDK_DevelopmentGuide/#spi-nand_1","title":"\u70e7\u5199spi nand \u6700\u5c0f\u7cfb\u7edf\u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u5728tina-v853/out/v851s/lizard/openwrt/\u76ee\u5f55\u4e0b\u8f93\u51fa v851s_linux_lizard_uart0.img \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230Windows\u7cfb\u7edf\u4e0b\u4f7f\u7528 \u4f7f\u7528 \u5168\u5fd7\u5b98\u65b9\u7684  AllwinnertechPhoeniSuit \u8fdb\u884c\u70e7\u5199\u3002 \u8be6\u7ec6\u70e7\u5199\u6b65\u9aa4\u8bf7\uff0c\u8bf7\u53c2\u8003\u5de6\u4fa7 \u5feb\u901f\u542f\u52a8 \u9875\u9762\u3002</p>"},{"location":"YuzukiHD-Lizard/08-TinaSDK_BuildBootloader/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efaBootloader","text":"<ul> <li>\u67da\u6728PI-\u8725\u8734\u5f00\u53d1\u677f\uff0cBootloader\u75314\u90e8\u5206\u7ec4\u6210\uff0c \u7b2c\u4e00\u90e8\u5206\u662f boot0 \u9636\u6bb5\uff0c\u7528\u4e8e\u521d\u59cb\u5316CPU DDR UART \u65f6\u949f\u7b49\u4e00\u4e9b\u5fc5\u8981\u5916\u8bbe\u548c\u5f15\u811a\u5206\u914d\uff0c\u4e4b\u540e\u8fdb\u5165\u7b2c\u4e8c\u90e8\u5206\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f optee  uboot  board.dtb \u8fd9\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u4e3a\u4e00\u4e2a boot_package.fex \u6587\u4ef6\u3002</li> <li>\u6240\u4ee5Bootloader\u7684\u6574\u4f53\u7684\u542f\u52a8\u6d41\u7a0b\u662f\uff0cboot0\u2192optee\u2192u-boot\u2192board.dtb\u3002</li> <li>Bootloader\u5728\u5185\u6838\u8fd0\u884c\u4e4b\u524d\u8fd0\u884c\uff0c\u53ef\u4ee5\u521d\u59cb\u5316\u786c\u4ef6\u8bbe\u5907\u3001\u5efa\u7acb\u5185\u5b58\u7a7a\u95f4\u6620 \u5c04\u56fe\uff0c\u4ece\u800c\u5c06\u7cfb\u7edf\u7684\u8f6f\u786c\u4ef6\u73af\u5883\u5e26\u5230\u4e00\u4e2a\u5408\u9002\u72b6\u6001\uff0c\u4e3a\u6700\u7ec8\u8c03\u7528 linux \u5185\u6838\u51c6\u5907\u597d\u6b63\u786e\u7684\u73af\u5883\u3002</li> </ul>"},{"location":"YuzukiHD-Lizard/08-TinaSDK_BuildBootloader/#_1","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e00\u90e8\u5206","text":""},{"location":"YuzukiHD-Lizard/08-TinaSDK_BuildBootloader/#_2","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e8c\u90e8\u5206","text":""},{"location":"YuzukiHD-Lizard/08-TinaSDK_BuildBootloader/#_3","title":"\u5355\u72ec\u7f16\u8bd1\u6253\u5305\u7b2c\u4e09\u90e8\u5206","text":""},{"location":"YuzukiHD-Lizard/08-TinaSDK_BuildBootloader/#uboot","title":"\u5355\u72ec\u7f16\u8bd1 uboot","text":"<ul> <li>\u5355\u72ec\u7f16\u8bd1 uboot\u9636\u6bb5 <pre><code>book@100ask:~/tina-v853$ source build/envsetup.sh\nbook@100ask:~/tina-v853$ lunch\n2 #\u8f93\u5165\u6570\u5b57\u9009\u62e9\u5bf9\u5e94\u5f00\u53d1\u677f\nbook@100ask:~/tina-v853$muboot\n</code></pre></li> </ul> <p>\u7f16\u8bd1uboot\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\u81ea\u52a8\u66f4\u65b0uboot binary\u5230TinaSDK/target/allwinner/$(BOARD)-common/bin/</p>"},{"location":"YuzukiHD-Lizard/08-TinaSDK_BuildBootloader/#boarddtb","title":"\u5355\u72ec\u7f16\u8bd1 board.dtb","text":"<pre><code>mboot\n</code></pre>"},{"location":"YuzukiHD-Lizard/09-TinaSDK_BuildLinuxKernel/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6253\u5305Linux Kernel","text":""},{"location":"YuzukiHD-Lizard/09-TinaSDK_BuildLinuxKernel/#_1","title":"\u7f16\u8bd1\u5404\u4e2a\u90e8\u5206","text":"<ul> <li>\u4fee\u6539\u5185\u6838\u914d\u7f6e <pre><code>book@100ask:~/tina-v853$ croot\nbook@100ask:~/tina-v853$ make kernel_menuconfig\n</code></pre></li> </ul> <p>\u53ef\u4ee5\u5728\u4e0a\u56fe\u7684\u754c\u9762\u5185\u4fee\u6539\u5185\u6838\u914d\u7f6e\u3002</p> <ul> <li>\u7f16\u8bd1\u6253\u5305\u540e\u4f1a\u5728out/v851s-perf1\u91cc\u9762\u751f\u6210\u6700\u7ec8\u7684\u955c\u50cf <pre><code>book@100ask:~/tina-v853$ make\nbook@100ask:~/tina-v853$ pack\n</code></pre></li> </ul>"},{"location":"YuzukiHD-Lizard/10-TinaSDK_BuildRootfs/","title":"\u4f7f\u7528buildroot-SDK\u7f16\u8bd1\u6784\u5efarootfs","text":"<p>Tina\u9ed8\u8ba4\u60c5\u51b5\u662f\u7f16\u8bd1\u6253\u5305\u5b8c\u6210\u5728tina-v853/out/v851s-perf1\u4f1a\u751f\u6210\u5bf9\u5e94\u7684rootfs.img</p>"},{"location":"YuzukiHD-Lizard/10-TinaSDK_BuildRootfs/#busybox","title":"\u5355\u72ec\u7f16\u8bd1\u914d\u7f6eBusyBox","text":"<p>tina\u9ed8\u8ba4\u662fBusyBox </p> <pre><code>book@100ask:~/tina-v853$ make\nbook@100ask:~/tina-v853$ pack\n</code></pre>"},{"location":"YuzukiHD-Lizard/10-TinaSDK_BuildRootfs/#_1","title":"\u6e05\u7406\u65e0\u6548\u7f13\u5b58 \u91cd\u65b0\u6253\u5305","text":"<pre><code>make clean\n</code></pre>"},{"location":"YuzukiHD-Lizard/11-Tina-SDK_DevelopmentGuide/","title":"\u4f7f\u7528Tina-SDK\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"YuzukiHD-Lizard/11-Tina-SDK_DevelopmentGuide/#_1","title":"\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<ul> <li> <p>\u8bbf\u95ee https://d1.docs.aw-ol.com/study/study_1tina/</p> </li> <li> <p>\u4f7f\u7528\u6211\u4eec\u63d0\u524d\u6574\u7406\u597d\u7684\u8d44\u6599\u5149\u76d8 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/13uKlqDXImmMl9cgKc41tZg?pwd=qcw7  \u63d0\u53d6\u7801\uff1aqcw7 </p> </li> </ul>"},{"location":"YuzukiHD-Lizard/12-1_TinaSDK_SupportWifiBluetooth/","title":"\u4f7f\u7528Tina-SDK\u652f\u6301\u542f\u52a8WiFi","text":""},{"location":"YuzukiHD-Lizard/12-1_TinaSDK_SupportWifiBluetooth/#wifi","title":"Wifi\u914d\u7f51","text":"<p>1.\u542f\u52a8WiFi</p> <pre><code>root@TinaLinux:~# ifconfig wlan0 up\n[ 1311.470054] ieee80211_do_open: vif_type=2, p2p=0, ch=3, addr=08:f9:56:88:5c:46\n[ 1311.478327] [STA] !!!xradio_vif_setup: id=0, type=2, p2p=0, addr=08:f9:56:88:5c:46\n[ 1311.491819] [AP_WRN] BSS_CHANGED_ASSOC but driver is unjoined.\n[ 1311.510396] IPv6: ADDRCONF(NETDEV_UP): wlan0: link is not ready\nroot@TinaLinux:~# ifconfig -a\nlo        Link encap:Local Loopback\n          inet addr:127.0.0.1  Mask:255.0.0.0\n          inet6 addr: ::1/128 Scope:Host\n          UP LOOPBACK RUNNING  MTU:65536  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n\np2p0      Link encap:Ethernet  HWaddr 08:F9:56:88:5C:47\n          BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n\nsit0      Link encap:IPv6-in-IPv4\n          NOARP  MTU:1480  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n\nwlan0     Link encap:Ethernet  HWaddr 08:F9:56:88:5C:46\n          UP BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n</code></pre> <p>2.\u5f00\u53d1\u677f\u5982\u4e0b\u56fe\u6240\u793a\u63a5\u5165\u5929\u7ebf</p> <p></p> <p>3.\u626b\u63cfWiFi</p> <pre><code>root@TinaLinux:/# iw wlan0 scan | grep \"SSID\"\n        SSID: Programmers\n</code></pre> <p>4.\u586b\u5199WiFi\u5bc6\u7801</p> <pre><code>root@TinaLinux:/# vim /etc/wpa_supplicant.conf\n</code></pre> <pre><code>ctrl_interface=/var/log/wpa_supplicant\nupdate_config=1\n\nnetwork={\n    ssid=\"WiFi\u540d\"\n    psk=\"\u5bc6\u7801\"\n}\n\n\u793a\u4f8b\uff1a\nctrl_interface=/var/log/wpa_supplicant\nupdate_config=1\n\nnetwork={\n    ssid=\"test\"\n    psk=\"12345678\"\n}\n</code></pre> <p>5.\u8fde\u63a5\u7f51\u7edc</p> <p>\u8fde\u63a5\u524d\u9700\u8981\u521b\u5efasocket\u901a\u4fe1\u7684\u76ee\u5f55</p> <pre><code>root@TinaLinux:/# mkdir -p /var/log/wpa_supplicant\nroot@TinaLinux:/# wpa_supplicant -B -c /etc/wpa_supplicant.conf -i wlan0\nSuccessfully initialized wpa_supplicant\nroot@TinaLinux:/# udhcpc -i wlan0\nudhcpc: started, v1.27.2\nudhcpc: sending discover\nudhcpc: sending select for 192.168.137.174\nudhcpc: lease of 192.168.137.174 obtained, lease time 604800\nudhcpc: ifconfig wlan0 192.168.137.174 netmask 255.255.255.0 broadcast +\nudhcpc: setting default routers: 192.168.137.1\nroot@TinaLinux:/# ping www.100ask.net\nPING www.100ask.net (118.25.119.100): 56 data bytes\n64 bytes from 118.25.119.100: seq=0 ttl=50 time=50.877 ms\n64 bytes from 118.25.119.100: seq=1 ttl=50 time=90.278 ms\n64 bytes from 118.25.119.100: seq=2 ttl=50 time=72.428 ms\n</code></pre>"},{"location":"YuzukiHD-Lizard/13-1_TinaSDK_SupportMIPICamera/","title":"\u4f7f\u7528Tina-SDK\u652f\u6301MIPI\u6444\u50cf\u5934","text":"<p>\u4f7f\u7528Tina-SDK\u751f\u6210\u7684\u955c\u50cf\u5df2\u7ecf\u9ed8\u8ba4\u88c5\u8f7d\u4e86GC2053\u7684MIPI\u6444\u50cf\u5934\u9a71\u52a8\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u67e5\u770b</p> <pre><code>root@TinaLinux:/# lsmod\nModule                  Size  Used by\nvin_v4l2              156643  0\ngc2053_mipi             8567  0\nvin_io                 21042  2 vin_v4l2,gc2053_mipi\nvideobuf2_v4l2          9304  1 vin_v4l2\nvideobuf2_dma_contig     8734  1 vin_v4l2\nvideobuf2_memops         948  1 videobuf2_dma_contig\nvideobuf2_core         21976  2 vin_v4l2,videobuf2_v4l2\nxradio_wlan              598  0\nxradio_core           430533  1 xradio_wlan\nxradio_mac            221572  1 xradio_core\n</code></pre> <p>**\u65ad\u7535**\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u5c06GC2053\u7684MIPI\u6444\u50cf\u5934\u8fde\u63a5\u5230\u5f00\u53d1\u677f\u4e0a\u3002\u6ce8\u610f\u4e00\u5b9a\u9700\u8981\u65ad\u7535\u540e\u624d\u80fd\u8fde\u63a5\uff0c\u5426\u5219\u4f1a\u5c06\u6444\u50cf\u5934\u70e7\u574f\u3002</p> <p></p>"},{"location":"YuzukiHD-Lizard/13-1_TinaSDK_SupportMIPICamera/#camerademomipi","title":"\u4f7f\u7528camerademo\u6d4b\u8bd5MIPI\u6444\u50cf\u5934\u9a71\u52a8","text":"<p>\u83b7\u53d6camerademo\u7684\u5e2e\u52a9\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u9009\u62e9\u5bf9\u5e94\u53c2\u6570</p> <pre><code>root@TinaLinux:/# camerademo -h\n[CAMERA]**********************************************************\n[CAMERA]*                                                        *\n[CAMERA]*              this is camera test.                      *\n[CAMERA]*                                                        *\n[CAMERA]**********************************************************\n[CAMERA]******************** camerademo help *********************\n[CAMERA] This program is a test camera.\n[CAMERA] It will query the sensor to support the resolution, output format and test frame rate.\n[CAMERA] At the same time you can modify the data to save the path and get the number of photos.\n[CAMERA] When the last parameter is debug, the output will be more detailed information\n[CAMERA] There are eight ways to run:\n[CAMERA]    1.camerademo --- use the default parameters.\n[CAMERA]    2.camerademo debug --- use the default parameters and output debug information.\n[CAMERA]    3.camerademo setting --- can choose the resolution and data format.\n[CAMERA]    4.camerademo setting debug --- setting and output debug information.\n[CAMERA]    5.camerademo NV21 640 480 30 bmp /tmp 5 --- param input mode,can save bmp or yuv.\n[CAMERA]    6.camerademo NV21 640 480 30 bmp /tmp 5 debug --- output debug information.\n[CAMERA]    7.camerademo NV21 640 480 30 bmp /tmp 5 Num --- /dev/videoNum param input mode,can save bmp or yuv.\n[CAMERA]    8.camerademo NV21 640 480 30 bmp /tmp 5 Num debug --- /dev/videoNum output debug information.\n[CAMERA]    8.camerademo NV21 640 480 30 bmp /tmp 5 Num 1 --- 1/2: chose memory: V4L2_MEMORY_MMAP/USERPTR\n[CAMERA]**********************************************************\n</code></pre> <p>\u4f7f\u7528debug\u786e\u5b9a\u6444\u50cf\u5934\u652f\u6301\u7684\u53c2\u6570\u914d\u7f6e</p> <pre><code>root@TinaLinux:/# camerademo debug\n[CAMERA]**********************************************************\n[CAMERA]*                                                        *\n[CAMERA]*              this is camera test.                      *\n[CAMERA]*                                                        *\n[CAMERA]**********************************************************\n[CAMERA]**********************************************************\n[CAMERA] open /dev/video0!\n[CAMERA]**********************************************************\n[CAMERA_DEBUG] Querey device capabilities succeed\n[CAMERA_DEBUG] cap.driver=sunxi-vin\n[CAMERA_DEBUG] cap.card=sunxi-vin\n[CAMERA_DEBUG] cap.bus_info=\n[CAMERA_DEBUG] cap.version=0x00010000\n[CAMERA_DEBUG] cap.capabilities=0x85201000\n[CAMERA]**********************************************************\n[CAMERA] The path to data saving is /tmp.\n[CAMERA] The number of captured photos is 5.\n[CAMERA] save bmp format\n[CAMERA_DEBUG]******************[   63.469141] [VIN_ERR]vin is not support this pixelformat\n********************************[   63.476141] [VIN_ERR]vin is not support this pixelformat\n********\n[CAMERA_DEBUG] enumera[   63.484878] [VIN_ERR]vin is not support this pixelformat\nte image formats\n[CAMERA_DEBUG][   63.493711] [VIN_ERR]vin is not support this pixelformat\n format index = 0, name = YUV422[   63.502495] [VIN_ERR]vin is not support this pixelformat\nP\n[CAMERA_DEBUG] format index =[   63.511287] [VIN_ERR]vin is not support this pixelformat\n 1, name = NV16\n[CAMERA_DEBUG] [   63.519961] [VIN_ERR]vin is not support this pixelformat\nformat index = 2, name = NV61\n[[   63.528991] [VIN_ERR]vin is not support this pixelformat\nCAMERA_DEBUG] format index = 3, [   63.537520] [VIN_ERR]vin is not support this pixelformat\nname = YUV420\n[CAMERA_DEBUG] fo[   63.546341] [VIN_ERR]vin is not support this pixelformat\nrmat index = 4, name = YVU420\n[[   63.555148] [VIN_ERR]vin is not support this pixelformat\nCAMERA_DEBUG] format index = 5, [   63.564044] [VIN_ERR]vin is not support this pixelformat\nname = NV12\n[CAMERA_DEBUG] format index = 6, name = NV21\n[CAMERA_DEBUG] format index = 7, name = BGGR8\n[CAMERA_DEBUG] format index = 8, name = GBRG8\n[CAMERA_DEBUG] format index = 9, name = GRBG8\n[CAMERA_DEBUG] format index = 10, name = RGGB8\n[CAMERA_DEBUG] format index = 11, name = BGGR10\n[CAMERA_DEBUG] format index = 12, name = GBRG10\n[CAMERA_DEBUG] format index = 13, name = GRBG10\n[CAMERA_DEBUG] format index = 14, name = RGGB10\n[CAMERA_DEBUG] format index = 15, name = BGGR12\n[CAMERA_DEBUG] format index = 16, name = GBRG12\n[CAMERA_DEBUG] format index = 17, name = GRBG12\n[CAMERA_DEBUG] format index = 18, name = RGGB12\n[CAMERA_DEBUG] format index = 19, name = YUYV\n[CAMERA_DEBUG] format index = 20, name = UYVY\n[CAMERA_DEBUG] format index = 21, name = VYUY\n[CAMERA_DEBUG] format index = 22, name = YVYU\n[CAMERA_DEBUG] format index = 23, name = YUYV\n[CAMERA_DEBUG] format index = 24, name = UYVY\n[CAMERA_DEBUG] format index = 25, name = VYUY\n[CAMERA_DEBUG] format index = 26, name = YVYU\n[CAMERA_DEBUG] format index = 27, name = UYVY\n[CAMERA_DEBUG] format index = 28, name = VYUY\n[CAMERA_DEBUG] format index = 29, name = YVYU\n[CAMERA_DEBUG] format index = 30, name = YUYV\n[CAMERA_DEBUG]*********************************************************\n[CAMERA_DEBUG] The sensor supports the following formats :\n[CAMERA_DEBUG] Index 0 : YUV422P.\n[CAMERA_DEBUG] Index 1 : NV16.\n[CAMERA_DEBUG] Index 2 : NV61.\n[CAMERA_DEBUG] Index 3 : YUV420.\n[CAMERA_DEBUG] Index 4 : YVU420.\n[CAMERA_DEBUG] Index 5 : NV12.\n[CAMERA_DEBUG] Index 6 : NV21.\n[CAMERA_DEBUG] Index 7 : BGGR8.\n[CAMERA_DEBUG] Index 8 : GBRG8.\n[CAMERA_DEBUG] Index 9 : GRBG8.\n[CAMERA_DEBUG] Index 10 : RGGB8.\n[CAMERA_DEBUG] Index 11 : BGGR10.\n[CAMERA_DEBUG] Index 12 : GBRG10.\n[CAMERA_DEBUG] Index 13 : GRBG10.\n[CAMERA_DEBUG] Index 14 : RGGB10.\n[CAMERA_DEBUG] Index 15 : BGGR12.\n[CAMERA_DEBUG] Index 16 : GBRG12.\n[CAMERA_DEBUG] Index 17 : GRBG12.\n[CAMERA_DEBUG] Index 18 : RGGB12.\n[CAMERA_DEBUG] Index 19 : YUYV.\n[CAMERA_DEBUG] Index 20 : UYVY.\n[CAMERA_DEBUG] Index 21 : VYUY.\n[CAMERA_DEBUG] Index 22 : YVYU.\n[CAMERA_DEBUG] Index 23 : YUYV.\n[CAMERA_DEBUG] Index 24 : UYVY.\n[CAMERA_DEBUG] Index 25 : VYUY.\n[CAMERA_DEBUG] Index 26 : YVYU.\n[CAMERA_DEBUG] Index 27 : UYVY.\n[CAMERA_DEBUG] Index 28 : VYUY.\n[CAMERA_DEBUG] Index 29 : YVYU.\n[CAMERA_DEBUG] Index 30 : YUYV.\n[CAMERA_DEBUG]**********************************************************\n[CAMERA_DEBUG] The YUV422P supports the following resolutions:\n[CAMERA_DEBUG] Index 0 : 1920 * 1088\n[CAMERA_DEBUG] Index 1 : 1920 * 1088\n[CAMERA_DEBUG] Index 2 : 1920 * 1088\n[CAMERA_DEBUG]**********************************************************\n[CAMERA_DEBUG] The NV16 supports the following resolutions:\n[CAMERA_DEBUG] Index 0 : 1920 * 1088\n[CAMERA_DEBUG] Index 1 : 1920 * 1088\n[CAMERA_DEBUG] Index 2 : 1920 * 1088\n[CAMERA_DEBUG]**********************************************************\n[CAMERA_DEBUG] The NV61 supports the following resolutions:\n[CAMERA_DEBUG] Index 0 : 1920 * 1088\n[CAMERA_DEBUG] Index 1 : 1920 * 1088\n[CAMERA_DEBUG] Index 2 : 1920 * 1088\n[CAMERA_DEBUG]**********************************************************\n[CAMERA_DEBUG] The YUV420 supports the following resolutions:\n[CAMERA_DEBUG] Index 0 : 1920 * 1088\n[CAMERA_DEBUG] Index 1 : 1920 * 1088\n[CAMERA_DEBUG] Index 2 : 1920 * 1088\n[CAMERA_DEBUG]**********************************************************\n[CAMERA_DEBUG] The YVU420 supports the following resolutions:\n[CAMERA_DEBUG] Index 0 : 1920 * 1088\n[CAMERA_DEBUG] Index 1 : 1920 * 1088\n[CAMERA_DEBUG] Index 2 : 1920 * 1088\n[CAMERA_DEBUG]**********************************************************\n[CAMERA_DEBUG] The NV12 supports the following resolutions:\n[CAMERA_DEBUG] Index 0 : 1920 * 1088\n[CAMERA_DEBUG] Index 1 : 1920 * 1088\n[CAMERA_DEBUG] Index 2 : 1920 * 1088\n[CAMERA_DEBUG]**********************************************************\n[CAMERA_DEBUG] The NV21 supports the following resolutions:\n[CAMERA_DEBUG] Index 0 : 1920 * 1088\n[CAMERA_DEBUG] Index 1 : 1920 * 1088\n[CAMERA_DEBUG] Index 2 : 1920 * 1088\n[CAMERA_DEBUG]**********************************************************\n</code></pre> <p>\u6302\u8f7dTF\u5361\u5206\u533a</p> <pre><code>root@TinaLinux:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\n/dev/root                16.8M     16.8M         0 100% /rom\ndevtmpfs                 26.0M         0     26.0M   0% /dev\ntmpfs                    27.2M         0     27.2M   0% /tmp\n/dev/by-name/rootfs_data\n                         43.5M    136.0K     41.1M   0% /overlay\noverlayfs:/overlay       43.5M    136.0K     41.1M   0% /\ntmpfs                    27.2M         0     27.2M   0% /run\n/dev/ubi0_6              29.9M     24.0K     28.3M   0% /mnt/UDISK\n/dev/mmcblk0p1            3.7G    128.0K      3.7G   0% /mnt/extsd\nroot@TinaLinux:/# mount /dev/mmcblk0p1 /mnt/\n</code></pre> <p>\u4f7f\u7528GC2053\u6240\u652f\u6301\u7684\u53c2\u6570\u62cd\u6444\u4e94\u5f20\u7167\u7247\uff0c\u5e76\u5b58\u653e\u5230TF\u5361\u5206\u533a/mnt\u76ee\u5f55\u4e0b</p> <pre><code>root@TinaLinux:/# camerademo NV21 1920 1088 30 bmp /mnt 5\n[CAMERA]**********************************************************\n[CAMERA]*                                                        *\n[CAMERA]*              this is camera test.                      *\n[CAMERA]*                                                        *\n[CAMERA]**********************************************************\n[CAMERA]**********************************************************\n[CAMERA] open /dev/video0!\n[CAMERA]**********************************************************\n[CAMERA]**********************************************************\n[CAMERA] The path to data saving is /mnt.\n[CAMERA] The number of captured photos is 5.\n[CAMERA] save bmp format\n[   81.016864] [VIN_ERR]vin is not support this pixelformat\n[   81.023161] [VIN_ERR]vin is not support this pixelformat\n[   81.029406] [VIN_ERR]vin is not support this pixelformat\n[   81.035712] [VIN_ERR]vin is not support this pixelformat\n[   81.041841] [VIN_ERR]vin is not support this pixelformat\n[   81.048112] [VIN_ERR]vin is not support this pixelformat\n[   81.054244] [VIN_ERR]vin is not support this pixelformat\n[   81.060641] [VIN_ERR]vin is not support this pixelformat\n[   81.066969] [VIN_ERR]vin is not support this pixelformat\n[   81.073229] [VIN_ERR]vin is not support this pixelformat\n[   81.079441] [VIN_ERR]vin is not support this pixelformat\n[   81.085738] [VIN_ERR]vin is not support this pixelformat\n[CAMERA]**********************************************************\n[CAMERA] Using format parameters NV21.\n[CAMERA] camera pixelformat: NV21\n[CAMERA] Resolution size : 1920 * 1088\n[CAMERA] The photo save path is /mnt.\n[CAMERA] The number of photos taken is 5.\nbegin ion_alloc_open\npid: 992, g_alloc_context = 0xb6f28f70\n[CAMERA] Camera capture framerate is 20/1\n[CAMERA] VIDIOC_S_FMT succeed\n[CAMERA] fmt.type = 9\n[CAMERA] fmt.fmt.pix_mp.width = 1920\n[CAMERA] fmt.fmt.pix_mp.height = 1088\n[CAMERA] fmt.fmt.pix_mp.pixelformat = NV21\n[CAMERA] fmt.fmt.pix_mp.field = 1\n[CAMERA] stream on succeed\n[CAMERA] camera0 capture num is [0]\n[CAMERA_PROMPT] the time interval from the start to the first frame is 178 ms\n[CAMERA] camera0 capture num is [1]\n[CAMERA] camera0 capture num is [2]\n[CAMERA] camera0 capture num is [3]\n[CAMERA] camera0 capture num is [4]\n[CAMERA] Capture thread finish\n[CAMERA] close /dev/video0\nion_alloc_close\npid: 992, release g_alloc_context = 0xb6f28f70\n</code></pre> <p>\u62cd\u6444\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u5378\u8f7d\u5206\u533a\uff0c\u53d6\u4e0bTF\u5361\uff0c\u4f7f\u7528\u8bfb\u5361\u5668\u5373\u53ef\u5728\u7535\u8111\u7aef\u67e5\u770b\u4f7f\u7528MIPI\u6444\u50cf\u5934\u62cd\u6444\u7684\u7167\u7247</p> <pre><code>root@TinaLinux:/# umount /mnt/\n</code></pre>"},{"location":"YuzukiHD-Lizard/14-1_TinaSDK_SupportMIPIDisplay/","title":"\u4f7f\u7528Tina-SDK\u652f\u6301MIPI\u5c4f","text":""}]}